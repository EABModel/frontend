{"version":3,"sources":["redux/slices/modalSlice.ts","redux/interactors/base.ts","redux/interactors/modalInteractors.ts","redux/slices/base.ts","redux/slices/catalogueSlice.ts","services/config.ts","services/catalogueServices.ts","redux/interactors/catalogueInteractors.ts","styles/CatalogueCardStyles.ts","components/HomeComponents/CatalogueCard.tsx","redux/types/UserTypes.ts","styles/CatalogueStyles.ts","components/HomeComponents/Catalogue.tsx","styles/LogInStyles.ts","redux/slices/userSlice.ts","services/userServices.ts","redux/interactors/userInteractors.ts","components/NavbarComponents/UserLogin.tsx","components/HomeComponents/ShowHomeAlert.tsx","components/HomeComponents/IdleVideoPlayer.tsx","screens/Home.tsx","styles/InformationStyles.ts","screens/Information.tsx","styles/NavBarStyles.ts","navigation/NavBar.tsx","redux/slices/companySlice.ts","services/companyServices.ts","redux/interactors/companyInteractors.ts","components/CompanyAuthComponents/CompanyLoginForm.tsx","styles/CompanyAuthStyles.ts","redux/slices/shopSlice.ts","services/shopServices.ts","redux/interactors/shopInteractors.ts","components/CompanyAuthComponents/ShopsList.tsx","components/CompanyAuthComponents/CompanyRegisterForm.tsx","screens/CompanyAuth.tsx","styles/AdministrationPortalStyles.ts","components/AdministrationPortalComponents/MenuSection.tsx","components/AdministrationPortalComponents/CompanyLogout.tsx","screens/AdministrationPortal.tsx","utils/videoHelpers/setMediaSources.ts","services/firebase/config.ts","components/GeneralUseComponents/SlidingMessage.tsx","redux/slices/connectionSlice.ts","services/webRTC/config.ts","redux/interactors/connectionInteractors.ts","utils/videoHelpers/takeCall.ts","components/CallsMenuComponents/EmployeeVideoChat.tsx","screens/CallsMenu.tsx","styles/AccordionMenuStyles.ts","components/GeneralUseComponents/DissmissibleSuccessAlert.tsx","utils/globalHelpers/verifyString.ts","components/CatalogueMenu/ProductRegister.tsx","components/CatalogueMenu/ProductRegisterCSV.tsx","components/CatalogueMenu/ProductDelete.tsx","components/CatalogueMenu/ProductEdit.tsx","components/CatalogueMenu/ProductsEdit.tsx","screens/CatalogueMenu.tsx","components/EmployeesMenu/ReassignShop.tsx","components/EmployeesMenu/CompanyUserRow.tsx","components/EmployeesMenu/CompanyUsers.tsx","styles/UserRegisterStyles.ts","components/EmployeesMenu/UserRegister.tsx","screens/EmployeesMenu.tsx","components/ShopMenuComponents/ShopRegister.tsx","components/ShopMenuComponents/SwitchShop.tsx","components/ShopMenuComponents/ShopItem.tsx","components/ShopMenuComponents/ShowAllShops.tsx","screens/ShopMenu.tsx","styles/ShopDevicesStyles.tsx","components/ShopMenuComponents/AccordionItem.tsx","screens/ShopDevices.tsx","screens/ProductDetails.tsx","styles/ClientSurveyStyles.tsx","services/callServices.ts","components/CallsMenuComponents/CallClientSurvey.tsx","screens/PreCallScreen.tsx","utils/videoHelpers/beginCall.ts","components/AssistanceTabletComponents/CustomerCall.tsx","screens/AssistanceTablet.tsx","navigation/SidebarOptions.tsx","components/GeneralUseComponents/Successes/CompanySuccess.tsx","components/GeneralUseComponents/Successes/CatalogueSuccess.tsx","components/GeneralUseComponents/Successes/ShopSuccess.tsx","components/GeneralUseComponents/Successes/UserSuccess.tsx","components/GeneralUseComponents/Successes/SuccessHandler.tsx","components/GeneralUseComponents/Errors/CompanyError.tsx","components/GeneralUseComponents/Errors/CatalogueError.tsx","components/GeneralUseComponents/Errors/ShopError.tsx","components/GeneralUseComponents/Errors/UserError.tsx","components/GeneralUseComponents/Errors/ErrorHandler.tsx","navigation/Routes.tsx","App.tsx","redux/store.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["modal","createSlice","name","initialState","open","reducers","showLogIn","state","closeLogIn","modalReducer","reducer","modalActions","actions","buildInteractor","loadingAction","successAction","errorAction","request","params","dispatch","a","response","data","error","message","buildInteractorNoParams","buildInteractorDirectAction","buildInteractorDirectActionNoParams","showPopUpInteractor","closePopUpInteractor","baseSuccessReducer","requestName","resourceName","action","payload","loading","success","baseLoadingReducer","baseErrorReducer","baseResetReducer","baseRequestStatusReducers","successReducer","loadingReducer","errorReducer","resetReducer","requestNameFirstCapital","toUpperCase","slice","products","getCatalogueStatus","addProductToCatalogueStatus","addProductsToCatalogueStatus","deleteProductFromCatalogueStatus","editProductFromCatalogueStatus","catalogueSlice","newArray","filter","product","id","resetCatalogue","catalogueReducer","catalogueActions","axiosBaseInstance","axios","create","baseURL","postProductRegister","authFields","token","localStorage","getItem","headers","Token","method","url","shopId","brand","os","color","inches","Number","price","image","postProductsRegister","catalogueService","getShopProducts","postProductDelete","productId","putProductEdit","getCatalogueInteractor","loadingGetCatalogue","successGetCatalogue","errorGetCatalogue","catalogueServices","addProductToCatalogueInteractor","loadingAddProductToCatalogue","successAddProductToCatalogue","errorAddProductToCatalogue","addProductsToCatalogueInteractor","loadingAddProductsToCatalogue","successAddProductsToCatalogue","errorAddProductsToCatalogue","deleteProductFromCatalogueInteractor","loadingDeleteProductFromCatalogue","successDeleteProductFromCatalogue","errorDeleteProductFromCatalogue","editProductFromCatalogueInteractor","loadingEditProductFromCatalogue","successEditProductFromCatalogue","errorEditProductFromCatalogue","resetGetCatalogueInteractor","resetGetCatalogue","resetAddProductToCatalogueInteractor","resetAddProductToCatalogue","resetAddProductsToCatalogueInteractor","resetAddProductsToCatalogue","resetDeleteProductFromCatalogueInteractor","resetDeleteProductFromCatalogue","resetEditProductFromCatalogueInteractor","resetEditProductFromCatalogue","resetCatalogueInteractor","useStyles","makeStyles","root","width","infoContainer","textAlign","media","height","CatalogueCard","specs","styles","UseStyles","history","useHistory","goToDetails","useCallback","push","Card","className","CardActionArea","style","CardMedia","title","CardContent","Typography","gutterBottom","variant","component","CardActions","Button","size","onClick","defaultProps","Session","theme","createStyles","flexGrow","paper","padding","spacing","palette","text","secondary","catalogContainer","margin","cardContainer","boxShadow","connect","catalogue","props","classes","Box","display","flexWrap","justifyContent","m","p","bgcolor","map","marginTop","flexDirection","alignItems","avatar","backgroundColor","main","form","submit","popUp","position","top","left","transform","cancelIcon","right","alertMessage","username","email","companyId","sessionType","ANONYMOUS","loginUserStatus","logoutUserStatus","registerUserStatus","deleteUserStatus","reassignUserShopStatus","userSlice","resetUserStatus","resetUser","userReducer","userActions","usersService","getUser","userId","postUserLogin","password","setItem","user","postUserRegister","deleteUser","then","catch","reassignUserShop","registerUserInteractor","loadingRegisterUser","successRegisterUser","errorRegisterUser","userServices","loginUserInteractor","loadingLoginUser","successLoginUser","errorLoginUser","logoutUserInteractor","loadingLogoutUser","successLogoutUser","errorLogoutUser","deleteUserInteractor","loadingDeleteUser","successDeleteUser","errorDeleteUser","reassignUserShopInteractor","loadingReassignUserShop","successReassignUserShop","errorReassignUserShop","resetRegisterUserInteractor","resetRegisterUser","resetLoginUserInteractor","resetLoginUser","resetLogoutUserInteractor","resetLogoutUser","resetUserStatusInteractor","resetUserInteractor","resetDeleteUserInteractor","resetDeleteUser","resetReassignUserInteractor","resetReassignUserShop","Copyright","align","Link","href","Date","getFullYear","Severity","bindActionCreators","userInteractors","modalInteractors","useState","setEmail","setPassword","useEffect","closePopUp","Cancel","fontSize","CssBaseline","CircularProgress","TextField","required","fullWidth","label","autoComplete","autoFocus","onChange","event","target","value","type","disabled","mt","severity","alertTitle","alertBody","hasLoginButton","Alert","AlertTitle","IdleHandler","idleValue","toggleIdle","videoShowing","setVideoShowing","useIdleTimer","timeout","onIdle","onActive","debounce","springProps","from","opacity","to","div","playing","loop","muted","controls","IdleVideoPlayer","React","memo","company","shop","catalogueInteractors","showCreateShopMessage","setShowCreateShopMessage","showCreateProductMessage","setShowCreateProductMessage","isIdle","setIsIdle","registerCompanyStatus","shops","length","LinearProgress","warning","info","button","marginRight","actionsContainer","marginBottom","textContainer","resetContainer","marginLeft","getStepContent","step","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","Stepper","orientation","index","Step","StepLabel","StepContent","Paper","square","elevation","go","menuButton","btn","AppBar","Toolbar","removeItem","replace","IconButton","users","loginCompanyStatus","logoutCompanyStatus","getCompanyUsersStatus","getCompanyShopsStatus","companySlice","resetCompanyStatus","resetCompany","removeUserCompany","handleUserReassign","companyReducer","companyActions","companyServices","postCompanyLogin","postCompanyRegister","getCompanyUsers","getCompanyShops","registerCompanyInteractor","loadingRegisterCompany","successRegisterCompany","errorRegisterCompany","loginCompanyInteractor","loadingLoginCompany","successLoginCompany","errorLoginCompany","logoutCompanyInteractor","loadingLogoutCompany","successLogoutCompany","errorLogoutCompany","getCompanyUsersInteractor","loadingGetCompanyUsers","successGetCompanyUsers","errorGetCompanyUsers","getCompanyShopsInteractor","loadingGetCompanyShops","successGetCompanyShops","errorGetCompanyShops","removeCompanyUserInteractor","resetRegisterCompanyInteractor","resetRegisterCompany","resetLoginCompanyInteractor","resetLoginCompany","resetLogoutCompanyInteractor","resetLogoutCompany","resetCompanyStatusInteractor","resetCompanyInteractor","handleUserReassignInteractor","companyInteractors","setName","FormControlLabel","control","Checkbox","toggleForm","page","container","borderRadius","overflowY","containerList","shopContainer","location","buttonContainer","bottom","switchFormTypeContainer","addShopStatus","removeShopStatus","updateShopStatus","shopSlice","setShops","setShop","resetShopStatus","resetShop","shopReducer","shopActions","shopServices","postShopRegister","addShopInteractor","loadingAddShop","successAddShop","errorAddShop","removeShopInteractor","loadingRemoveShop","successRemoveShop","errorRemoveShop","updateShopInteractor","loadingUpdateShop","successUpdateShop","errorUpdateShop","setShopsInteractor","resetAddShopInteractor","resetAddShop","resetRemoveShopInteractor","resetRemoveShop","resetUpdateShopInteractor","resetUpdateShop","setShopInteractor","resetShopStatusInteractor","resetShopInteractor","shopInteractors","login","confirmPassword","setConfirmPassword","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","registerCondition","test","String","toLowerCase","validateEmail","nodeRef","useRef","showShops","setShowShops","isSigninIn","setIsSigningIn","SwitchTransition","mode","CSSTransition","enter","exit","classNames","ref","ShopsList","mainContainer","section","MenuSection","body","callback","CompanyLogout","setSources","peerConnection","webcamVideo","remoteVideo","navigator","mediaDevices","getUserMedia","video","audio","localStream","remoteStream","MediaStream","getTracks","forEach","track","addTrack","ontrack","streams","srcObject","firebase","apps","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","MessageType","firestore","storage","RTCPeerConnection","iceServers","urls","iceCandidatePoolSize","hangup","connection","addLocalStream","removeLocalStream","addRemoteStream","removeRemoteStream","resetStreamConnection","setCallStateTrue","setCallStateFalse","connectionReducer","connectionActions","setLocalStreamInteractor","resetLocalStreamInteractor","setRemoteStreamInteractor","resetRemoteStreamInteractor","resetStreamConnectionInteractor","setCallStateTrueInteractor","setCallStateFalseInteractor","takeCall","callId","callDocument","collection","doc","answerCandidates","offerCandidates","onicecandidate","candidate","add","toJSON","get","callData","offerDescription","offer","setRemoteDescription","RTCSessionDescription","createAnswer","answerDescription","setLocalDescription","answer","sdp","update","onSnapshot","snapshot","docChanges","change","addIceCandidate","RTCIceCandidate","connectionInteractors","current","answerCall","hangupCall","console","log","delete","setOnCall","autoPlay","playsInline","requests","setRequests","onCall","setLoading","refRequests","unsubscribe","status","answered","inProgress","oldArray","includes","item","requestId","List","ListItem","ListItemIcon","Assistant","ListItemText","primary","VideoCall","heading","flexBasis","flexShrink","secondaryHeading","formControl","minWidth","fab","DissmisibleSuccessAlert","openedStateInParent","setOpen","Collapse","in","aria-label","setTimeout","verifyString","admissible","expanded","handleChange","panel","summary","setBrand","setOS","setColor","setInches","setPrice","setImage","showSuccessMessage","setShowSuccessMessage","handleCancelCreate","onFileChange","file","files","storageRef","fileRef","child","put","getDownloadURL","fieldsVerified","Accordion","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","aria-controls","AccordionDetails","FormControl","InputLabel","Select","labelId","handleOS","MenuItem","htmlFor","Fab","Divider","AccordionActions","productAuthFields","Math","trunc","parseFloat","toString","csvData","setData","showErrorMessage","setShowErrorMessage","onDrop","onError","err","addRemoveButton","dataRow","validated","Object","values","undefined","isValid","dense","ListItemSecondaryAction","setExpanded","isExpanded","setProducts","CatalogueMenu","defaultId","selectedShop","setSelectedShop","menuItems","x","deleted","setDeleted","TableRow","TableCell","scope","deleteBtn","TableContainer","Table","TableHead","TableBody","row","setUsername","userAuthFields","EmployeesMenu","shopName","setShopName","shopLocation","setShopLocation","shopAuthFields","setValue","toSwitchShop","setToSwitchShop","RadioGroup","foundShop","find","elem","Radio","ShopItem","ShopMenu","useRowStyles","borderBottom","AccordionItem","device","Fragment","paddingBottom","paddingTop","colSpan","ShopDevices","window","pathname","split","devices","setDevices","setProduct","filteredProduct","goToCallScreen","src","alt","background","border","shadows","callServices","postCallRegister","employeeId","rating","date","addRating","ratingValue","reply1","setReply1","reply2","setReply2","reply3","setReply3","handleClose","handleCancel","handleRating","sendSurvey","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","mb","borderColor","Rating","defaultValue","precision","emptyIcon","newValue","stateCallId","setStateCallId","surveyShowing","setSurveyShowing","set","updatedAt","createCall","callAuthFields","beginCall","setIsOnCall","callsDocument","createOffer","currentRemoteDescription","isOnCall","callInput","startCall","currentCallId","currentCall","setCurrentCall","activeCall","setActiveCall","reload","SlidingMessage","time","animationTimeout","isVisible","setIsVisible","transition","useTransition","y","leave","clearTimeout","CompanySuccess","timeWithMargin","successMessage","setSuccessMessage","SUCCESS","CatalogueSuccess","ShopSuccess","UserSuccess","SuccessHandler","CompanyError","errorMessage","setErrorMessage","ERROR","CatalogueError","ShopError","UserError","ErrorHandler","EmployeeRoute","Component","rest","useSelector","render","AdministratorRoute","Routes","leftOpen","setLeftOpen","isOpen","basename","edge","path","exact","CompanyAuth","Home","PreCallScreen","Information","ProductDetails","AssistanceTablet","AdministrationPortal","CallsMenu","App","persistConfig","key","whitelist","RootReducer","combineReducers","RootReducerPersistor","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","storePersistor","persistStore","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","document","getElementById","exec","hash","ReactDOM","persistor","URL","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.fbd050b0.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { PopUpState } from '../types/ModalTypes';\n\nconst initialState: PopUpState = {\n  open: false,\n};\n\nconst modal = createSlice({\n  name: 'modal',\n  initialState,\n  reducers: {\n    showLogIn: (state: PopUpState) => {\n      return {\n        ...state,\n        open: true,\n      };\n    },\n    closeLogIn: (state: PopUpState) => {\n      return {\n        ...state,\n        open: false,\n      };\n    },\n  },\n});\n\nexport const modalReducer = modal.reducer;\nexport const modalActions = modal.actions;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { ActionCreatorWithoutPayload, ActionCreatorWithPayload } from '@reduxjs/toolkit';\n\nexport const buildInteractor =\n  (\n    loadingAction: ActionCreatorWithoutPayload,\n    successAction: ActionCreatorWithPayload<any>,\n    errorAction: ActionCreatorWithPayload<any>,\n    request: ((args: any) => Promise<any>) | null,\n  ) =>\n  (params: any) => {\n    return async function (dispatch: any) {\n      dispatch(loadingAction());\n      try {\n        const response = await request!(params);\n        dispatch(successAction(response));\n      } catch (error) {\n        dispatch(errorAction(error?.response?.data?.error?.message));\n      }\n    };\n  };\n\nexport const buildInteractorNoParams =\n  (\n    loadingAction: ActionCreatorWithoutPayload,\n    successAction: ActionCreatorWithPayload<any>,\n    errorAction: ActionCreatorWithPayload<any>,\n    request: (() => Promise<any>) | null,\n  ) =>\n  () => {\n    return async function (dispatch: any) {\n      dispatch(loadingAction());\n      try {\n        let response: any;\n        if (request) {\n          response = await request!();\n        }\n        dispatch(successAction(response));\n      } catch (error) {\n        dispatch(errorAction(error?.response?.data?.error?.message));\n      }\n    };\n  };\n\nexport const buildInteractorDirectAction = (request: ActionCreatorWithPayload<any>) => (params: any) => {\n  return (dispatch: any) => {\n    dispatch(request(params));\n  };\n};\n\nexport const buildInteractorDirectActionNoParams = (request: ActionCreatorWithoutPayload) => () => {\n  return (dispatch: any) => {\n    dispatch(request());\n  };\n};\n","import { modalActions } from '../slices/modalSlice';\nimport { buildInteractorDirectActionNoParams } from './base';\n\nexport const showPopUpInteractor = buildInteractorDirectActionNoParams(modalActions.showLogIn);\n\nexport const closePopUpInteractor = buildInteractorDirectActionNoParams(modalActions.closeLogIn);\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nexport interface Action {\n  payload: any;\n  type: string;\n}\n\nconst baseSuccessReducer =\n  (requestName: string, initialState: any, resourceName: string) => (state: typeof initialState, action: Action) => {\n    return {\n      ...state,\n      [resourceName]: action.payload,\n      [`${requestName}Status`]: {\n        loading: false,\n        success: true,\n        error: false,\n      },\n    };\n  };\n\nconst baseLoadingReducer = (initialState: any, requestName: string) => (state: typeof initialState) => {\n  return {\n    ...state,\n    [`${requestName}Status`]: { loading: true, success: false, error: false },\n  };\n};\n\nconst baseErrorReducer = (initialState: any, requestName: string) => (state: typeof initialState, action: Action) => {\n  return {\n    ...state,\n    [`${requestName}Status`]: {\n      loading: false,\n      success: false,\n      error: action.payload || true,\n    },\n  };\n};\n\nconst baseResetReducer = (initialState: any, requestName: string) => (state: typeof initialState) => {\n  return {\n    ...state,\n    [`${requestName}Status`]: initialState[`${requestName}Status`],\n  };\n};\n\nexport const baseRequestStatusReducers = (\n  requestName: string,\n  initialState: any,\n  resourceName: string | null,\n  successReducer = baseSuccessReducer(requestName, initialState, resourceName!),\n  loadingReducer = baseLoadingReducer(initialState, requestName),\n  errorReducer = baseErrorReducer(initialState, requestName),\n  resetReducer = baseResetReducer(initialState, requestName),\n): any => {\n  const requestNameFirstCapital = requestName[0].toUpperCase() + requestName.slice(1);\n  return {\n    [`loading${requestNameFirstCapital}`]: loadingReducer,\n    [`success${requestNameFirstCapital}`]: successReducer,\n    [`error${requestNameFirstCapital}`]: errorReducer,\n    [`reset${requestNameFirstCapital}`]: resetReducer,\n  };\n};\n","import { CatalogueState } from '../types/CatalogueTypes';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { Action, baseRequestStatusReducers } from './base';\n\nconst initialState: CatalogueState = {\n  products: [],\n  getCatalogueStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  addProductToCatalogueStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  addProductsToCatalogueStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  deleteProductFromCatalogueStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  editProductFromCatalogueStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n};\n\nconst successGetCatalogue = (state: CatalogueState, action: Action) => {\n  return {\n    ...state,\n    products: [...action?.payload],\n    getCatalogueStatus: { loading: false, success: true, error: false },\n  };\n};\n\nconst successAddProductToCatalogue = (state: CatalogueState, action: Action) => {\n  return {\n    ...state,\n    products: [...state.products, action.payload],\n    addProductToCatalogueStatus: {\n      loading: false,\n      success: true,\n      error: false,\n    },\n  };\n};\n\nconst successAddProductsToCatalogue = (state: CatalogueState, action: Action) => {\n  return {\n    ...state,\n    products: action.payload,\n    addProductsToCatalogueStatus: {\n      loading: false,\n      success: true,\n      error: false,\n    },\n  };\n};\n\nconst successDeleteProductFromCatalogue = (state: CatalogueState, action: Action) => {\n  const newArray = state.products.filter((product) => product.id !== action?.payload?.id);\n  return {\n    ...state,\n    products: newArray,\n    deleteProductFromCatalogueStatus: {\n      loading: false,\n      success: true,\n      error: false,\n    },\n  };\n};\n\nconst successEditProductFromCatalogue = (state: CatalogueState, action: Action) => {\n  const newArray = state.products.filter((product) => product.id !== action?.payload?.id);\n  return {\n    ...state,\n    products: newArray,\n    editProductFromCatalogueStatus: {\n      loading: false,\n      success: true,\n      error: false,\n    },\n  };\n};\n\nconst catalogueSlice = createSlice({\n  name: 'catalogue',\n  initialState,\n  reducers: {\n    ...baseRequestStatusReducers('getCatalogue', initialState, null, successGetCatalogue),\n    ...baseRequestStatusReducers('addProductToCatalogue', initialState, null, successAddProductToCatalogue),\n    ...baseRequestStatusReducers('addProductsToCatalogue', initialState, null, successAddProductsToCatalogue),\n    ...baseRequestStatusReducers('deleteProductFromCatalogue', initialState, null, successDeleteProductFromCatalogue),\n    ...baseRequestStatusReducers('editProductFromCatalogue', initialState, null, successEditProductFromCatalogue),\n    resetCatalogue: (state: CatalogueState) => {\n      return {\n        ...state,\n        ...initialState,\n        // ...state.products,\n      };\n    },\n  },\n});\n\nexport const catalogueReducer = catalogueSlice.reducer;\nexport const catalogueActions = catalogueSlice.actions;\n","import axios from 'axios';\n\nconst developmentURL = 'http://localhost';\nconst productionURL = 'https://eabmodel.herokuapp.com/';\n\nexport const axiosBaseInstance = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? productionURL : developmentURL,\n});\n","/* eslint-disable no-useless-catch */\nimport { AxiosResponse } from 'axios';\nimport { ProductPostFields, Product, ProductPutFields } from '../redux/types/CatalogueTypes';\nimport { axiosBaseInstance } from './config';\n\nconst postProductRegister = async (authFields: ProductPostFields): Promise<any> => {\n  const token = localStorage.getItem('Token');\n  try {\n    const response: AxiosResponse<any> = await axiosBaseInstance({\n      headers: { 'Content-Type': 'application/json', Token: token },\n      method: 'post',\n      url: '/catalogue/add-single-product',\n      data: {\n        shopId: authFields.shopId,\n        name: authFields.name,\n        brand: authFields.brand,\n        os: authFields.os,\n        color: authFields.color,\n        inches: Number(authFields.inches),\n        price: Number(authFields.price),\n        image: authFields.image,\n      },\n    });\n    return response?.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst postProductsRegister = async (products: ProductPostFields[]): Promise<any> => {\n  const token = localStorage.getItem('Token');\n  try {\n    const response: AxiosResponse<any> = await axiosBaseInstance({\n      headers: { 'Content-Type': 'application/json', Token: token },\n      method: 'post',\n      url: '/catalogue/add-many-products',\n      data: products,\n    });\n    return response?.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst getShopProducts = async (shopId: string): Promise<any> => {\n  try {\n    const response: AxiosResponse<Product[]> = await axiosBaseInstance({\n      headers: { 'Content-Type': 'application/json' },\n      method: 'get',\n      url: `/catalogue/shop/${shopId}`,\n    });\n    return response?.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst postProductDelete = async (productId: string): Promise<any> => {\n  try {\n    const response: AxiosResponse<any> = await axiosBaseInstance({\n      headers: { 'Content-Type': 'application/json' },\n      method: 'delete',\n      url: `/catalogue/delete-product/${productId}`,\n    });\n    return response?.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst putProductEdit = async (authFields: ProductPutFields): Promise<any> => {\n  const token = localStorage.getItem('Token');\n  try {\n    const response: AxiosResponse<any> = await axiosBaseInstance({\n      headers: { 'Content-Type': 'application/json', Token: token },\n      method: 'put',\n      url: `/catalogue/edit-product/${authFields.id}`,\n      data: {\n        name: authFields.name,\n        brand: authFields.brand,\n        os: authFields.os,\n        color: authFields.color,\n        inches: Number(authFields.inches),\n        price: Number(authFields.price),\n        image: authFields.image,\n      },\n    });\n    return response?.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst catalogueService = {\n  postProductRegister,\n  getShopProducts,\n  postProductsRegister,\n  postProductDelete,\n  putProductEdit,\n};\n\nexport default catalogueService;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck projectActions properties generated at runtime\nimport { catalogueActions } from '../slices/catalogueSlice';\nimport catalogueServices from '../../services/catalogueServices';\nimport { buildInteractor, buildInteractorDirectActionNoParams } from './base';\n\nexport const getCatalogueInteractor = buildInteractor(\n  catalogueActions.loadingGetCatalogue,\n  catalogueActions.successGetCatalogue,\n  catalogueActions.errorGetCatalogue,\n  catalogueServices.getShopProducts,\n);\n\nexport const addProductToCatalogueInteractor = buildInteractor(\n  catalogueActions.loadingAddProductToCatalogue,\n  catalogueActions.successAddProductToCatalogue,\n  catalogueActions.errorAddProductToCatalogue,\n  catalogueServices.postProductRegister,\n);\n\nexport const addProductsToCatalogueInteractor = buildInteractor(\n  catalogueActions.loadingAddProductsToCatalogue,\n  catalogueActions.successAddProductsToCatalogue,\n  catalogueActions.errorAddProductsToCatalogue,\n  catalogueServices.postProductsRegister,\n);\n\nexport const deleteProductFromCatalogueInteractor = buildInteractor(\n  catalogueActions.loadingDeleteProductFromCatalogue,\n  catalogueActions.successDeleteProductFromCatalogue,\n  catalogueActions.errorDeleteProductFromCatalogue,\n  catalogueServices.postProductDelete,\n);\n\nexport const editProductFromCatalogueInteractor = buildInteractor(\n  catalogueActions.loadingEditProductFromCatalogue,\n  catalogueActions.successEditProductFromCatalogue,\n  catalogueActions.errorEditProductFromCatalogue,\n  catalogueServices.putProductEdit,\n);\n\nexport const resetGetCatalogueInteractor = buildInteractorDirectActionNoParams(catalogueActions.resetGetCatalogue);\n\nexport const resetAddProductToCatalogueInteractor = buildInteractorDirectActionNoParams(\n  catalogueActions.resetAddProductToCatalogue,\n);\n\nexport const resetAddProductsToCatalogueInteractor = buildInteractorDirectActionNoParams(\n  catalogueActions.resetAddProductsToCatalogue,\n);\n\nexport const resetDeleteProductFromCatalogueInteractor = buildInteractorDirectActionNoParams(\n  catalogueActions.resetDeleteProductFromCatalogue,\n);\n\nexport const resetEditProductFromCatalogueInteractor = buildInteractorDirectActionNoParams(\n  catalogueActions.resetEditProductFromCatalogue,\n);\n\nexport const resetCatalogueInteractor = buildInteractorDirectActionNoParams(catalogueActions.resetCatalogue);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 320,\n  },\n  infoContainer: {\n    textAlign: 'left',\n  },\n  media: {\n    height: 300,\n  },\n});\n\nexport default useStyles;\n","import React, { FC, useCallback } from 'react';\nimport UseStyles from '../../styles/CatalogueCardStyles';\nimport { useHistory } from 'react-router-dom';\nimport { Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\n\ninterface Props {\n  specs: {\n    id: string;\n    name: string;\n    brand: string;\n    os: string;\n    color: string;\n    inches: number;\n    price: number;\n    image: string;\n  };\n}\n\nexport const CatalogueCard: FC<Props> = ({ specs }: Props) => {\n  const styles = UseStyles();\n  const history = useHistory();\n\n  const goToDetails = useCallback((productId: string) => {\n    history.push(`product/${productId}/details`);\n  }, []);\n\n  return (\n    <Card className={styles.root}>\n      <CardActionArea style={{ textAlign: 'left' }}>\n        <CardMedia className={styles.media} image={specs?.image} title=\"Device\" />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {specs.name}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n            {specs.brand}\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\">\n            {specs.os} {specs.color}\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\">\n            {specs.inches} inches display\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={() => goToDetails(specs.id)}>\n          Details\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nCatalogueCard.defaultProps = {\n  specs: {\n    id: '0',\n    name: 'Defaut Device',\n    brand: 'Default Brand',\n    os: 'Default OS',\n    color: 'Default Color',\n    inches: 5,\n    price: 0,\n    image: 'image url',\n  },\n};\n","import { BaseRequestStatus } from './base';\n\nexport interface UserState {\n  id: string;\n  username: string;\n  email: string;\n  companyId: string;\n  shopId: string;\n  sessionType: Session;\n  loginUserStatus: BaseRequestStatus;\n  logoutUserStatus: BaseRequestStatus;\n  registerUserStatus: BaseRequestStatus;\n  deleteUserStatus: BaseRequestStatus;\n  reassignUserShopStatus: BaseRequestStatus;\n}\n\nexport interface PostUserFields {\n  username: string;\n  email: string;\n  password: string;\n  shopId: string;\n  companyId: string;\n}\n\nexport interface ReassignUserFields {\n  userId: string;\n  shopId: string;\n}\n\nexport interface UserAuthFields {\n  email: string;\n  password: string;\n}\n\nexport enum Session {\n  ANONYMOUS = 'ANONYMOUS',\n  EMPLOYEE = 'EMPLOYEE',\n  ADMINISTRATOR = 'ADMINISTRATOR',\n}\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n    catalogContainer: {\n      width: '50wh',\n      height: '50vh',\n      margin: 'auto',\n    },\n    cardContainer: {\n      margin: '5%',\n      boxShadow: '8px 10px 19px 3px rgba(0,0,0,0.31)',\n    },\n  }),\n);\n\nexport default useStyles;\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport { CatalogueState, Product } from '../../redux/types/CatalogueTypes';\nimport { CatalogueCard } from './CatalogueCard';\nimport UseStyles from '../../styles/CatalogueStyles';\nimport Box from '@material-ui/core/Box';\n\ninterface StateProps {\n  catalogue: CatalogueState;\n}\n\ntype Props = StateProps;\n\nconst Catalogue: FC<Props> = (props: Props) => {\n  const classes = UseStyles();\n  const { catalogue } = props;\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"space-evenly\" m={1} p={1} bgcolor=\"background.paper\">\n      {catalogue?.products.map((product: Product) => (\n        <Box className={classes.cardContainer} key={product.id}>\n          <CatalogueCard specs={product} />\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    catalogue: state.catalogue,\n  };\n};\n\nexport default connect(mapStateToProps)(Catalogue);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '50vw',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  popUp: {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    padding: '1em',\n  },\n  cancelIcon: {\n    position: 'absolute',\n    top: '-10',\n    right: '-10',\n  },\n  alertMessage: {\n    textAlign: 'left',\n    color: 'red',\n    padding: 0,\n    margin: 0,\n  },\n}));\n\nexport default useStyles;\n","import { UserState, Session } from '../types/UserTypes';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { Action, baseRequestStatusReducers } from './base';\n\nconst initialState: UserState = {\n  username: 'defaultUser',\n  email: '',\n  id: '',\n  companyId: '',\n  shopId: '',\n  sessionType: Session.ANONYMOUS,\n  loginUserStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  logoutUserStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  registerUserStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  deleteUserStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  reassignUserShopStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n};\n\nconst successRegisterUser = (state: UserState) => {\n  return {\n    ...state,\n    registerUserStatus: {\n      loading: false,\n      success: true,\n      error: false,\n    },\n  };\n};\n\nconst successLoginUser = (state: UserState, action: Action) => {\n  return {\n    ...state,\n    ...action.payload,\n    loginUserStatus: {\n      loading: false,\n      success: true,\n      error: false,\n    },\n    logoutUserStatus: { loading: false, success: false, error: false },\n  };\n};\n\nconst successLogoutUser = (state: UserState) => {\n  return {\n    ...state,\n    ...initialState,\n    logoutUserStatus: { loading: false, success: true, error: false },\n  };\n};\n\nconst successDeleteUser = (state: UserState) => {\n  return {\n    ...state,\n    deleteUserStatus: { loading: false, success: true, error: false },\n  };\n};\n\nconst successReassignUserShop = (state: UserState, action: Action) => {\n  return {\n    ...state,\n    ...action.payload,\n    reassignUserShopStatus: { loading: false, success: true, error: false },\n  };\n};\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    ...baseRequestStatusReducers('registerUser', initialState, null, successRegisterUser),\n    ...baseRequestStatusReducers('loginUser', initialState, null, successLoginUser),\n    ...baseRequestStatusReducers('logoutUser', initialState, null, successLogoutUser),\n    ...baseRequestStatusReducers('deleteUser', initialState, null, successDeleteUser),\n    ...baseRequestStatusReducers('reassignUserShop', initialState, null, successReassignUserShop),\n    resetUserStatus: (state: UserState) => {\n      return {\n        ...state,\n        loginUserStatus: initialState.loginUserStatus,\n        logoutUserStatus: initialState.logoutUserStatus,\n      };\n    },\n    resetUser: (state: UserState) => {\n      return {\n        ...state,\n        ...initialState,\n      };\n    },\n  },\n});\n\nexport const userReducer = userSlice.reducer;\nexport const userActions = userSlice.actions;\n","/* eslint-disable no-useless-catch */\nimport { AxiosResponse } from 'axios';\nimport { PostUserFields, ReassignUserFields, UserAuthFields } from '../redux/types/UserTypes';\nimport { axiosBaseInstance } from './config';\n\nconst getUser = async (userId: string): Promise<any> => {\n  try {\n    const response: AxiosResponse<any> = await axiosBaseInstance({\n      headers: { 'Content-Type': 'application/json' },\n      method: 'get',\n      url: `/user/${userId}`,\n    });\n    return response?.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst postUserLogin = async (authFields: UserAuthFields): Promise<any> => {\n  try {\n    const response: AxiosResponse<any> = await axiosBaseInstance({\n      headers: { 'Content-Type': 'application/json' },\n      method: 'post',\n      url: '/user/auth',\n      data: {\n        email: authFields.email,\n        password: authFields.password,\n      },\n    });\n    localStorage.setItem('Token', response?.data['token']);\n    return response?.data?.user;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst postUserRegister = async (authFields: PostUserFields): Promise<any> => {\n  try {\n    const response: AxiosResponse<any> = await axiosBaseInstance({\n      headers: { 'Content-Type': 'application/json' },\n      method: 'post',\n      url: '/user/create',\n      data: {\n        username: authFields.username,\n        email: authFields.email,\n        companyId: authFields.companyId,\n        shopId: authFields.shopId,\n        password: authFields.password,\n      },\n    });\n    return response?.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst deleteUser = async (id: string): Promise<any> => {\n  return await axiosBaseInstance({\n    headers: { 'Content-Type': 'application/json' },\n    method: 'delete',\n    url: `/user/${id}`,\n  })\n    .then((response: AxiosResponse<string>) => {\n      return response?.data;\n    })\n    .catch((error: Error) => {\n      throw error;\n    });\n};\n\nconst reassignUserShop = async (authFields: ReassignUserFields): Promise<any> => {\n  return await axiosBaseInstance({\n    headers: { 'Content-Type': 'application/json' },\n    method: 'patch',\n    url: `/user/set_shop`,\n    data: {\n      userId: authFields.userId,\n      shopId: authFields.shopId,\n    },\n  })\n    .then((response: AxiosResponse<Record<string, never>>) => {\n      return response?.data;\n    })\n    .catch((error: Error) => {\n      throw error;\n    });\n};\n\nconst usersService = {\n  getUser,\n  postUserLogin,\n  postUserRegister,\n  deleteUser,\n  reassignUserShop,\n};\n\nexport default usersService;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck projectActions properties generated at runtime\nimport { userActions } from '../slices/userSlice';\nimport userServices from '../../services/userServices';\nimport { buildInteractor, buildInteractorNoParams, buildInteractorDirectActionNoParams } from './base';\n\nexport const registerUserInteractor = buildInteractor(\n  userActions.loadingRegisterUser,\n  userActions.successRegisterUser,\n  userActions.errorRegisterUser,\n  userServices.postUserRegister,\n);\n\nexport const loginUserInteractor = buildInteractor(\n  userActions.loadingLoginUser,\n  userActions.successLoginUser,\n  userActions.errorLoginUser,\n  userServices.postUserLogin,\n);\n\nexport const logoutUserInteractor = buildInteractorNoParams(\n  userActions.loadingLogoutUser,\n  userActions.successLogoutUser,\n  userActions.errorLogoutUser,\n  null,\n);\n\nexport const deleteUserInteractor = buildInteractor(\n  userActions.loadingDeleteUser,\n  userActions.successDeleteUser,\n  userActions.errorDeleteUser,\n  userServices.deleteUser,\n);\n\nexport const reassignUserShopInteractor = buildInteractor(\n  userActions.loadingReassignUserShop,\n  userActions.successReassignUserShop,\n  userActions.errorReassignUserShop,\n  userServices.reassignUserShop,\n);\n\nexport const resetRegisterUserInteractor = buildInteractorDirectActionNoParams(userActions.resetRegisterUser);\n\nexport const resetLoginUserInteractor = buildInteractorDirectActionNoParams(userActions.resetLoginUser);\n\nexport const resetLogoutUserInteractor = buildInteractorDirectActionNoParams(userActions.resetLogoutUser);\n\nexport const resetUserStatusInteractor = buildInteractorDirectActionNoParams(userActions.resetUserStatus);\n\nexport const resetUserInteractor = buildInteractorDirectActionNoParams(userActions.resetUser);\n\nexport const resetDeleteUserInteractor = buildInteractorDirectActionNoParams(userActions.resetDeleteUser);\n\nexport const resetReassignUserInteractor = buildInteractorDirectActionNoParams(userActions.resetReassignUserShop);\n","import React, { FC, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UseStyles from '../../styles/LogInStyles';\nimport { bindActionCreators } from 'redux';\nimport { RootState } from '../../redux/store';\nimport { connect } from 'react-redux';\nimport { UserState, UserAuthFields } from '../../redux/types/UserTypes';\nimport * as userInteractors from '../../redux/interactors/userInteractors';\nimport * as modalInteractors from '../../redux/interactors/modalInteractors';\nimport { Cancel } from '@material-ui/icons';\nimport { Button, CssBaseline, TextField, Link, Box, Typography, Card, CircularProgress } from '@material-ui/core';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        EABModel\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\ninterface StateProps {\n  user: UserState;\n}\n\ninterface DispatchProps {\n  loginUserInteractor: typeof userInteractors.loginUserInteractor;\n  resetUserStatusInteractor: typeof userInteractors.resetUserStatusInteractor;\n  closePopUpInteractor: typeof modalInteractors.closePopUpInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  closePopUp: () => void;\n}\n\nconst UserLogin: FC<Props> = (props: Props) => {\n  const styles = UseStyles();\n  const history = useHistory();\n  const { user } = props;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    if (user.loginUserStatus.success) {\n      props.resetUserStatusInteractor();\n      props.closePopUpInteractor();\n      history.push('/administration');\n    }\n  }, [history, props, user]);\n\n  const closePopUp = (): void => {\n    props.closePopUp();\n  };\n\n  const onEmailChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setEmail(event.target.value);\n  };\n\n  const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setPassword(event.target.value);\n  };\n\n  const handleSubmit = (): void => {\n    const authFields: UserAuthFields = {\n      email,\n      password,\n    };\n    props.loginUserInteractor(authFields);\n  };\n\n  return (\n    <Card className={styles.popUp} component=\"main\" variant=\"outlined\">\n      <div className={styles.cancelIcon} onClick={closePopUp}>\n        <Cancel fontSize=\"large\" color=\"secondary\" />\n      </div>\n      <CssBaseline />\n      <div className={styles.paper}>\n        {user.loginUserStatus.loading && <CircularProgress />}\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <div className={styles.form}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={onEmailChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={onPasswordChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={styles.submit}\n            disabled={!(email && password)}\n            onClick={handleSubmit}>\n            Sign In\n          </Button>\n        </div>\n      </div>\n      <Box mt={4}>\n        <Copyright />\n      </Box>\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...userInteractors,\n      ...modalInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserLogin);\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as modalInteractors from '../../redux/interactors/modalInteractors';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { Button } from '@material-ui/core';\nimport '../../styles/css/homeStyles.scss';\n\nexport enum Severity {\n  error = 'error',\n  warning = 'warning',\n  info = 'info',\n  success = 'success',\n}\n\ninterface DispatchProps {\n  showPopUpInteractor: typeof modalInteractors.showPopUpInteractor;\n}\n\ninterface Props extends DispatchProps {\n  resourceName: string;\n  severity: any;\n  alertTitle: string;\n  alertBody: string[];\n  hasLoginButton: boolean;\n}\n\nconst HomeAlert: FC<Props> = (props: Props) => {\n  const { showPopUpInteractor, resourceName, severity, alertTitle, alertBody, hasLoginButton } = props;\n  return (\n    <div className=\"alert-container\">\n      <Alert className=\"alert\" variant=\"filled\" severity={severity}>\n        <AlertTitle className=\"alert-title\">{alertTitle}</AlertTitle>\n        {alertBody.map((message) => (\n          <p key={message} className=\"alert-text\">\n            {message}\n          </p>\n        ))}\n        {hasLoginButton && (\n          <div className=\"button-container\">\n            <Button variant=\"contained\" onClick={showPopUpInteractor}>\n              Sign in to create {resourceName}\n            </Button>\n          </div>\n        )}\n      </Alert>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...modalInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(null, mapDispatchToProps)(HomeAlert);\n","import React, { FC, useState } from 'react';\nimport { useIdleTimer } from 'react-idle-timer';\nimport ReactPlayer from 'react-player/lazy';\nimport { Spring, animated } from 'react-spring';\nimport '../../styles/css/videoPlayer.scss';\n\ninterface Props {\n  idleValue: boolean;\n  toggleIdle: any;\n}\n\nconst IdleHandler: FC<Props> = (props: Props) => {\n  const { idleValue, toggleIdle } = props;\n  const [videoShowing, setVideoShowing] = useState(false);\n  const handleOnIdle = () => {\n    toggleIdle(!idleValue);\n    setVideoShowing(true);\n  };\n\n  const handleOnActive = () => {\n    toggleIdle(!idleValue);\n    setVideoShowing(false);\n  };\n\n  useIdleTimer({\n    timeout: 1000 * 60 * 3, // 3 minutes idle time\n    onIdle: handleOnIdle,\n    onActive: handleOnActive,\n    debounce: 500,\n  });\n\n  const springProps = {\n    from: {\n      opacity: 0,\n      marginTop: -500,\n    },\n    to: {\n      opacity: 1,\n      marginTop: 0,\n    },\n  };\n  // useSpring hook didn't work\n  return (\n    <>\n      {videoShowing && (\n        <Spring from={springProps.from} to={springProps.to}>\n          {(props) => (\n            <animated.div style={props}>\n              <div className=\"player-wrapper\">\n                <ReactPlayer\n                  className=\"react-player\"\n                  url=\"https://www.youtube.com/watch?v=A_hNkfRS05I\"\n                  playing\n                  loop\n                  muted // It's imposible to autoplay an unmuted video because of chrome policies\n                  controls\n                  width=\"100%\"\n                  height=\"100%\"\n                />\n              </div>\n            </animated.div>\n          )}\n        </Spring>\n      )}\n    </>\n  );\n};\n\n// React.memo memoitized this component so it's not rendered every time the parent re renders\n// It's a good implementation for improving performance\nconst IdleVideoPlayer = React.memo(IdleHandler);\n\nexport default IdleVideoPlayer;\n","import React, { FC, useEffect, useState } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { RootState } from '../redux/store';\nimport { PopUpState } from '../redux/types/ModalTypes';\nimport { CompanyState } from '../redux/types/CompanyTypes';\nimport { ShopState } from '../redux/types/ShopTypes';\nimport { CatalogueState } from '../redux/types/CatalogueTypes';\nimport * as modalInteractors from '../redux/interactors/modalInteractors';\nimport * as catalogueInteractors from '../redux/interactors/catalogueInteractors';\nimport Catalogue from '../components/HomeComponents/Catalogue';\nimport Login from '../components/NavbarComponents/UserLogin';\nimport HomeAlert from '../components/HomeComponents/ShowHomeAlert';\nimport { Severity } from '../components/HomeComponents/ShowHomeAlert';\nimport { connect } from 'react-redux';\nimport { LinearProgress } from '@material-ui/core';\nimport IdleVideoPlayer from '../components/HomeComponents/IdleVideoPlayer';\n\ninterface StateProps {\n  modal: PopUpState;\n  company: CompanyState;\n  shop: ShopState;\n  catalogue: CatalogueState;\n}\n\ninterface DispatchProps {\n  closePopUpInteractor: typeof modalInteractors.closePopUpInteractor;\n  getCatalogueInteractor: typeof catalogueInteractors.getCatalogueInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  // extra props you want to add\n}\n\nconst Home: FC<Props> = (props: Props) => {\n  const { modal, company, shop, catalogue } = props;\n  const [showCreateShopMessage, setShowCreateShopMessage] = useState(false);\n  const [showCreateProductMessage, setShowCreateProductMessage] = useState(false);\n  const [isIdle, setIsIdle] = useState(false);\n\n  useEffect(() => {\n    // If just registered or has no shops\n    if (company.registerCompanyStatus.success || shop?.shops?.length === 0 || !shop?.id) {\n      setShowCreateShopMessage(true);\n    } else {\n      setShowCreateShopMessage(false);\n    }\n  }, [company.registerCompanyStatus, company]);\n\n  useEffect(() => {\n    if (!showCreateShopMessage) {\n      props.getCatalogueInteractor(shop.id);\n    }\n  }, [props.getCatalogueInteractor, showCreateShopMessage]);\n\n  useEffect(() => {\n    // If shop has no products, show create product message\n    if (catalogue?.products?.length === 0) {\n      setShowCreateProductMessage(true);\n    } else {\n      setShowCreateProductMessage(false);\n    }\n  }, [catalogue]);\n\n  const closeModal = (): void => {\n    props.closePopUpInteractor();\n  };\n\n  return (\n    <div>\n      <IdleVideoPlayer idleValue={isIdle} toggleIdle={setIsIdle} />\n      {!isIdle && (\n        <>\n          {catalogue.getCatalogueStatus.loading && <LinearProgress color=\"secondary\" />}\n          {showCreateShopMessage && (\n            <HomeAlert\n              resourceName={'shop'}\n              severity={Severity.warning}\n              alertTitle={'Create a shop or switch to one'}\n              alertBody={[\n                'It seems you are not currently in a shop, create or switch to one.',\n                'You can do this by logging in as an employee and entering th Shops Menu.',\n              ]}\n              hasLoginButton={true}\n            />\n          )}\n          {showCreateProductMessage && (\n            <HomeAlert\n              resourceName={'product'}\n              severity={Severity.info}\n              alertTitle={\"Add a product or products to your shop's catalogue\"}\n              alertBody={[\n                'In order to display your products, add them first.',\n                'You can do that from the administrator menu.',\n              ]}\n              hasLoginButton={true}\n            />\n          )}\n          {!showCreateShopMessage && !showCreateProductMessage && <Catalogue />}\n          {modal.open && <Login closePopUp={closeModal} />}\n        </>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    modal: state.modal,\n    company: state.company,\n    shop: state.shop,\n    catalogue: state.catalogue,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...modalInteractors,\n      ...catalogueInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    width: '80%',\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  textContainer: {\n    width: '100%',\n    margin: '1rem',\n  },\n  resetContainer: {\n    padding: theme.spacing(2),\n    marginLeft: theme.spacing(3),\n  },\n  text: {\n    textAlign: 'center',\n  },\n}));\n","import React, { FC } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { PopUpState } from '../redux/types/ModalTypes';\nimport { RootState } from '../redux/store';\nimport * as modalInteractors from '../redux/interactors/modalInteractors';\nimport { useStyles } from '../styles/InformationStyles';\nimport Login from '../components/NavbarComponents/UserLogin';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport '../styles/css/catalogueMenu.scss';\n\ninterface StateProps {\n  modal: PopUpState;\n}\n\ninterface DispatchProps {\n  closePopUpInteractor: typeof modalInteractors.showPopUpInteractor;\n}\ninterface Props extends StateProps, DispatchProps {}\n\nfunction getSteps() {\n  return ['Product catalog', 'Request assistance', 'Assistants available', 'No assistants available'];\n}\n\nfunction getStepContent(step: any) {\n  switch (step) {\n    case 0:\n      return `In the store you can see the available catalog of the products for sale, in each of the devices.`;\n    case 1:\n      return `If the customer requires assistance to learn more about a product,  \n              he/she should click on \"Details\" of the product and then at the  \n              bottom of the screen click on the \"Get assistance\" button.`;\n    case 2:\n      return `If assistants are available, a message will be displayed telling the customer\n              to go to the assistance tablet in the store. From here, a video call can be \n              made to an assistant who will help the customer with all his questions.`;\n    case 3:\n      return `In case there are no assistants available, a message will be displayed \n              informing the client and then, if he/she wishes, he/she can leave his/her \n              e-mail so that an assistant can contact him/her later.`;\n  }\n}\n\nconst VerticalLinearStepper: FC<Props> = (props: Props) => {\n  const { modal } = props;\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const closeModal = (): void => {\n    props.closePopUpInteractor();\n  };\n\n  return (\n    <>\n      <div className={classes.root}>\n        <Typography variant=\"h3\" gutterBottom>\n          Operation of the platform\n        </Typography>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Virual Assistant is a platform that offers assistance and helps customers with the purchase process virtually,\n          through a video call. This allows that in times of pandemic our customers can buy in a safe and informed way,\n          covering all the doubts that may arise. Here you can find information on the steps that the customer must\n          follow.\n        </Typography>\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\n          {steps.map((label, index) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n              <StepContent>\n                <div className={classes.textContainer}>\n                  <Typography className={classes.text}>{getStepContent(index)}</Typography>\n                </div>\n                <div className={classes.actionsContainer}>\n                  <div>\n                    <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleNext} className={classes.button}>\n                      {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                    </Button>\n                  </div>\n                </div>\n              </StepContent>\n            </Step>\n          ))}\n        </Stepper>\n        {activeStep === steps.length && (\n          <Paper square elevation={0} className={classes.resetContainer}>\n            <Typography>Now you are ready to use Virtual Assistance!</Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </Paper>\n        )}\n        {modal.open && <Login closePopUp={closeModal} />}\n      </div>\n      <div className=\"btn-bottom-left\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            history.go(-1);\n          }}>\n          Back\n        </Button>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    modal: state.modal,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...modalInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VerticalLinearStepper);\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'right',\n    marginLeft: '2rem',\n    marginRight: '2rem',\n    fontSize: '1rem',\n  },\n  btn: {\n    fontSize: '1rem',\n  },\n}));\n","import React, { FC } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { RootState } from '../redux/store';\nimport { UserState } from '../redux/types/UserTypes';\nimport { CompanyState } from '../redux/types/CompanyTypes';\nimport * as userInteractors from '../redux/interactors/userInteractors';\nimport * as modalInteractors from '../redux/interactors/modalInteractors';\nimport { AppBar, Button, Toolbar, Typography, IconButton } from '@material-ui/core';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { useHistory } from 'react-router-dom';\nimport { useStyles } from '../styles/NavBarStyles';\n\ninterface StateProps {\n  user: UserState;\n  company: CompanyState;\n}\n\ninterface DispatchProps {\n  logoutUserInteractor: typeof userInteractors.logoutUserInteractor;\n  showPopUpInteractor: typeof modalInteractors.showPopUpInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  // extra props you want to add\n}\n\nconst NavBar: FC<Props> = (props: Props) => {\n  const { user, company } = props;\n  const history = useHistory();\n  const styles = useStyles();\n\n  const openPopUp = (): void => {\n    props.showPopUpInteractor();\n  };\n\n  const logOut = (): void => {\n    props.logoutUserInteractor();\n    localStorage.removeItem('Token');\n    history.replace('/home');\n  };\n\n  const informationsPage = (): void => {\n    history.replace('/information');\n  };\n\n  return (\n    <AppBar position=\"static\" className={styles.root}>\n      <Toolbar>\n        <Typography variant=\"h6\" className={styles.title}>\n          {user.sessionType === 'ANONYMOUS' ? `Hello Dear Customer!` : `Hello ${user.username}!`}\n        </Typography>\n        {user.sessionType === 'ANONYMOUS' ? (\n          <Button className={styles.btn} color=\"inherit\" onClick={openPopUp} disabled={!company.id}>\n            Login\n          </Button>\n        ) : (\n          <Button color=\"secondary\" onClick={logOut} disabled={!company.id}>\n            Logout\n          </Button>\n        )}\n        {company.id?.length > 0 && (\n          <IconButton color=\"inherit\" onClick={informationsPage}>\n            <InfoOutlinedIcon />\n          </IconButton>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    user: state.user,\n    company: state.company,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...userInteractors,\n      ...modalInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","import { CompanyState } from '../types/CompanyTypes';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { Action, baseRequestStatusReducers } from './base';\n\nconst initialState: CompanyState = {\n  id: '',\n  name: '',\n  email: '',\n  shops: [],\n  users: [],\n  registerCompanyStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  loginCompanyStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  logoutCompanyStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  getCompanyUsersStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  getCompanyShopsStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n};\n\nconst successRegisterCompany = (state: CompanyState, action: Action) => {\n  return {\n    ...state,\n    ...action.payload,\n    registerCompanyStatus: { loading: false, success: true, error: false },\n  };\n};\n\nconst successLoginCompany = (state: CompanyState, action: Action) => {\n  return {\n    ...state,\n    ...action.payload,\n    loginCompanyStatus: { loading: false, success: true, error: false },\n  };\n};\n\nconst successLogoutCompany = (state: CompanyState) => {\n  return {\n    ...state,\n    ...initialState,\n    logoutCompanyStatus: { loading: false, success: true, error: false },\n  };\n};\n\nconst successGetCompanyUsers = (state: CompanyState, action: Action) => {\n  return {\n    ...state,\n    ...action.payload,\n    getCompanyUsersStatus: { loading: false, success: true, error: false },\n  };\n};\n\nconst successGetCompanyShops = (state: CompanyState, action: Action) => {\n  return {\n    ...state,\n    ...action.payload,\n    getCompanyUsersStatus: { loading: false, success: true, error: false },\n  };\n};\n\nconst companySlice = createSlice({\n  name: 'company',\n  initialState,\n  reducers: {\n    ...baseRequestStatusReducers('registerCompany', initialState, null, successRegisterCompany),\n    ...baseRequestStatusReducers('loginCompany', initialState, null, successLoginCompany),\n    ...baseRequestStatusReducers('logoutCompany', initialState, null, successLogoutCompany),\n    ...baseRequestStatusReducers('getCompanyUsers', initialState, null, successGetCompanyUsers),\n    ...baseRequestStatusReducers('getCompanyShops', initialState, null, successGetCompanyShops),\n    resetCompanyStatus: (state: CompanyState) => {\n      return {\n        ...state,\n        loginCompanyStatus: initialState.loginCompanyStatus,\n        logoutCompanyStatus: initialState.logoutCompanyStatus,\n      };\n    },\n    resetCompany: (state: CompanyState) => {\n      return {\n        ...state,\n        ...initialState,\n      };\n    },\n    removeUserCompany: (state: CompanyState, action: Action) => {\n      return {\n        ...state,\n        users: state.users.filter((user) => user.id !== action.payload),\n      };\n    },\n    handleUserReassign: (state: CompanyState, action: Action) => {\n      return {\n        ...state,\n        users: state.users.map((user) => {\n          if (user.id === action.payload.userId) {\n            return { ...user, shopId: action.payload.shopId };\n          }\n          return user;\n        }),\n      };\n    },\n  },\n});\n\nexport const companyReducer = companySlice.reducer;\nexport const companyActions = companySlice.actions;\n","/* eslint-disable no-useless-catch */\nimport { AxiosResponse } from 'axios';\nimport { PostCompanyFields, RegisterCompanyFields, CompanyBackendState } from '../redux/types/CompanyTypes';\nimport { axiosBaseInstance } from './config';\n\nconst postCompanyLogin = async (authFields: PostCompanyFields): Promise<any> => {\n  try {\n    const response: AxiosResponse<CompanyBackendState> = await axiosBaseInstance({\n      headers: { 'Content-Type': 'application/json' },\n      method: 'post',\n      url: '/company/login',\n      data: {\n        name: authFields.name,\n        password: authFields.password,\n      },\n    });\n    return response?.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst postCompanyRegister = async (authFields: RegisterCompanyFields): Promise<any> => {\n  try {\n    const response: AxiosResponse<CompanyBackendState> = await axiosBaseInstance({\n      headers: { 'Content-Type': 'application/json' },\n      method: 'post',\n      url: '/company/create',\n      data: {\n        name: authFields.name,\n        email: authFields.email,\n        password: authFields.password,\n      },\n    });\n    return response?.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst getCompanyUsers = async (companyId: string): Promise<any> => {\n  return await axiosBaseInstance({\n    headers: { 'Content-Type': 'application/json' },\n    method: 'get',\n    url: `/company/${companyId}/users`,\n  })\n    .then((response: AxiosResponse<CompanyBackendState>) => {\n      return response?.data;\n    })\n    .catch((error: any) => {\n      throw error;\n    });\n};\n\nconst getCompanyShops = async (companyId: string): Promise<any> => {\n  return await axiosBaseInstance({\n    headers: { 'Content-Type': 'application/json' },\n    method: 'get',\n    url: `/company/${companyId}/shops`,\n  })\n    .then((response: AxiosResponse<CompanyBackendState>) => {\n      return response?.data;\n    })\n    .catch((error: any) => {\n      throw error;\n    });\n};\n\nconst companyServices = {\n  postCompanyLogin,\n  postCompanyRegister,\n  getCompanyUsers,\n  getCompanyShops,\n};\n\nexport default companyServices;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck projectActions properties generated at runtime\nimport { companyActions } from '../slices/companySlice';\nimport companyServices from '../../services/companyServices';\nimport {\n  buildInteractor,\n  buildInteractorNoParams,\n  buildInteractorDirectActionNoParams,\n  buildInteractorDirectAction,\n} from './base';\n\nexport const registerCompanyInteractor = buildInteractor(\n  companyActions.loadingRegisterCompany,\n  companyActions.successRegisterCompany,\n  companyActions.errorRegisterCompany,\n  companyServices.postCompanyRegister,\n);\n\nexport const loginCompanyInteractor = buildInteractor(\n  companyActions.loadingLoginCompany,\n  companyActions.successLoginCompany,\n  companyActions.errorLoginCompany,\n  companyServices.postCompanyLogin,\n);\n\nexport const logoutCompanyInteractor = buildInteractorNoParams(\n  companyActions.loadingLogoutCompany,\n  companyActions.successLogoutCompany,\n  companyActions.errorLogoutCompany,\n  null,\n);\n\nexport const getCompanyUsersInteractor = buildInteractor(\n  companyActions.loadingGetCompanyUsers,\n  companyActions.successGetCompanyUsers,\n  companyActions.errorGetCompanyUsers,\n  companyServices.getCompanyUsers,\n);\n\nexport const getCompanyShopsInteractor = buildInteractor(\n  companyActions.loadingGetCompanyShops,\n  companyActions.successGetCompanyShops,\n  companyActions.errorGetCompanyShops,\n  companyServices.getCompanyShops,\n);\n\nexport const removeCompanyUserInteractor = buildInteractorDirectAction(companyActions.removeUserCompany);\n\nexport const resetRegisterCompanyInteractor = buildInteractorDirectActionNoParams(companyActions.resetRegisterCompany);\n\nexport const resetLoginCompanyInteractor = buildInteractorDirectActionNoParams(companyActions.resetLoginCompany);\n\nexport const resetLogoutCompanyInteractor = buildInteractorDirectActionNoParams(companyActions.resetLogoutCompany);\n\nexport const resetCompanyStatusInteractor = buildInteractorDirectActionNoParams(companyActions.resetCompanyStatus);\n\nexport const resetCompanyInteractor = buildInteractorDirectActionNoParams(companyActions.resetCompany);\n\nexport const handleUserReassignInteractor = buildInteractorDirectAction(companyActions.handleUserReassign);\n","import React, { FC, useState } from 'react';\nimport UseStyles from '../../styles/LogInStyles';\nimport { bindActionCreators } from 'redux';\nimport { RootState } from '../../redux/store';\nimport { connect } from 'react-redux';\nimport { CompanyState, PostCompanyFields } from '../../redux/types/CompanyTypes';\nimport * as companyInteractors from '../../redux/interactors/companyInteractors';\nimport {\n  Button,\n  CssBaseline,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n  Card,\n  CircularProgress,\n} from '@material-ui/core';\n\ninterface StateProps {\n  company: CompanyState;\n}\n\ninterface DispatchProps {\n  loginCompanyInteractor: typeof companyInteractors.loginCompanyInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  toggleForm: () => void;\n}\n\nconst CompanyLoginForm: FC<Props> = (props: Props) => {\n  const styles = UseStyles();\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const { company, loginCompanyInteractor } = props;\n\n  const onNameChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setName(event.target.value);\n  };\n\n  const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setPassword(event.target.value);\n  };\n\n  const handleSubmit = (): void => {\n    const authFields: PostCompanyFields = {\n      name,\n      password,\n    };\n    loginCompanyInteractor(authFields);\n    setName('');\n    setPassword('');\n  };\n\n  return (\n    <Card className={styles.popUp} component=\"main\" variant=\"outlined\">\n      <CssBaseline />\n      <div className={styles.paper}>\n        {company.loginCompanyStatus.loading && <CircularProgress />}\n        <Typography component=\"h1\" variant=\"h5\">\n          Company Sign in\n        </Typography>\n        <div className={styles.form}>\n          <TextField\n            value={name}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Company name\"\n            name=\"name\"\n            autoFocus\n            onChange={onNameChange}\n          />\n          <TextField\n            value={password}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            onChange={onPasswordChange}\n          />\n          <FormControlLabel control={<Checkbox value=\"remember\" color=\"primary\" />} label=\"Remember me\" />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={styles.submit}\n            disabled={!(name && password)}\n            onClick={handleSubmit}>\n            Company Sign In\n          </Button>\n        </div>\n      </div>\n      <Button color=\"default\" size=\"small\" onClick={props.toggleForm}>\n        Don&apos;t have a company, create one\n      </Button>\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    company: state.company,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...companyInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyLoginForm);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  page: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  container: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%,-50%)',\n    padding: '20px',\n    width: '50%',\n    height: '60vh',\n    borderRadius: '8px',\n    overflowY: 'scroll',\n  },\n  containerList: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '20px',\n    width: '50%',\n    height: '60vh',\n    borderRadius: '8px',\n    overflowY: 'scroll',\n  },\n  shopContainer: {\n    position: 'relative',\n    padding: '10px',\n    margin: '15px 0',\n    borderRadius: '8px',\n    'box-shadow': '5px 6px 12px -4px rgba(0,0,0,0.75)',\n  },\n  name: {\n    fontSize: '20px',\n    textAlign: 'left',\n    padding: 0,\n    margin: '0 5px',\n  },\n  location: {\n    fontSize: '15px',\n    textAlign: 'left',\n    padding: 0,\n    margin: '0 5px',\n  },\n  buttonContainer: {\n    position: 'absolute',\n    bottom: '12px',\n    right: '15px',\n  },\n  switchFormTypeContainer: {\n    position: 'absolute',\n    left: '50%',\n    top: '20%',\n    transform: 'translate(-50%,-50%)',\n  },\n});\n\nexport default useStyles;\n","import { ShopState } from '../types/ShopTypes';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { Action, baseRequestStatusReducers } from './base';\n\nconst initialState: ShopState = {\n  id: '',\n  companyId: '',\n  name: '',\n  location: '',\n  shops: [],\n  addShopStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  removeShopStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  updateShopStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n};\n\nconst successAddShop = (state: ShopState, action: Action) => {\n  return {\n    ...state,\n    shops: [...state.shops, action.payload],\n    addShopStatus: { loading: false, success: true, error: false },\n  };\n};\n\nconst successRemoveShop = (state: ShopState) => {\n  return {\n    ...state,\n    removeShopStatus: { loading: false, success: true, error: false },\n  };\n};\n\nconst successUpdateShop = (state: ShopState, action: Action) => {\n  return {\n    ...state,\n    ...action.payload,\n    updateShopStatus: { loading: false, success: true, error: false },\n  };\n};\n\nconst shopSlice = createSlice({\n  name: 'shop',\n  initialState,\n  reducers: {\n    ...baseRequestStatusReducers('addShop', initialState, null, successAddShop),\n    ...baseRequestStatusReducers('removeShop', initialState, null, successRemoveShop),\n    ...baseRequestStatusReducers('updateShop', initialState, null, successUpdateShop),\n    setShops: (state: ShopState, action: Action) => {\n      return {\n        ...state,\n        shops: action.payload,\n      };\n    },\n    setShop: (state: ShopState, action: Action) => {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    },\n    resetShopStatus: (state: ShopState) => {\n      return {\n        ...state,\n        addShopStatus: initialState.addShopStatus,\n        removeShopStatus: initialState.removeShopStatus,\n        updateShopStatus: initialState.updateShopStatus,\n      };\n    },\n    resetShop: (state: ShopState) => {\n      return {\n        ...state,\n        ...initialState,\n      };\n    },\n  },\n});\n\nexport const shopReducer = shopSlice.reducer;\nexport const shopActions = shopSlice.actions;\n","/* eslint-disable no-useless-catch */\nimport { AxiosResponse } from 'axios';\nimport { PostShopFields } from '../redux/types/ShopTypes';\nimport { axiosBaseInstance } from './config';\n\nconst postShopRegister = async (authFields: PostShopFields): Promise<any> => {\n  try {\n    const response: AxiosResponse<Record<string, never>> = await axiosBaseInstance({\n      headers: { 'Content-Type': 'application/json' },\n      method: 'post',\n      url: '/shop/create',\n      data: {\n        companyId: authFields.companyId,\n        name: authFields.name,\n        location: authFields.location,\n      },\n    });\n    return response?.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst shopServices = {\n  postShopRegister,\n};\n\nexport default shopServices;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck projectActions properties generated at runtime\nimport { shopActions } from '../slices/shopSlice';\nimport shopServices from '../../services/shopServices';\nimport { buildInteractor, buildInteractorDirectAction, buildInteractorDirectActionNoParams } from './base';\n\nexport const addShopInteractor = buildInteractor(\n  shopActions.loadingAddShop,\n  shopActions.successAddShop,\n  shopActions.errorAddShop,\n  shopServices.postShopRegister,\n);\n\nexport const removeShopInteractor = buildInteractor(\n  shopActions.loadingRemoveShop,\n  shopActions.successRemoveShop,\n  shopActions.errorRemoveShop,\n  null,\n);\n\nexport const updateShopInteractor = buildInteractor(\n  shopActions.loadingUpdateShop,\n  shopActions.successUpdateShop,\n  shopActions.errorUpdateShop,\n  null,\n);\n\nexport const setShopsInteractor = buildInteractorDirectAction(shopActions.setShops);\n\nexport const resetAddShopInteractor = buildInteractorDirectActionNoParams(shopActions.resetAddShop);\n\nexport const resetRemoveShopInteractor = buildInteractorDirectActionNoParams(shopActions.resetRemoveShop);\n\nexport const resetUpdateShopInteractor = buildInteractorDirectActionNoParams(shopActions.resetUpdateShop);\n\nexport const setShopInteractor = buildInteractorDirectAction(shopActions.setShop);\n\nexport const resetShopStatusInteractor = buildInteractorDirectActionNoParams(shopActions.resetShopStatus);\n\nexport const resetShopInteractor = buildInteractorDirectActionNoParams(shopActions.resetShop);\n","import React, { FC, useEffect } from 'react';\nimport UseStyles from '../../styles/CompanyAuthStyles';\nimport { ShopBackendState } from '../../redux/types/CompanyTypes';\nimport { useHistory } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as shopInteractors from '../../redux/interactors/shopInteractors';\nimport { Button, Typography } from '@material-ui/core';\n\ninterface DispatchProps {\n  setShopInteractor: typeof shopInteractors.setShopInteractor;\n  setShopsInteractor: typeof shopInteractors.setShopsInteractor;\n}\n\ninterface Props extends DispatchProps {\n  shops: ShopBackendState[];\n}\n\nconst CompanyLoginForm: FC<Props> = (props: Props) => {\n  const styles = UseStyles();\n  const history = useHistory();\n  const { shops, setShopInteractor, setShopsInteractor } = props;\n\n  useEffect(() => {\n    // If company has not created a shop, redirect to home to allow it to do that\n    if (shops?.length === 0) {\n      history.replace('/home');\n    } else {\n      setShopsInteractor(shops);\n    }\n  }, []);\n\n  const login = (shop: ShopBackendState): void => {\n    setShopInteractor(shop);\n    history.replace('/home');\n  };\n\n  return (\n    <div className={styles.page}>\n      <Typography variant=\"h2\" color=\"textSecondary\">\n        Choose Shop\n      </Typography>\n      <div className={styles.containerList}>\n        {shops?.map((shop: ShopBackendState) => (\n          <div className={styles.shopContainer} key={shop.id}>\n            <div>\n              <p className={styles.name}>{shop.name}</p>\n              <p className={styles.location}>{shop.location}</p>\n            </div>\n            <div className={styles.buttonContainer}>\n              <Button variant=\"contained\" color=\"primary\" onClick={() => login(shop)}>\n                Login as this Shop\n              </Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...shopInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(null, mapDispatchToProps)(CompanyLoginForm);\n","import React, { FC, useState } from 'react';\nimport UseStyles from '../../styles/LogInStyles';\nimport { bindActionCreators } from 'redux';\nimport { RootState } from '../../redux/store';\nimport { connect } from 'react-redux';\nimport { CompanyState, RegisterCompanyFields } from '../../redux/types/CompanyTypes';\nimport * as companyInteractors from '../../redux/interactors/companyInteractors';\nimport { Button, CssBaseline, TextField, Typography, Card, CircularProgress } from '@material-ui/core';\n\nconst validateEmail = (email: string): boolean => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\ninterface StateProps {\n  company: CompanyState;\n}\n\ninterface DispatchProps {\n  registerCompanyInteractor: typeof companyInteractors.registerCompanyInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  toggleForm: () => void;\n}\n\nconst CompanyRegisterForm: FC<Props> = (props: Props) => {\n  const styles = UseStyles();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n  const { company } = props;\n\n  const onNameChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setName(event.target.value);\n  };\n\n  const onEmailChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = event.target;\n    if (value) {\n      if (!validateEmail(value)) {\n        setEmailError('This must be an email');\n      } else {\n        setEmailError('');\n      }\n    } else {\n      setEmailError('');\n    }\n    setEmail(value);\n  };\n\n  const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = event.target;\n    if (value && value.length <= 7) {\n      setPasswordError('Password must be longer than 7 characters');\n    } else {\n      setPasswordError('');\n    }\n    setPassword(value);\n  };\n\n  const onConfirmPasswordChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = event.target;\n    if (password !== value) {\n      setConfirmPasswordError(\"Passwords don't match\");\n    } else {\n      setConfirmPasswordError('');\n    }\n    setConfirmPassword(value);\n  };\n\n  const handleSubmit = (): void => {\n    const authFields: RegisterCompanyFields = {\n      name,\n      email,\n      password,\n    };\n    props.registerCompanyInteractor(authFields);\n    setName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n  };\n\n  const registerCondition =\n    name && email && !emailError && password && !passwordError && confirmPassword && !confirmPasswordError;\n\n  return (\n    <Card className={styles.popUp} component=\"main\" variant=\"outlined\">\n      <CssBaseline />\n      <div className={styles.paper}>\n        {company.registerCompanyStatus.loading && <CircularProgress />}\n        <Typography component=\"h1\" variant=\"h5\">\n          Company Sign Up\n        </Typography>\n        <div className={styles.form}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Company name\"\n            name=\"name\"\n            autoFocus\n            onChange={onNameChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Company email\"\n            name=\"email\"\n            onChange={onEmailChange}\n          />\n          <Typography variant=\"body2\" className={styles.alertMessage}>\n            {emailError}\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            onChange={onPasswordChange}\n          />\n          <Typography variant=\"body2\" className={styles.alertMessage}>\n            {passwordError}\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"confirmPassword\"\n            label=\"Confirm password\"\n            type=\"password\"\n            id=\"confirmPassword\"\n            onChange={onConfirmPasswordChange}\n          />\n          <Typography variant=\"body2\" className={styles.alertMessage}>\n            {confirmPasswordError}\n          </Typography>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={styles.submit}\n            disabled={!registerCondition}\n            onClick={handleSubmit}>\n            Company Sign Up\n          </Button>\n          {company.registerCompanyStatus.error && (\n            <Typography>An error ocurred, probably the company already exists.</Typography>\n          )}\n        </div>\n      </div>\n      <Button color=\"default\" size=\"small\" onClick={props.toggleForm}>\n        Already have a company, sign in instead\n      </Button>\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    company: state.company,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...companyInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyRegisterForm);\n","import React, { FC, useState, useEffect } from 'react';\nimport { RootState } from '../redux/store';\nimport { connect } from 'react-redux';\nimport { CompanyState } from '../redux/types/CompanyTypes';\nimport CompanyLoginForm from '../components/CompanyAuthComponents/CompanyLoginForm';\nimport ShopsList from '../components/CompanyAuthComponents/ShopsList';\nimport CompanyRegisterForm from '../components/CompanyAuthComponents/CompanyRegisterForm';\nimport { useHistory } from 'react-router-dom';\nimport { SwitchTransition, CSSTransition } from 'react-transition-group';\nimport '../App.css';\n\ninterface StateProps {\n  company: CompanyState;\n}\n\ninterface Props extends StateProps {}\n\nconst CompanyAuth: FC<Props> = (props: Props) => {\n  const { company } = props;\n  const history = useHistory();\n  const nodeRef = React.useRef(null);\n  const [showShops, setShowShops] = useState(false);\n  const [isSigninIn, setIsSigningIn] = useState(true);\n\n  useEffect(() => {\n    // If just logged in, redirect to shop picker\n    if (company.loginCompanyStatus.success) {\n      setShowShops(true);\n    }\n    // If just created account, redirect to home to create a shop\n    // (default admin user is created, same password as company)\n    if (company.registerCompanyStatus.success) {\n      history.replace('/home');\n    }\n  }, [company.loginCompanyStatus, company.registerCompanyStatus]);\n\n  const toggleForm = (): void => {\n    setIsSigningIn(!isSigninIn);\n  };\n\n  return (\n    <>\n      <SwitchTransition mode={'out-in'}>\n        <CSSTransition\n          key={isSigninIn ? 'signinIn' : 'signinUp'}\n          nodeRef={nodeRef}\n          timeout={{ enter: 200, exit: 200 }}\n          classNames=\"fade\">\n          {isSigninIn ? (\n            <div ref={nodeRef}>\n              {showShops ? <ShopsList shops={company.shops} /> : <CompanyLoginForm toggleForm={toggleForm} />}\n            </div>\n          ) : (\n            <div ref={nodeRef}>\n              <CompanyRegisterForm toggleForm={toggleForm} />\n            </div>\n          )}\n        </CSSTransition>\n      </SwitchTransition>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    company: state.company,\n  };\n};\n\nexport default connect(mapStateToProps)(CompanyAuth);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  mainContainer: {\n    margin: '30px auto',\n    height: '70vh',\n    width: '70vw',\n  },\n  section: {\n    position: 'relative',\n    textAlign: 'left',\n    margin: '15px 5px',\n    padding: 5,\n  },\n  buttonContainer: {\n    position: 'absolute',\n    right: 5,\n    bottom: 5,\n  },\n});\n\nexport default useStyles;\n","import React, { FC } from 'react';\nimport { Typography, Button } from '@material-ui/core';\nimport UseStyles from '../../styles/AdministrationPortalStyles';\n\ninterface Props {\n  title: string;\n  body: string;\n  callback: () => void;\n}\n\nconst MenuSection: FC<Props> = (props: Props) => {\n  const styles = UseStyles();\n  const { title, body, callback } = props;\n  return (\n    <div className={styles.section}>\n      <Typography variant=\"h5\" color=\"textPrimary\">\n        {title} Menu\n      </Typography>\n      <Typography variant=\"body1\" color=\"textPrimary\" component=\"p\">\n        {body}\n      </Typography>\n      <div className={styles.buttonContainer}>\n        <Button variant=\"contained\" onClick={callback}>\n          Go to {title} Menu\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default MenuSection;\n","import React, { FC } from 'react';\nimport { Button } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as companyInteractors from '../../redux/interactors/companyInteractors';\nimport * as shopInteractors from '../../redux/interactors/shopInteractors';\nimport * as userInteractors from '../../redux/interactors/userInteractors';\nimport * as catalogueInteractors from '../../redux/interactors/catalogueInteractors';\n\ninterface DispatchProps {\n  logoutCompanyInteractor: typeof companyInteractors.logoutCompanyInteractor;\n  resetShopInteractor: typeof shopInteractors.resetShopInteractor;\n  logoutUserInteractor: typeof userInteractors.logoutUserInteractor;\n  resetCatalogueInteractor: typeof catalogueInteractors.resetCatalogueInteractor;\n  resetCompanyInteractor: typeof companyInteractors.resetCompanyInteractor;\n}\n\ninterface Props extends DispatchProps {}\n\nconst CompanyLogoutButton: FC<Props> = (props: Props) => {\n  const history = useHistory();\n  const {\n    resetShopInteractor,\n    logoutUserInteractor,\n    resetCatalogueInteractor,\n    logoutCompanyInteractor,\n    resetCompanyInteractor,\n  } = props;\n\n  const companyLogout = (): void => {\n    resetShopInteractor();\n    logoutUserInteractor();\n    resetCatalogueInteractor();\n    logoutCompanyInteractor();\n    localStorage.removeItem('Token');\n    resetCompanyInteractor();\n    history.replace('/');\n  };\n\n  return (\n    <Button variant=\"outlined\" color=\"secondary\" onClick={companyLogout}>\n      Company Logout\n    </Button>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...companyInteractors,\n      ...shopInteractors,\n      ...userInteractors,\n      ...catalogueInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(null, mapDispatchToProps)(CompanyLogoutButton);\n","import React, { FC } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { RootState } from '../redux/store';\nimport { UserState } from '../redux/types/UserTypes';\nimport { ShopState } from '../redux/types/ShopTypes';\nimport { Typography } from '@material-ui/core';\nimport UseStyles from '../styles/AdministrationPortalStyles';\nimport MenuSection from '../components/AdministrationPortalComponents/MenuSection';\nimport CompanyLogout from '../components/AdministrationPortalComponents/CompanyLogout';\n\ninterface StateProps {\n  user: UserState;\n  shop: ShopState;\n}\n\ninterface Props extends StateProps {\n  // extra props you want to add\n}\n\nconst AdministrationPortal: FC<Props> = (props: Props) => {\n  const history = useHistory();\n  const styles = UseStyles();\n  const { user, shop } = props;\n\n  const goToCallsMenu = (): void => {\n    history.push('/administration/calls');\n  };\n\n  const goToCatalogueMenu = (): void => {\n    history.push('/administration/catalogue');\n  };\n\n  const goToStoreMenu = (): void => {\n    history.push('/administration/shop');\n  };\n\n  const goToEmployeesMenu = (): void => {\n    history.push('/administration/employees');\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h2\" color=\"textSecondary\">\n        Administration Portal\n      </Typography>\n      <Typography variant=\"h4\" color=\"textSecondary\">\n        {shop?.name}\n      </Typography>\n      <div className={styles.mainContainer}>\n        {shop.id && (\n          <MenuSection\n            title={'Video Calls'}\n            body={'Menu for managing video calls from current store.'}\n            callback={goToCallsMenu}\n          />\n        )}\n        {user.sessionType === 'ADMINISTRATOR' && (\n          <>\n            {shop.id && (\n              <MenuSection\n                title={'Catalogue'}\n                body={'Menu for adding, removing or updating products from the main catalogue.'}\n                callback={goToCatalogueMenu}\n              />\n            )}\n            <MenuSection\n              title={'Shop'}\n              body={'Menu for updating shops, their location, policies and other specifications.'}\n              callback={goToStoreMenu}\n            />\n            <MenuSection\n              title={\"Employee's\"}\n              body={\"Menu for updating employee's status and for managing store employees.\"}\n              callback={goToEmployeesMenu}\n            />\n          </>\n        )}\n        <CompanyLogout />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    user: state.user,\n    shop: state.shop,\n  };\n};\n\nexport default connect(mapStateToProps)(AdministrationPortal);\n","// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst setSources = async ({ peerConnection, webcamVideo, remoteVideo }: any) => {\n  const localStream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n  const remoteStream = new MediaStream();\n\n  localStream.getTracks().forEach((track: any) => {\n    peerConnection.addTrack(track, localStream);\n  });\n\n  peerConnection.ontrack = (event: any) => {\n    event.streams[0].getTracks().forEach((track: any) => {\n      remoteStream.addTrack(track);\n    });\n  };\n\n  webcamVideo.srcObject = localStream;\n  remoteVideo.srcObject = remoteStream;\n\n  return { localStream, remoteStream };\n};\n\nexport default setSources;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\n","import React, { FC, useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Alert from '@material-ui/lab/Alert';\nimport { animated, useTransition } from 'react-spring';\n\nexport enum MessageType {\n  SUCCESS = 'success',\n  ERROR = 'error',\n}\n\ninterface Props {\n  message: string | boolean;\n  type: MessageType;\n  time: number;\n}\n\nconst SlidingMessage: FC<Props> = ({ message, type, time }: Props) => {\n  let animationTimeout = useRef<any>(null).current;\n  const [isVisible, setIsVisible] = useState<boolean>(true);\n  const transition = useTransition(isVisible, {\n    from: { y: -100, opacity: 0, margin: '4px 0', boxShadow: '5px 6px 12px -4px rgba(0,0,0,0.75)' },\n    enter: { y: 0, opacity: 1, margin: '4px 0', boxShadow: '5px 8px 15px -8px rgba(0,0,0,0.9)' },\n    leave: { y: -100, opacity: 0, margin: '4px 0', boxShadow: '5px 6px 12px -4px rgba(0,0,0,0.75)' },\n  });\n\n  useEffect(() => {\n    clearTimeout(animationTimeout);\n    animationTimeout = setTimeout(() => {\n      setIsVisible(false);\n    }, time);\n  }, []);\n\n  const handleClose = () => {\n    clearTimeout(animationTimeout);\n    setIsVisible(false);\n  };\n\n  return (\n    <>\n      {transition((style, item) =>\n        item ? (\n          <animated.div style={style}>\n            <Alert severity={type} onClose={handleClose}>\n              {message}\n            </Alert>\n          </animated.div>\n        ) : (\n          ''\n        ),\n      )}\n    </>\n  );\n};\n\nSlidingMessage.propTypes = {\n  message: PropTypes.string.isRequired || PropTypes.bool.isRequired,\n  type: PropTypes.any,\n  time: PropTypes.number.isRequired,\n};\n\nexport default SlidingMessage;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { ConnectionState } from '../types/ConnectionTypes';\nimport { firestore, storage } from '../../services/firebase/config';\nimport peerConnection from '../../services/webRTC/config';\n\nconst initialState: ConnectionState = {\n  firestore,\n  storage,\n  peerConnection,\n  localStream: null,\n  remoteStream: null,\n  hangup: false,\n};\n\nconst connection = createSlice({\n  name: 'connection',\n  initialState,\n  reducers: {\n    addLocalStream: (state: ConnectionState, action) => {\n      return {\n        ...state,\n        localStream: action.payload,\n      };\n    },\n    removeLocalStream: (state: ConnectionState) => {\n      return {\n        ...state,\n        localStream: initialState.localStream,\n      };\n    },\n    addRemoteStream: (state: ConnectionState, action) => {\n      return {\n        ...state,\n        remoteStream: action.payload,\n      };\n    },\n    removeRemoteStream: (state: ConnectionState) => {\n      return {\n        ...state,\n        remoteStream: initialState.remoteStream,\n      };\n    },\n    resetStreamConnection: (state: ConnectionState) => {\n      return {\n        ...state,\n        peerConnection: initialState.peerConnection,\n        localStream: initialState.localStream,\n        remoteStream: initialState.remoteStream,\n      };\n    },\n    setCallStateTrue: (state: ConnectionState) => {\n      return {\n        ...state,\n        hangup: true,\n      };\n    },\n    setCallStateFalse: (state: ConnectionState) => {\n      return {\n        ...state,\n        hangup: false,\n      };\n    },\n  },\n});\n\nexport const connectionReducer = connection.reducer;\nexport const connectionActions = connection.actions;\n","const servers = {\n  iceServers: [\n    {\n      urls: ['stun:stun1.l.google.com:19302', 'stun:stun2.l.google.com:19302'],\n    },\n  ],\n  iceCandidatePoolSize: 10,\n};\n\nconst peerConnection = new RTCPeerConnection(servers);\n\nexport default peerConnection;\n","import { connectionActions } from '../slices/connectionSlice';\nimport { buildInteractorDirectAction, buildInteractorDirectActionNoParams } from './base';\n\nexport const setLocalStreamInteractor = buildInteractorDirectAction(connectionActions.addLocalStream);\n\nexport const resetLocalStreamInteractor = buildInteractorDirectActionNoParams(connectionActions.removeLocalStream);\n\nexport const setRemoteStreamInteractor = buildInteractorDirectAction(connectionActions.addRemoteStream);\n\nexport const resetRemoteStreamInteractor = buildInteractorDirectActionNoParams(connectionActions.removeRemoteStream);\n\nexport const resetStreamConnectionInteractor = buildInteractorDirectActionNoParams(\n  connectionActions.resetStreamConnection,\n);\n\nexport const setCallStateTrueInteractor = buildInteractorDirectActionNoParams(connectionActions.setCallStateTrue);\n\nexport const setCallStateFalseInteractor = buildInteractorDirectActionNoParams(connectionActions.setCallStateFalse);\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\ninterface Params {\n  firestore: any;\n  shopId: string;\n  callId: string;\n  peerConnection: RTCPeerConnection;\n}\n\nconst takeCall = async ({ firestore, shopId, callId, peerConnection }: Params) => {\n  const callDocument = firestore.collection('shopCalls').doc(shopId).collection('calls').doc(callId);\n  const answerCandidates = callDocument.collection('answerCandidates');\n  const offerCandidates = callDocument.collection('offerCandidates');\n\n  peerConnection.onicecandidate = (event: any) => {\n    event.candidate && answerCandidates.add(event.candidate.toJSON());\n  };\n  const callData = (await callDocument.get()).data();\n\n  const offerDescription = callData?.offer;\n  await peerConnection.setRemoteDescription(new RTCSessionDescription(offerDescription));\n\n  const answerDescription = await peerConnection.createAnswer();\n  await peerConnection.setLocalDescription(answerDescription);\n\n  const answer = {\n    type: answerDescription.type,\n    sdp: answerDescription.sdp,\n  };\n  await callDocument.update({ answer, 'status.answered': true });\n\n  offerCandidates.onSnapshot((snapshot: any) => {\n    snapshot.docChanges().forEach((change: any) => {\n      if (change.type === 'added') {\n        const data = change.doc.data();\n        peerConnection.addIceCandidate(new RTCIceCandidate(data));\n      }\n    });\n  });\n};\n\nexport default takeCall;\n","import React, { FC, useEffect, useRef, useCallback } from 'react';\nimport { Button } from '@material-ui/core';\nimport { RootState } from '../../redux/store';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ConnectionState } from '../../redux/types/ConnectionTypes';\nimport setSources from '../../utils/videoHelpers/setMediaSources';\nimport * as connectionInteractors from '../../redux/interactors/connectionInteractors';\nimport takeCall from '../../utils/videoHelpers/takeCall';\n\ninterface StateProps {\n  connection: ConnectionState;\n}\n\ninterface DispatchProps {\n  setLocalStreamInteractor: typeof connectionInteractors.setLocalStreamInteractor;\n  setRemoteStreamInteractor: typeof connectionInteractors.setRemoteStreamInteractor;\n  resetStreamConnectionInteractor: typeof connectionInteractors.resetStreamConnectionInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  callId: string;\n  setOnCall: any;\n  shopId: string;\n}\n\nconst EmployeeVideoChat: FC<Props> = (props: Props) => {\n  const { callId, shopId } = props;\n  const { firestore, peerConnection } = props.connection;\n  const webcamVideo = useRef<any>();\n  const remoteVideo = useRef<any>();\n\n  useEffect(() => {\n    const data = {\n      peerConnection,\n      webcamVideo: webcamVideo.current,\n      remoteVideo: remoteVideo.current,\n    };\n    if (!props.connection.localStream || !props.connection.remoteStream) {\n      setSources(data)\n        .then(({ localStream, remoteStream }) => {\n          props.setLocalStreamInteractor(localStream);\n          props.setRemoteStreamInteractor(remoteStream);\n        })\n        .then(() => answerCall());\n    }\n    // Cleanup\n    return () => {\n      hangupCall();\n      if (webcamVideo.current && remoteVideo.current) {\n        webcamVideo.current.srcObject = null;\n        remoteVideo.current.srcObject = null;\n      }\n      props.resetStreamConnectionInteractor();\n    };\n  }, []);\n\n  const answerCall = async () => {\n    await takeCall({ firestore, shopId, callId, peerConnection });\n  };\n\n  const hangupCall = useCallback(async () => {\n    try {\n      // Reset Camera and Audio\n      if (webcamVideo.current && remoteVideo.current) {\n        webcamVideo.current.srcObject = null;\n        remoteVideo.current.srcObject = null;\n      }\n      props.resetStreamConnectionInteractor();\n      console.log('This it a test console log to prevent firestore excessive requests...');\n      await firestore.collection('shopCalls').doc(props.shopId).collection('calls').doc(callId).delete();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      props.setOnCall(null);\n    }\n  }, []);\n\n  return (\n    <div className=\"employee-main-container\">\n      <video className=\"employee-local-video-container\" ref={webcamVideo} autoPlay playsInline muted></video>\n      <video className=\"employee-remote-video-container\" ref={remoteVideo} autoPlay playsInline></video>\n      <div className=\"employee-button-container\">\n        <Button variant=\"contained\" color=\"secondary\" onClick={hangupCall}>\n          Hang up\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    connection: state.connection,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...connectionInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeVideoChat);\n","import React, { FC, useState, useEffect, useRef } from 'react';\nimport EmployeeVideoChat from '../components/CallsMenuComponents/EmployeeVideoChat';\nimport { VideoCall, Assistant } from '@material-ui/icons';\nimport { RootState } from '../redux/store';\nimport { connect } from 'react-redux';\nimport { ConnectionState } from '../redux/types/ConnectionTypes';\nimport '../styles/css/calls.scss';\nimport { Button } from '@material-ui/core';\nimport '../styles/css/catalogueMenu.scss';\nimport { Typography, List, ListItem, ListItemText, ListItemIcon, LinearProgress } from '@material-ui/core';\n\ninterface StateProps {\n  connection: ConnectionState;\n  shopId: string;\n  userId: string;\n}\n\ninterface Props extends StateProps {\n  // extra props you want to add\n}\n\nconst CallsMenu: FC<Props> = (props: Props) => {\n  const { firestore } = props.connection;\n  const [requests, setRequests] = useState<string[]>([]);\n  const [onCall, setOnCall] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const refRequests = useRef<string[]>([]);\n\n  useEffect(() => {\n    console.log('This it a test console log to prevent firestore excessive requests...');\n    const unsubscribe = firestore\n      .collection('shopCalls')\n      .doc(props.shopId)\n      .collection('calls')\n      .onSnapshot((snapshot) => {\n        // If there are changes in the current waiting calls\n        snapshot.docChanges().forEach((change) => {\n          if (change.type === 'modified') {\n            if (!change.doc.data().status?.answered && change.doc.data().status?.inProgress) {\n              refRequests.current.push(change.doc.id);\n              setRequests((oldArray) => {\n                if (!oldArray.includes(change.doc.id)) {\n                  return [...oldArray, change.doc.id];\n                }\n                return oldArray;\n              });\n            }\n          }\n          if (change.type === 'removed') {\n            refRequests.current = refRequests.current.filter((item) => item !== change.doc.id);\n            setRequests(refRequests.current.filter((item) => item !== change.doc.id));\n          }\n        });\n        setLoading(false);\n      });\n    return () => {\n      unsubscribe();\n    };\n  }, [firestore]);\n\n  const answerCall = async (requestId: string): Promise<void> => {\n    // If there's not a call, set it as current call\n    refRequests.current = requests;\n    !onCall && setOnCall(requestId);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h2\" gutterBottom>\n        Call Requests\n      </Typography>\n      <div className=\"requests-container\">\n        <List className=\"list\">\n          {requests.length === 0 && (\n            <ListItem className=\"item\" button disabled={true}>\n              <ListItemIcon>\n                <Assistant />\n              </ListItemIcon>\n              <ListItemText primary={'No calls yet...'} />\n            </ListItem>\n          )}\n          {requests.map((request, index) => (\n            <ListItem className=\"item\" button disabled={!!onCall} key={request} onClick={() => answerCall(request)}>\n              <ListItemIcon>\n                <VideoCall />\n              </ListItemIcon>\n              <ListItemText primary={`Answer client ${index + 1} call`} />\n            </ListItem>\n          ))}\n        </List>\n        {loading && <LinearProgress />}\n      </div>\n      {onCall && <EmployeeVideoChat callId={onCall} setOnCall={setOnCall} shopId={props.shopId} />}\n      <div className=\"btn-bottom-left\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            history.go(-1);\n          }}>\n          Back\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    connection: state.connection,\n    shopId: state.shop.id,\n    userId: state.user.id,\n  };\n};\n\nexport default connect(mapStateToProps)(CallsMenu);\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mainContainer: {\n      width: '80%',\n      margin: '8vh auto auto',\n    },\n    heading: {\n      fontSize: '1.1rem',\n      flexBasis: '33.33%',\n      flexShrink: 0,\n      textAlign: 'left',\n    },\n    secondaryHeading: {\n      fontSize: '0.95rem',\n      color: theme.palette.text.secondary,\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      textAlign: 'left',\n    },\n    fab: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\nexport default useStyles;\n","import React, { FC, useState } from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { IconButton, Collapse } from '@material-ui/core';\n\ninterface Props {\n  message: string;\n  openedStateInParent: any;\n}\n\nconst DissmisibleSuccessAlert: FC<Props> = (props: Props) => {\n  const { message, openedStateInParent } = props;\n  const [open, setOpen] = useState(true);\n\n  const handleClose = (): void => {\n    setOpen(false);\n    setTimeout(() => {\n      openedStateInParent(false);\n    }, 2000);\n  };\n\n  return (\n    <div>\n      <Collapse in={open}>\n        <Alert\n          action={\n            <IconButton aria-label=\"close\" color=\"inherit\" size=\"small\" onClick={handleClose}>\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }>\n          {message}\n        </Alert>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default DissmisibleSuccessAlert;\n","const verifyString = (text: string): boolean => {\n  let admissible = true;\n  if (!text.replace(/\\s/g, '').length) {\n    admissible = false;\n  }\n  if (!text) {\n    admissible = false;\n  }\n  return admissible;\n};\n\nexport default verifyString;\n","import React, { FC, useState, useEffect } from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DissmisibleSuccessAlert from '../GeneralUseComponents/DissmissibleSuccessAlert';\nimport useStyles from '../../styles/AccordionMenuStyles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport { ShopState } from '../../redux/types/ShopTypes';\nimport { ConnectionState } from '../../redux/types/ConnectionTypes';\nimport { CatalogueState, ProductPostFields } from '../../redux/types/CatalogueTypes';\nimport * as catalogueInteractors from '../../redux/interactors/catalogueInteractors';\nimport verifyString from '../../utils/globalHelpers/verifyString';\nimport AddIcon from '@material-ui/icons/Add';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  Divider,\n  AccordionActions,\n  Button,\n  TextField,\n  LinearProgress,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Fab,\n} from '@material-ui/core';\n\ninterface StateProps {\n  shop: ShopState;\n  catalogue: CatalogueState;\n  connection: ConnectionState;\n}\n\ninterface DispatchProps {\n  addProductToCatalogueInteractor: typeof catalogueInteractors.addProductToCatalogueInteractor;\n  resetCatalogueInteractor: typeof catalogueInteractors.resetCatalogueInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  expanded: string | false;\n  handleChange: (panel: string) => any;\n  panel: string;\n  heading: string;\n  summary: string;\n}\n\nconst CreateProduct: FC<Props> = (props: Props) => {\n  const { expanded, handleChange, panel, heading, summary, shop, catalogue } = props;\n  const [name, setName] = useState('');\n  const [brand, setBrand] = useState('');\n  const [os, setOS] = useState('');\n  const [color, setColor] = useState('');\n  const [inches, setInches] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const styles = useStyles();\n\n  useEffect(() => {\n    if (catalogue.addProductToCatalogueStatus.success) {\n      setShowSuccessMessage(true);\n      props.resetCatalogueInteractor();\n    }\n  }, [catalogue.addProductToCatalogueStatus, setShowSuccessMessage, props.resetCatalogueInteractor]);\n\n  const handleCancelCreate = (): void => {\n    setName('');\n    setBrand('');\n    setOS('');\n    setColor('');\n    setInches('');\n    setPrice('');\n    setImage('');\n  };\n\n  const handleCreate = (): void => {\n    const productAuthFields: ProductPostFields = {\n      shopId: shop.id,\n      name,\n      brand,\n      os,\n      color,\n      inches: Math.trunc(parseFloat(inches)).toString(),\n      price,\n      image,\n    };\n    props.addProductToCatalogueInteractor(productAuthFields);\n    handleCancelCreate();\n  };\n\n  const handleOS = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setOS(event.target.value as string);\n  };\n\n  const onFileChange = async (event: any) => {\n    const file = event.target.files[0];\n    const storageRef: any = await props.connection.storage.ref(`${shop.id}/${file.name}`);\n    const fileRef = storageRef.child(file.name);\n    await fileRef.put(file);\n    const url = await fileRef.getDownloadURL();\n    setImage(url);\n  };\n\n  const fieldsVerified: boolean =\n    verifyString(name) &&\n    verifyString(brand) &&\n    verifyString(os) &&\n    verifyString(color) &&\n    verifyString(inches) &&\n    verifyString(image) &&\n    verifyString(price);\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} expanded={expanded === panel} onChange={handleChange(panel)}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1bh-content\" id=\"panel1bh-header\">\n        <Typography className={styles.heading}>{heading}</Typography>\n        <Typography className={styles.secondaryHeading}>{summary}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <TextField\n          value={name}\n          variant=\"standard\"\n          required\n          fullWidth\n          id=\"name\"\n          label=\"Name\"\n          name=\"name\"\n          onChange={(event) => setName(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <TextField\n          value={brand}\n          variant=\"standard\"\n          required\n          fullWidth\n          id=\"brand\"\n          label=\"Brand\"\n          name=\"brand\"\n          onChange={(event) => setBrand(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <FormControl variant=\"outlined\" className={styles.formControl} fullWidth>\n          <InputLabel id=\"demo-simple-select-outlined-label\">OS</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={os}\n            onChange={(event) => handleOS(event)}\n            label=\"Age\">\n            <MenuItem value={'Android'}>Android</MenuItem>\n            <MenuItem value={'IOS'}>IOS</MenuItem>\n            <MenuItem value={'Windows'}>Windows</MenuItem>\n          </Select>\n        </FormControl>\n      </AccordionDetails>\n      <AccordionDetails>\n        <TextField\n          value={color}\n          variant=\"standard\"\n          required\n          fullWidth\n          id=\"color\"\n          label=\"Device Color\"\n          name=\"color\"\n          onChange={(event) => setColor(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <TextField\n          value={inches}\n          variant=\"standard\"\n          type=\"number\"\n          required\n          fullWidth\n          id=\"inches\"\n          label=\"Inches\"\n          name=\"inches\"\n          onChange={(event) => setInches(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <TextField\n          value={price}\n          variant=\"standard\"\n          type=\"number\"\n          required\n          fullWidth\n          id=\"price\"\n          label=\"Price\"\n          name=\"price\"\n          onChange={(event) => setPrice(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <label htmlFor=\"upload-photo\">\n          <input\n            style={{ display: 'none' }}\n            id=\"upload-photo\"\n            name=\"upload-photo\"\n            type=\"file\"\n            onChange={onFileChange}\n          />\n          <Fab color=\"primary\" size=\"small\" component=\"span\" aria-label=\"add\" variant=\"extended\">\n            <AddIcon /> Upload photo\n          </Fab>\n        </label>\n      </AccordionDetails>\n      <Divider />\n      <AccordionActions>\n        <Button size=\"small\" onClick={() => handleCancelCreate()}>\n          Cancel\n        </Button>\n        <Button size=\"small\" color=\"primary\" disabled={!fieldsVerified} onClick={handleCreate}>\n          Create Product\n        </Button>\n      </AccordionActions>\n      {catalogue.addProductToCatalogueStatus.loading && <LinearProgress />}\n      {showSuccessMessage && (\n        <DissmisibleSuccessAlert\n          message={'Product successfully created, you can close this menu now.'}\n          openedStateInParent={setShowSuccessMessage}\n        />\n      )}\n    </Accordion>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    shop: state.shop,\n    catalogue: state.catalogue,\n    connection: state.connection,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...catalogueInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProduct);\n","import React, { FC, useEffect, useState } from 'react';\nimport { CatalogueState } from '../../redux/types/CatalogueTypes';\nimport { ShopState } from '../../redux/types/ShopTypes';\nimport * as catalogueInteractors from '../../redux/interactors/catalogueInteractors';\nimport { RootState } from '../../redux/store';\nimport { bindActionCreators } from '@reduxjs/toolkit';\nimport { connect } from 'react-redux';\nimport { Fab, LinearProgress, Paper, Typography } from '@material-ui/core';\nimport { CSVReader } from 'react-papaparse';\nimport useStyles from '../../styles/AccordionMenuStyles';\nimport { FaFileCsv } from 'react-icons/fa';\nimport DissmisibleSuccessAlert from '../GeneralUseComponents/DissmissibleSuccessAlert';\n\ninterface StateProps {\n  shop: ShopState;\n  catalogue: CatalogueState;\n}\n\ninterface DispatchProps {\n  addProductsToCatalogueInteractor: typeof catalogueInteractors.addProductToCatalogueInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {}\n\nconst CreateProductsCSV: FC<Props> = (props: Props) => {\n  const styles = useStyles();\n  const [csvData, setData] = useState<Array<any> | null>(null);\n  const { shop, catalogue } = props;\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [showErrorMessage, setShowErrorMessage] = useState<string>('');\n\n  useEffect(() => {\n    if (catalogue.addProductsToCatalogueStatus.success) {\n      setShowSuccessMessage(true);\n    }\n  }, [catalogue.addProductsToCatalogueStatus]);\n\n  const handleOnDrop = (data: any) => {\n    setData(data);\n  };\n\n  const handleOnError = (err: any) => {\n    setShowErrorMessage(`An unexpected error ocurred: ${err}`);\n  };\n\n  function isValid(productAuthFields: any): boolean {\n    let validated = true;\n    Object.values(productAuthFields).forEach((value) => {\n      if (value == undefined || value == '') {\n        validated = false;\n      }\n    });\n    return validated;\n  }\n\n  const handleUpload = (): void => {\n    const products: any[] = [];\n    csvData?.slice(1).forEach((dataRow: { data: any }) => {\n      const productAuthFields: any = {\n        shopId: shop.id,\n        name: dataRow.data[0],\n        brand: dataRow.data[1],\n        os: dataRow.data[2],\n        color: dataRow.data[3],\n        inches: Number(dataRow.data[4]),\n        price: Number(dataRow.data[5]),\n        image:\n          'https://firebasestorage.googleapis.com/v0/b/eabmodel-ff034.appspot.com/o/PhoneGeneric.jpeg?alt=media&token=2fc686b6-295e-4d59-9af0-db8897463b36',\n      };\n      // TODO: check if it's necessary to check if attributes make sense (like os being part of a valid list)\n      if (isValid(productAuthFields)) {\n        products.push(productAuthFields);\n      }\n    });\n    props.addProductsToCatalogueInteractor(products);\n  };\n\n  return (\n    <Paper elevation={1}>\n      <div className=\"flex-container-between\">\n        <Typography className={styles.heading}>Import Products from CSV</Typography>\n        <div className=\"flex-container-evenly\">\n          <CSVReader onDrop={handleOnDrop} onError={handleOnError} addRemoveButton>\n            <span>Drop CSV file here or click to upload.</span>\n          </CSVReader>\n          <Fab color=\"primary\" className={styles.fab} onClick={handleUpload}>\n            <FaFileCsv style={{ fontSize: 30 }} />\n          </Fab>\n        </div>\n      </div>\n      {catalogue.addProductsToCatalogueStatus.loading && <LinearProgress />}\n      {showSuccessMessage && (\n        <DissmisibleSuccessAlert\n          message={'Products successfully created, you can close this menu now.'}\n          openedStateInParent={setShowSuccessMessage}\n        />\n      )}\n      {showErrorMessage}\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    shop: state.shop,\n    catalogue: state.catalogue,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...catalogueInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProductsCSV);\n","import React, { FC, useState, useEffect } from 'react';\nimport useStyles from '../../styles/AccordionMenuStyles';\nimport { CatalogueState, Product } from '../../redux/types/CatalogueTypes';\nimport * as catalogueInteractors from '../../redux/interactors/catalogueInteractors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DissmisibleSuccessAlert from '../GeneralUseComponents/DissmissibleSuccessAlert';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport {\n  Accordion,\n  AccordionSummary,\n  Divider,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Typography,\n  Button,\n  LinearProgress,\n} from '@material-ui/core';\n\ninterface StateProps {\n  catalogue: CatalogueState;\n}\n\ninterface DispatchProps {\n  deleteProductFromCatalogueInteractor: typeof catalogueInteractors.deleteProductFromCatalogueInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  expanded: string | false;\n  handleChange: (panel: string) => any;\n  panel: string;\n  heading: string;\n  summary: string;\n}\n\nconst DeleteProduct: FC<Props> = (props: Props) => {\n  const { expanded, handleChange, panel, heading, summary, catalogue } = props;\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const styles = useStyles();\n\n  useEffect(() => {\n    if (catalogue.deleteProductFromCatalogueStatus.success) {\n      setShowSuccessMessage(true);\n    }\n  }, [catalogue.deleteProductFromCatalogueStatus, setShowSuccessMessage]);\n\n  const handleDelete = (id: string): void => {\n    props.deleteProductFromCatalogueInteractor(id);\n  };\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} expanded={expanded === panel} onChange={handleChange(panel)}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1bh-content\" id=\"panel1bh-header\">\n        <Typography className={styles.heading}>{heading}</Typography>\n        <Typography className={styles.secondaryHeading}>{summary}</Typography>\n      </AccordionSummary>\n      <List dense>\n        {catalogue.products.map((product: Product) => {\n          return (\n            <ListItem key={product.id} button>\n              <ListItemText\n                id={product.id}\n                primary={`${product.name}`}\n                secondary={`Brand: ${product.brand} ${product.os} Color: ${product.color}`}\n              />\n              <ListItemSecondaryAction>\n                <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => handleDelete(product.id)}>\n                  Delete\n                </Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        })}\n      </List>\n      <Divider />\n      {catalogue.deleteProductFromCatalogueStatus.loading && <LinearProgress />}\n      {showSuccessMessage && (\n        <DissmisibleSuccessAlert\n          message={'Product successfully deleted, you can close this menu now.'}\n          openedStateInParent={setShowSuccessMessage}\n        />\n      )}\n    </Accordion>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    catalogue: state.catalogue,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...catalogueInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteProduct);\n","import React, { FC, useState, useEffect } from 'react';\n// import { AxiosResponse } from 'axios';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DissmisibleSuccessAlert from '../GeneralUseComponents/DissmissibleSuccessAlert';\nimport useStyles from '../../styles/AccordionMenuStyles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport { ShopState } from '../../redux/types/ShopTypes';\nimport { ConnectionState } from '../../redux/types/ConnectionTypes';\nimport { CatalogueState, ProductPutFields, Product } from '../../redux/types/CatalogueTypes';\nimport * as catalogueInteractors from '../../redux/interactors/catalogueInteractors';\nimport verifyString from '../../utils/globalHelpers/verifyString';\nimport AddIcon from '@material-ui/icons/Add';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  Divider,\n  AccordionActions,\n  Button,\n  TextField,\n  LinearProgress,\n  Fab,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from '@material-ui/core';\n\ninterface StateProps {\n  shop: ShopState;\n  catalogue: CatalogueState;\n  connection: ConnectionState;\n}\n\ninterface DispatchProps {\n  editProductFromCatalogueInteractor: typeof catalogueInteractors.editProductFromCatalogueInteractor;\n  resetCatalogueInteractor: typeof catalogueInteractors.resetCatalogueInteractor;\n  getCatalogueInteractor: typeof catalogueInteractors.getCatalogueInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  panel: string;\n  heading: string;\n  summary: string;\n  product: Product;\n}\n\nconst EditProduct: FC<Props> = (props: Props) => {\n  const { panel, heading, summary, shop, catalogue, product } = props;\n  const [expanded, setExpanded] = useState<string | false>(false);\n  const [name, setName] = useState(product.name);\n  const [brand, setBrand] = useState(product.brand);\n  const [os, setOS] = useState(product.os);\n  const [color, setColor] = useState(product.color);\n  const [inches, setInches] = useState(product.inches.toString());\n  const [price, setPrice] = useState(product.price.toString());\n  const [image, setImage] = useState(product.image);\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const styles = useStyles();\n\n  useEffect(() => {\n    if (catalogue.editProductFromCatalogueStatus.success) {\n      setShowSuccessMessage(true);\n    }\n  }, [catalogue.editProductFromCatalogueStatus, setShowSuccessMessage]);\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const handleChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const handleCancelEdit = (): void => {\n    setName(product.name);\n    setBrand(product.brand);\n    setOS(product.os);\n    setColor(product.color);\n    setInches(product.inches.toString());\n    setPrice(product.price.toString());\n    setImage(product.image);\n  };\n\n  const handleEdit = (): void => {\n    const productAuthFields: ProductPutFields = {\n      id: product.id,\n      shopId: shop.id,\n      name,\n      brand,\n      os,\n      color,\n      inches: Number(inches),\n      price: Number(price),\n      image,\n    };\n    props.editProductFromCatalogueInteractor(productAuthFields);\n  };\n\n  const onFileChange = async (event: any) => {\n    const file = event.target.files[0];\n    const storageRef: any = await props.connection.storage.ref(`${shop.id}/${file.name}`);\n    const fileRef = storageRef.child(file.name);\n    await fileRef.put(file);\n    const url = await fileRef.getDownloadURL();\n    setImage(url);\n  };\n\n  const fieldsVerified: boolean =\n    verifyString(name) &&\n    verifyString(brand) &&\n    verifyString(os) &&\n    verifyString(color) &&\n    verifyString(inches) &&\n    verifyString(image) &&\n    verifyString(price);\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} expanded={expanded === panel} onChange={handleChange(panel)}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1bh-content\" id=\"panel1bh-header\">\n        <Typography className={styles.heading}>{heading}</Typography>\n        <Typography className={styles.secondaryHeading}>{summary}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <TextField\n          value={name}\n          variant=\"standard\"\n          required\n          fullWidth\n          id=\"name\"\n          label=\"Name\"\n          name=\"name\"\n          onChange={(event) => setName(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <TextField\n          value={brand}\n          variant=\"standard\"\n          required\n          fullWidth\n          id=\"brand\"\n          label=\"Brand\"\n          name=\"brand\"\n          onChange={(event) => setBrand(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <FormControl variant=\"outlined\" className={styles.formControl} fullWidth>\n          <InputLabel id=\"demo-simple-select-outlined-label\">OS</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={os}\n            onChange={(event: any) => setOS(event.target.value)}\n            label=\"Age\">\n            <MenuItem value={'Android'}>Android</MenuItem>\n            <MenuItem value={'IOS'}>IOS</MenuItem>\n            <MenuItem value={'Windows'}>Windows</MenuItem>\n          </Select>\n        </FormControl>\n      </AccordionDetails>\n      <AccordionDetails>\n        <TextField\n          value={color}\n          variant=\"standard\"\n          required\n          fullWidth\n          id=\"color\"\n          label=\"Device Color\"\n          name=\"color\"\n          onChange={(event) => setColor(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <TextField\n          value={inches}\n          variant=\"standard\"\n          type=\"number\"\n          required\n          fullWidth\n          id=\"inches\"\n          label=\"Inches\"\n          name=\"inches\"\n          onChange={(event) => setInches(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <TextField\n          value={price}\n          variant=\"standard\"\n          type=\"number\"\n          required\n          fullWidth\n          id=\"price\"\n          label=\"Price\"\n          name=\"price\"\n          onChange={(event) => setPrice(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <label htmlFor=\"upload-photo\">\n          <input\n            style={{ display: 'none' }}\n            id=\"upload-photo\"\n            name=\"upload-photo\"\n            type=\"file\"\n            onChange={onFileChange}\n          />\n          <Fab color=\"primary\" size=\"small\" component=\"span\" aria-label=\"add\" variant=\"extended\">\n            <AddIcon /> Upload photo\n          </Fab>\n        </label>\n      </AccordionDetails>\n      <Divider />\n      <AccordionActions>\n        <Button size=\"small\" onClick={handleCancelEdit}>\n          Cancel\n        </Button>\n        <Button size=\"small\" color=\"primary\" disabled={!fieldsVerified} onClick={handleEdit}>\n          Edit Product\n        </Button>\n      </AccordionActions>\n      {catalogue.editProductFromCatalogueStatus.loading && <LinearProgress />}\n      {showSuccessMessage && (\n        <DissmisibleSuccessAlert\n          message={'Product successfully edited, you can close this menu now.'}\n          openedStateInParent={setShowSuccessMessage}\n        />\n      )}\n    </Accordion>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    shop: state.shop,\n    catalogue: state.catalogue,\n    connection: state.connection,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...catalogueInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProduct);\n","import React, { FC, useState, useEffect } from 'react';\nimport useStyles from '../../styles/AccordionMenuStyles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport { ShopState } from '../../redux/types/ShopTypes';\nimport { CatalogueState } from '../../redux/types/CatalogueTypes';\nimport * as catalogueInteractors from '../../redux/interactors/catalogueInteractors';\nimport EditProduct from '../../components/CatalogueMenu/ProductEdit';\nimport { Product } from '../../redux/types/CatalogueTypes';\nimport { UserState } from '../../redux/types/UserTypes';\n\ninterface StateProps {\n  shop: ShopState;\n  catalogue: CatalogueState;\n  user: UserState;\n}\n\ninterface DispatchProps {\n  getCatalogueInteractor: typeof catalogueInteractors.getCatalogueInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {}\n\nconst ProductsShow: FC<Props> = (props: Props) => {\n  const styles = useStyles();\n  const { catalogue } = props;\n  const [products, setProducts] = useState<Product[]>(catalogue.products);\n\n  useEffect(() => {\n    setProducts(catalogue.products);\n  }, [props.getCatalogueInteractor, catalogue.getCatalogueStatus.success]);\n\n  return (\n    <>\n      {products.length ? (\n        <div className={styles.mainContainer}>\n          <h3>Edit a Product</h3>\n        </div>\n      ) : null}\n      {products.map((product) => {\n        return (\n          <EditProduct\n            key={product.id}\n            panel={'panel1'}\n            heading={product.name}\n            summary={'Press to edit this product'}\n            product={product}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    shop: state.shop,\n    catalogue: state.catalogue,\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...catalogueInteractors,\n    },\n    dispatch,\n  ),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsShow);\n","import React, { FC, useState } from 'react';\nimport useStyles from '../styles/AccordionMenuStyles';\nimport CreateSingleProductAccordionRow from '../components/CatalogueMenu/ProductRegister';\nimport CreateProductsCSV from '../components/CatalogueMenu/ProductRegisterCSV';\nimport DeleteProduct from '../components/CatalogueMenu/ProductDelete';\nimport EditProducts from '../components/CatalogueMenu/ProductsEdit';\nimport { Button } from '@material-ui/core';\nimport '../styles/css/catalogueMenu.scss';\nimport { useHistory } from 'react-router-dom';\n\nconst CatalogueMenu: FC = () => {\n  const history = useHistory();\n  const styles = useStyles();\n  const [expanded, setExpanded] = useState<string | false>(false);\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const handleChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <>\n      <div className={styles.mainContainer}>\n        <CreateSingleProductAccordionRow\n          expanded={expanded}\n          handleChange={handleChange}\n          panel={'panel1'}\n          heading={'Create Single Product'}\n          summary={'Here you can create a product for this shop, giving it all its necesary attributes.'}\n        />\n        <CreateProductsCSV />\n        <DeleteProduct\n          expanded={expanded}\n          handleChange={handleChange}\n          panel={'panel2'}\n          heading={'Delete Product'}\n          summary={'Here you can delete a product from this shop.'}\n        />\n        <EditProducts />\n      </div>\n      <div className=\"btn-bottom-left\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            history.go(-1);\n          }}>\n          Back\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default CatalogueMenu;\n","import { Button, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { bindActionCreators } from '@reduxjs/toolkit';\nimport React, { FC, useEffect, useState } from 'react';\nimport { RootState } from '../../redux/store';\nimport * as userInteractors from '../../redux/interactors/userInteractors';\nimport { connect } from 'react-redux';\nimport { ShopBackendState } from '../../redux/types/CompanyTypes';\nimport '../../styles/css/employeesMenu.scss';\nimport { ReassignUserFields, UserState } from '../../redux/types/UserTypes';\nimport * as companyInteractors from '../../redux/interactors/companyInteractors';\n\ninterface StateProps {\n  user: UserState;\n}\n\ninterface DispatchProps {\n  reassignUserShopInteractor: typeof userInteractors.reassignUserShopInteractor;\n  handleUserReassignInteractor: typeof companyInteractors.handleUserReassignInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  defaultId: string;\n  shops: ShopBackendState[];\n  userId: string;\n}\n\nconst ReassignShop: FC<Props> = (props: Props) => {\n  const { user, shops, defaultId, userId, reassignUserShopInteractor, handleUserReassignInteractor } = props;\n  const [selectedShop, setSelectedShop] = useState(defaultId);\n\n  useEffect(() => {\n    const request: ReassignUserFields = {\n      userId: userId,\n      shopId: selectedShop,\n    };\n    if (user.reassignUserShopStatus.success) {\n      handleUserReassignInteractor(request);\n    }\n  }, [user.reassignUserShopStatus.success]);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setSelectedShop(event.target.value as string);\n  };\n\n  const handleReassign = () => {\n    const request: ReassignUserFields = {\n      userId: userId,\n      shopId: selectedShop,\n    };\n    reassignUserShopInteractor(request);\n    handleUserReassignInteractor(request);\n  };\n\n  const menuItems = shops?.map((shop) => {\n    return (\n      <MenuItem key={shop.id} value={shop.id}>\n        {shop.name}\n      </MenuItem>\n    );\n  });\n\n  return (\n    <div className=\"flex-container\">\n      <FormControl variant=\"outlined\">\n        <InputLabel id=\"demo-simple-select-outlined-label\">Shop</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={selectedShop}\n          onChange={handleChange}\n          label=\"shop\">\n          {menuItems.map((x) => x)}\n        </Select>\n      </FormControl>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleReassign}>\n        Reassign\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...userInteractors,\n      ...companyInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReassignShop);\n","import React, { FC, useEffect, useState } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { UserState } from '../../redux/types/UserTypes';\nimport ReassignShop from './ReassignShop';\nimport * as userInteractors from '../../redux/interactors/userInteractors';\nimport { Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from '@reduxjs/toolkit';\nimport { RootState } from '../../redux/store';\nimport { ShopBackendState } from '../../redux/types/CompanyTypes';\nimport * as companyInteractors from '../../redux/interactors/companyInteractors';\n\ninterface StateProps {\n  user: UserState;\n}\n\ninterface DispatchProps {\n  deleteUserInteractor: typeof userInteractors.deleteUserInteractor;\n  removeCompanyUserInteractor: typeof companyInteractors.removeCompanyUserInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  data: UserState;\n  shops: ShopBackendState[];\n}\n\nconst CompanyUserRow: FC<Props> = (props: Props) => {\n  const { user, data, shops, deleteUserInteractor, removeCompanyUserInteractor } = props;\n  const [deleted, setDeleted] = useState(false);\n\n  useEffect(() => {\n    if (user.deleteUserStatus.success && deleted) {\n      removeCompanyUserInteractor(data.id);\n    }\n  }, [user.deleteUserStatus.success]);\n\n  const handleDelete = (userId: string) => {\n    deleteUserInteractor(userId);\n    setDeleted(true);\n  };\n\n  const reassignSection = (sessionType: string, defaultId: string, userId: string) => {\n    if (sessionType === 'ADMINISTRATOR') {\n      return;\n    } else {\n      return <ReassignShop shops={shops} defaultId={defaultId} userId={userId} />;\n    }\n  };\n\n  const deleteBtn = (sessionType: string) => {\n    if (sessionType === 'ADMINISTRATOR') {\n      return;\n    } else {\n      return (\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => handleDelete(data.id)}>\n          Delete\n        </Button>\n      );\n    }\n  };\n\n  return (\n    <TableRow key={data.username}>\n      <TableCell component=\"th\" scope=\"row\">\n        {data.username}\n      </TableCell>\n      <TableCell align=\"right\">{data.sessionType}</TableCell>\n      <TableCell align=\"center\">{reassignSection(data.sessionType, data.shopId, data.id)}</TableCell>\n      <TableCell align=\"left\">{deleteBtn(data.sessionType)}</TableCell>\n    </TableRow>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...userInteractors,\n      ...companyInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyUserRow);\n","import React, { FC, useEffect } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport * as companyInteractors from '../../redux/interactors/companyInteractors';\nimport { CompanyState } from '../../redux/types/CompanyTypes';\nimport { RootState } from '../../redux/store';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from '@reduxjs/toolkit';\nimport '../../styles/css/employeesMenu.scss';\nimport CompanyUserRow from './CompanyUserRow';\nimport { UserState } from '../../redux/types/UserTypes';\n\ninterface StateProps {\n  company: CompanyState;\n  user: UserState;\n}\n\ninterface DispatchProps {\n  getCompanyUsersInteractor: typeof companyInteractors.getCompanyUsersInteractor;\n  getCompanyShopsInteractor: typeof companyInteractors.getCompanyShopsInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {}\n\nconst CompanyUsers: FC<Props> = (props: Props) => {\n  const { company, user, getCompanyUsersInteractor, getCompanyShopsInteractor } = props;\n\n  useEffect(() => {\n    getCompanyUsersInteractor(company.id);\n  }, [getCompanyUsersInteractor, user.registerUserStatus]);\n\n  useEffect(() => {\n    getCompanyShopsInteractor(company.id);\n  }, [getCompanyShopsInteractor]);\n\n  return (\n    <Paper>\n      <div>\n        <h1>Company&apos;s Employees</h1>\n        <TableContainer component={Paper}>\n          <Table aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>User</TableCell>\n                <TableCell align=\"right\">Type</TableCell>\n                <TableCell align=\"center\">Shop</TableCell>\n                <TableCell align=\"center\"></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {company.users.map((row) => (\n                <CompanyUserRow key={row.id} data={row} shops={company?.shops} />\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    company: state.company,\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...companyInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyUsers);\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mainContainer: {\n      width: '80%',\n      margin: '8vh auto auto',\n    },\n    heading: {\n      fontSize: '1.1rem',\n      flexBasis: '33.33%',\n      flexShrink: 0,\n      textAlign: 'left',\n    },\n    secondaryHeading: {\n      fontSize: '0.95rem',\n      color: theme.palette.text.secondary,\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      textAlign: 'left',\n    },\n    fab: {\n      margin: theme.spacing(2),\n    },\n    alertMessage: {\n      textAlign: 'left',\n      color: 'red',\n      padding: 0,\n      margin: 0,\n    },\n  }),\n);\n\nexport default useStyles;\n","import React, { FC, useEffect, useState } from 'react';\nimport useStyles from '../../styles/UserRegisterStyles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  Divider,\n  AccordionActions,\n  Button,\n  TextField,\n  LinearProgress,\n} from '@material-ui/core';\nimport DissmisibleSuccessAlert from '../GeneralUseComponents/DissmissibleSuccessAlert';\nimport { RootState } from '../../redux/store';\nimport { ShopState } from '../../redux/types/ShopTypes';\nimport { CompanyState } from '../../redux/types/CompanyTypes';\nimport { PostUserFields, UserState } from '../../redux/types/UserTypes';\nimport verifyString from '../../utils/globalHelpers/verifyString';\nimport { bindActionCreators } from '@reduxjs/toolkit';\nimport * as userInteractors from '../../redux/interactors/userInteractors';\nimport { connect } from 'react-redux';\nimport { Alert } from '@material-ui/lab';\n\nconst validateEmail = (email: string): boolean => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\ninterface StateProps {\n  shop: ShopState;\n  company: CompanyState;\n  user: UserState;\n}\n\ninterface DispatchProps {\n  registerUserInteractor: typeof userInteractors.registerUserInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  expanded: string | false;\n  handleChange: (panel: string) => any;\n  panel: string;\n  heading: string;\n  summary: string;\n}\n\nconst CreateUser: FC<Props> = (props: Props) => {\n  const { expanded, handleChange, panel, heading, summary, user, shop, company, registerUserInteractor } = props;\n  const styles = useStyles();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n\n  useEffect(() => {\n    if (user.registerUserStatus.success) {\n      setShowSuccessMessage(true);\n    }\n  }, [user.registerUserStatus, setShowSuccessMessage]);\n\n  const onEmailChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = event.target;\n    if (value) {\n      if (!validateEmail(value)) {\n        setEmailError('This must be an email');\n      } else {\n        setEmailError('');\n      }\n    } else {\n      setEmailError('');\n    }\n    setEmail(value);\n  };\n\n  const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = event.target;\n    if (value && value.length <= 7) {\n      setPasswordError('Password must be longer than 7 characters');\n    } else {\n      setPasswordError('');\n    }\n    setPassword(value);\n  };\n\n  const handleCancelCreate = (): void => {\n    setUsername('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleCreate = (): void => {\n    const userAuthFields: PostUserFields = {\n      username,\n      email,\n      companyId: company.id,\n      shopId: shop.id,\n      password,\n    };\n\n    registerUserInteractor(userAuthFields);\n    // Called to reset the state\n    handleCancelCreate();\n  };\n\n  const fieldsVerified: boolean =\n    verifyString(username) && validateEmail(email) && verifyString(email) && verifyString(password);\n\n  const emailAlert = () => {\n    if (emailError === '') {\n      return;\n    } else {\n      return <Alert severity=\"warning\">{emailError}</Alert>;\n    }\n  };\n\n  const passwordAlert = () => {\n    if (passwordError === '') {\n      return;\n    } else {\n      return <Alert severity=\"warning\">{passwordError}</Alert>;\n    }\n  };\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} expanded={expanded === panel} onChange={handleChange(panel)}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1bh-content\" id=\"panel1bh-header\">\n        <Typography className={styles.heading}>{heading}</Typography>\n        <Typography className={styles.secondaryHeading}>{summary}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <TextField\n          value={username}\n          variant=\"standard\"\n          required\n          fullWidth\n          id=\"name\"\n          label=\"Username\"\n          name=\"username\"\n          onChange={(event) => setUsername(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <TextField\n          value={email}\n          variant=\"standard\"\n          required\n          fullWidth\n          id=\"name\"\n          label=\"Email\"\n          name=\"email\"\n          onChange={onEmailChange}\n        />\n      </AccordionDetails>\n      {emailAlert()}\n      <AccordionDetails>\n        <TextField\n          value={password}\n          variant=\"standard\"\n          type=\"password\"\n          required\n          fullWidth\n          id=\"name\"\n          label=\"Password\"\n          name=\"password\"\n          onChange={onPasswordChange}\n        />\n      </AccordionDetails>\n      {passwordAlert()}\n      <Divider />\n      <AccordionActions>\n        <Button size=\"small\" onClick={() => handleCancelCreate()}>\n          Cancel\n        </Button>\n        <Button size=\"small\" color=\"primary\" disabled={!fieldsVerified} onClick={handleCreate}>\n          Create User\n        </Button>\n      </AccordionActions>\n      {user.registerUserStatus.loading && <LinearProgress />}\n      {showSuccessMessage && (\n        <DissmisibleSuccessAlert\n          message={'Employee user successfully created, you can close this menu now.'}\n          openedStateInParent={setShowSuccessMessage}\n        />\n      )}\n    </Accordion>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    shop: state.shop,\n    company: state.company,\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...userInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateUser);\n","import { Button } from '@material-ui/core';\nimport React, { FC, useState } from 'react';\nimport CompanyUsers from '../components/EmployeesMenu/CompanyUsers';\nimport CreateUser from '../components/EmployeesMenu/UserRegister';\nimport useStyles from '../styles/AccordionMenuStyles';\n\nconst EmployeesMenu: FC = () => {\n  const styles = useStyles();\n  const [expanded, setExpanded] = useState<string | false>(false);\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const handleChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <>\n      <div className={styles.mainContainer}>\n        <CreateUser\n          expanded={expanded}\n          handleChange={handleChange}\n          panel={'panel1'}\n          heading={'Create Single User'}\n          summary={'Here you can create a user for this shop, giving it all its necesary attributes.'}\n        />\n        <CompanyUsers />\n      </div>\n      <div className=\"btn-bottom-left\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            history.go(-1);\n          }}>\n          Back\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default EmployeesMenu;\n","import React, { FC, useState, useEffect } from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DissmisibleSuccessAlert from '../GeneralUseComponents/DissmissibleSuccessAlert';\nimport useStyles from '../../styles/AccordionMenuStyles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport { CompanyState } from '../../redux/types/CompanyTypes';\nimport { ShopState, PostShopFields } from '../../redux/types/ShopTypes';\nimport * as shopInteractors from '../../redux/interactors/shopInteractors';\nimport verifyString from '../../utils/globalHelpers/verifyString';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  Divider,\n  AccordionActions,\n  Button,\n  TextField,\n  LinearProgress,\n} from '@material-ui/core';\n\ninterface StateProps {\n  company: CompanyState;\n  shop: ShopState;\n}\n\ninterface DispatchProps {\n  addShopInteractor: typeof shopInteractors.addShopInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  expanded: string | false;\n  handleChange: (panel: string) => any;\n  panel: string;\n  heading: string;\n  summary: string;\n}\n\nconst CreateShop: FC<Props> = (props: Props) => {\n  const { expanded, handleChange, panel, heading, summary, company, shop, addShopInteractor } = props;\n  const [shopName, setShopName] = useState('');\n  const [shopLocation, setShopLocation] = useState('');\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const styles = useStyles();\n\n  useEffect(() => {\n    if (shop.addShopStatus.success) {\n      setShowSuccessMessage(true);\n    }\n  }, [shop.addShopStatus, setShowSuccessMessage]);\n\n  const handleCancelCreate = (): void => {\n    setShopName('');\n    setShopLocation('');\n  };\n\n  const handleCreate = (): void => {\n    const shopAuthFields: PostShopFields = {\n      companyId: company.id,\n      name: shopName,\n      location: shopLocation,\n    };\n    addShopInteractor(shopAuthFields);\n    // Called to reset the state\n    handleCancelCreate();\n  };\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} expanded={expanded === panel} onChange={handleChange(panel)}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1bh-content\" id=\"panel1bh-header\">\n        <Typography className={styles.heading}>{heading}</Typography>\n        <Typography className={styles.secondaryHeading}>{summary}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <TextField\n          value={shopName}\n          variant=\"standard\"\n          required\n          fullWidth\n          id=\"name\"\n          label=\"Name\"\n          name=\"name\"\n          onChange={(event) => setShopName(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <TextField\n          value={shopLocation}\n          variant=\"standard\"\n          required\n          fullWidth\n          id=\"location\"\n          label=\"Location\"\n          name=\"location\"\n          onChange={(event) => setShopLocation(event.target.value)}\n        />\n      </AccordionDetails>\n      <Divider />\n      <AccordionActions>\n        <Button size=\"small\" onClick={() => handleCancelCreate()}>\n          Cancel\n        </Button>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          disabled={!(verifyString(shopName) && verifyString(shopLocation))}\n          onClick={handleCreate}>\n          Create Shop\n        </Button>\n      </AccordionActions>\n      {shop.addShopStatus.loading && <LinearProgress />}\n      {showSuccessMessage && (\n        <DissmisibleSuccessAlert\n          message={'Shop successfully created, you can close this menu now.'}\n          openedStateInParent={setShowSuccessMessage}\n        />\n      )}\n    </Accordion>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    company: state.company,\n    shop: state.shop,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...shopInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateShop);\n","import React, { FC, useState } from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DissmisibleSuccessAlert from '../GeneralUseComponents/DissmissibleSuccessAlert';\nimport useStyles from '../../styles/AccordionMenuStyles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport { ShopState } from '../../redux/types/ShopTypes';\nimport * as shopInteractors from '../../redux/interactors/shopInteractors';\nimport * as catalogueInteractors from '../../redux/interactors/catalogueInteractors';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  Divider,\n  AccordionActions,\n  Button,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  FormControl,\n} from '@material-ui/core';\n\ninterface StateProps {\n  shop: ShopState;\n}\n\ninterface DispatchProps {\n  setShopInteractor: typeof shopInteractors.setShopInteractor;\n  resetCatalogueInteractor: typeof catalogueInteractors.resetCatalogueInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  expanded: string | false;\n  handleChange: (panel: string) => any;\n  panel: string;\n  heading: string;\n  summary: string;\n}\n\nconst SwitchShop: FC<Props> = (props: Props) => {\n  const { expanded, handleChange, panel, heading, summary, shop, setShopInteractor, resetCatalogueInteractor } = props;\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [value, setValue] = useState(shop?.id);\n  const [toSwitchShop, setToSwitchShop] = useState<any>();\n  const styles = useStyles();\n\n  const handleShopChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const shopId = event.target.value;\n    setValue(shopId);\n    const foundShop = shop.shops.find((elem) => elem.id === shopId);\n    setToSwitchShop(foundShop);\n  };\n\n  const handleSubmit = (): void => {\n    setShopInteractor(toSwitchShop);\n    setShowSuccessMessage(true);\n    resetCatalogueInteractor();\n  };\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} expanded={expanded === panel} onChange={handleChange(panel)}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1bh-content\" id=\"panel1bh-header\">\n        <Typography className={styles.heading}>{heading}</Typography>\n        <Typography className={styles.secondaryHeading}>{summary}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <FormControl component=\"fieldset\">\n          <RadioGroup aria-label=\"shop\" name=\"shopChoice\" value={value} onChange={handleShopChange}>\n            {shop.shops?.map((elem) => (\n              <FormControlLabel key={elem.id} value={elem.id} control={<Radio />} label={elem.name} />\n            ))}\n          </RadioGroup>\n        </FormControl>\n      </AccordionDetails>\n      <Divider />\n      <AccordionActions>\n        <Button size=\"small\" color=\"primary\" disabled={shop.id === value} onClick={handleSubmit}>\n          Switch Shop\n        </Button>\n      </AccordionActions>\n      {showSuccessMessage && (\n        <DissmisibleSuccessAlert\n          message={'Switched shop successfully, you can close this menu now.'}\n          openedStateInParent={setShowSuccessMessage}\n        />\n      )}\n    </Accordion>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    shop: state.shop,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...shopInteractors,\n      ...catalogueInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SwitchShop);\n","import React, { FC } from 'react';\nimport { Button, ListItem, ListItemText, ListItemSecondaryAction } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\ninterface Props {\n  shop: any;\n}\n\nconst ShopItem: FC<Props> = (props: Props) => {\n  const { shop } = props;\n  const history = useHistory();\n\n  const handleGoToDevices = (id: string): void => {\n    history.push(`/administration/shop/${id}`);\n  };\n\n  return (\n    <ListItem key={shop.id} button>\n      <ListItemText id={shop.id} primary={`${shop.name}`} secondary={`Location: ${shop.location}`} />\n      <ListItemSecondaryAction>\n        <Button size=\"small\" variant=\"contained\" onClick={() => handleGoToDevices(shop.id)}>\n          View devices\n        </Button>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default ShopItem;\n","import React, { FC } from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport useStyles from '../../styles/AccordionMenuStyles';\nimport { connect } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport { ShopState } from '../../redux/types/ShopTypes';\nimport ShopItem from './ShopItem';\nimport { Accordion, AccordionSummary, Divider, List, Typography } from '@material-ui/core';\n\ninterface StateProps {\n  shop: ShopState;\n}\n\ninterface Props extends StateProps {\n  expanded: string | false;\n  handleChange: (panel: string) => any;\n  panel: string;\n  heading: string;\n  summary: string;\n}\n\nconst ShowAllShops: FC<Props> = (props: Props) => {\n  const { expanded, handleChange, panel, heading, summary, shop } = props;\n  const styles = useStyles();\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} expanded={expanded === panel} onChange={handleChange(panel)}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1bh-content\" id=\"panel1bh-header\">\n        <Typography className={styles.heading}>{heading}</Typography>\n        <Typography className={styles.secondaryHeading}>{summary}</Typography>\n      </AccordionSummary>\n      <Divider />\n      <List dense>\n        {shop.shops.map((shop) => (\n          <ShopItem key={shop.id} shop={shop} />\n        ))}\n      </List>\n    </Accordion>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    shop: state.shop,\n  };\n};\n\nexport default connect(mapStateToProps)(ShowAllShops);\n","import React, { FC, useState } from 'react';\nimport useStyles from '../styles/AccordionMenuStyles';\nimport CreateShopAccordionRow from '../components/ShopMenuComponents/ShopRegister';\nimport SwitchShopAccordionRow from '../components/ShopMenuComponents/SwitchShop';\nimport ViewShopsAccordionRow from '../components/ShopMenuComponents/ShowAllShops';\nimport { Button } from '@material-ui/core';\n\nconst ShopMenu: FC = () => {\n  const styles = useStyles();\n  const [expanded, setExpanded] = useState<string | false>(false);\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const handleChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <>\n      <div className={styles.mainContainer}>\n        <CreateShopAccordionRow\n          expanded={expanded}\n          handleChange={handleChange}\n          panel={'panel1'}\n          heading={'Create Shop'}\n          summary={'Here you can create a shop, giving all its necesary attributes.'}\n        />\n        <SwitchShopAccordionRow\n          expanded={expanded}\n          handleChange={handleChange}\n          panel={'panel2'}\n          heading={'Switch Shop'}\n          summary={'Here you can change to another shop.'}\n        />\n        <ViewShopsAccordionRow\n          expanded={expanded}\n          handleChange={handleChange}\n          panel={'panel3'}\n          heading={'View Shops'}\n          summary={'Here you can find all available shops.'}\n        />\n      </div>\n      <div className=\"btn-bottom-left\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            history.go(-1);\n          }}>\n          Back\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default ShopMenu;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n  title: {\n    backgroundColor: '#3f51b5',\n    color: 'white',\n  },\n});\n","import React, { FC, useState } from 'react';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { useRowStyles } from '../../styles/ShopDevicesStyles';\nimport {\n  Typography,\n  Box,\n  Collapse,\n  IconButton,\n  Table,\n  TableRow,\n  TableHead,\n  TableCell,\n  TableBody,\n} from '@material-ui/core';\n\ninterface Props {\n  device: any;\n}\n\nconst AccordionItem: FC<Props> = (props: Props) => {\n  const { device } = props;\n  const [open, setOpen] = useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment key={device.id}>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {device.name}\n        </TableCell>\n        <TableCell align=\"right\">{device.brand}</TableCell>\n        <TableCell align=\"right\">{device.os}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Details\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Color</TableCell>\n                    <TableCell>Inches</TableCell>\n                    <TableCell>Price</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {device.color}\n                    </TableCell>\n                    <TableCell>{device.inches}</TableCell>\n                    <TableCell>{device.price}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n};\n\nexport default AccordionItem;\n","import React, { FC, useEffect, useState } from 'react';\nimport catalogueServices from '../services/catalogueServices';\nimport { useRowStyles } from '../styles/ShopDevicesStyles';\nimport {\n  Typography,\n  Paper,\n  Table,\n  TableRow,\n  TableHead,\n  TableContainer,\n  TableCell,\n  TableBody,\n  Button,\n} from '@material-ui/core';\nimport '../styles/css/productDetails.scss';\nimport AccordionItem from '../components/ShopMenuComponents/AccordionItem';\n\nconst ShopDevices: FC = () => {\n  const shopId = window.location.pathname.split('/')[4];\n  const [devices, setDevices] = useState<any[]>([]);\n  const classes = useRowStyles();\n\n  useEffect(() => {\n    catalogueServices.getShopProducts(shopId).then(setDevices);\n  }, []);\n\n  return (\n    <>\n      <Typography className={classes.title} variant=\"h4\">\n        All devices of the shop\n      </Typography>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"collapsible table\">\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell>Device name</TableCell>\n              <TableCell align=\"right\">Brand</TableCell>\n              <TableCell align=\"right\">Os</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {devices.map((device, index) => (\n              <AccordionItem key={index} device={device} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <div className=\"btn-bottom-left\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            history.go(-1);\n          }}>\n          Back\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default ShopDevices;\n","import React, { FC, useEffect, useState, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { RootState } from '../redux/store';\nimport { connect } from 'react-redux';\nimport { ConnectionState } from '../redux/types/ConnectionTypes';\nimport { Product } from '../redux/types/CatalogueTypes';\nimport { Typography, Button } from '@material-ui/core';\nimport '../styles/css/productDetails.scss';\n\ninterface StateProps {\n  products: Product[];\n  connection: ConnectionState;\n}\n\ninterface Props extends StateProps {\n  // extra props you want to add\n}\n\nconst ProductDetails: FC<Props> = (props: Props) => {\n  const { products } = props;\n  const history = useHistory();\n  const [product, setProduct] = useState<Product | undefined>();\n  const productId = window.location.pathname.split('/')[3];\n\n  // Gets product id from the url and with that, gets the product stored in redux\n  useEffect(() => {\n    if (product?.id !== productId) {\n      const filteredProduct = products.find((elem) => {\n        return elem.id === productId;\n      });\n      setProduct(filteredProduct);\n    }\n  }, [product]);\n\n  // TODO: revisar que la llamada efectivamente haya tomado lugar\n\n  const goToCallScreen = useCallback(() => {\n    history.push('/home/call');\n  }, []);\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"details-container\">\n        <Typography className=\"title\" variant=\"h3\">\n          Device Details\n        </Typography>\n        <div className=\"detail\">\n          <Typography className=\"detail-label\" variant=\"h5\" gutterBottom>\n            Name:\n          </Typography>\n          <Typography className=\"detail-body\" variant=\"h6\" gutterBottom>\n            {product?.name}\n          </Typography>\n        </div>\n        <div className=\"detail\">\n          <Typography className=\"detail-label\" variant=\"h5\" gutterBottom>\n            Brand:\n          </Typography>\n          <Typography className=\"detail-body\" variant=\"h6\" gutterBottom>\n            {product?.brand}\n          </Typography>\n        </div>\n        <div className=\"detail\">\n          <Typography className=\"detail-label\" variant=\"h5\" gutterBottom>\n            Color:\n          </Typography>\n          <Typography className=\"detail-body\" variant=\"h6\" gutterBottom>\n            {product?.color}\n          </Typography>\n        </div>\n        <div className=\"detail\">\n          <Typography className=\"detail-label\" variant=\"h5\" gutterBottom>\n            Screen Inches:\n          </Typography>\n          <Typography className=\"detail-body\" variant=\"h6\" gutterBottom>\n            {product?.inches}\n          </Typography>\n        </div>\n        <div className=\"detail\">\n          <Typography className=\"detail-label\" variant=\"h5\" gutterBottom>\n            Operative System:\n          </Typography>\n          <Typography className=\"detail-body\" variant=\"h6\" gutterBottom>\n            {product?.os}\n          </Typography>\n        </div>\n        <div className=\"detail\">\n          <Typography className=\"detail-label\" variant=\"h5\" gutterBottom>\n            Price:\n          </Typography>\n          <Typography className=\"detail-body\" variant=\"h6\" gutterBottom>\n            {product?.price} CLP\n          </Typography>\n        </div>\n        <div className=\"customer-button-container\">\n          <Button variant=\"contained\" color=\"primary\" onClick={goToCallScreen}>\n            Get Assistance\n          </Button>\n        </div>\n      </div>\n      <div className=\"photo-container\">\n        <img className=\"image\" src={product?.image} alt=\"Product\" />\n      </div>\n      <div className=\"btn-bottom-left\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            history.go(-1);\n          }}>\n          Back\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    products: state.catalogue.products,\n    connection: state.connection,\n  };\n};\n\nexport default connect(mapStateToProps)(ProductDetails);\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n","import { AxiosResponse } from 'axios';\nimport { axiosBaseInstance } from './config';\nimport { CallPostFields } from '../redux/types/ConnectionTypes';\n\nconst postCallRegister = async (authFields: CallPostFields): Promise<any> => {\n  return await axiosBaseInstance({\n    headers: { 'Content-Type': 'application/json' },\n    method: 'post',\n    url: '/calls/new-call',\n    data: {\n      employeeId: authFields.employeeId,\n      shopId: authFields.shopId,\n      rating: authFields.rating,\n      date: authFields.date,\n    },\n  })\n    .then((response: AxiosResponse<Record<string, never>>) => {\n      // Recieves an empty object to avoid changing shop state\n      return response?.data;\n    })\n    .catch((error: Error) => {\n      // TODO: Implement logging functionality for future purposes\n      throw error;\n    });\n};\n\nconst addRating = async (ratingValue: number, callId: string): Promise<any> => {\n  return await axiosBaseInstance({\n    headers: { 'Content-Type': 'application/json' },\n    method: 'put',\n    url: `/calls/${callId}`,\n    data: {\n      rating: ratingValue,\n    },\n  })\n    .then((response: AxiosResponse<any>) => {\n      return response?.data;\n    })\n    .catch((error: Error) => {\n      // TODO: Implement logging functionality for future purposes\n      throw error;\n    });\n};\n\nconst callServices = {\n  postCallRegister,\n  addRating,\n};\n\nexport default callServices;\n","import React, { FC, useState } from 'react';\nimport { useStyles } from '../../styles/ClientSurveyStyles';\nimport callServices from '../../services/callServices';\nimport Rating from '@material-ui/lab/Rating';\nimport * as connectionInteractors from '../../redux/interactors/connectionInteractors';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { AccordionActions, Modal, Typography, Backdrop, Fade, Divider, Button, Box } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\ninterface DispatchProps {\n  setCallStateFalseInteractor: typeof connectionInteractors.setCallStateFalseInteractor;\n}\n\ninterface Props extends DispatchProps {\n  callId: string;\n  sendSurvey: () => void;\n}\n\nconst DisplaySurvey: FC<Props> = (props: Props) => {\n  const classes = useStyles();\n  const { callId } = props;\n  const [reply1, setReply1] = useState<any>();\n  const [reply2, setReply2] = useState<any>();\n  const [reply3, setReply3] = useState<any>();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCancel = (): void => {\n    setReply1(null);\n    setReply2(null);\n    setReply3(null);\n    props.setCallStateFalseInteractor();\n    handleClose();\n  };\n\n  const fieldsVerified: boolean =\n    typeof reply1 !== 'undefined' && typeof reply2 !== 'undefined' && typeof reply3 !== 'undefined';\n\n  const handleRating = async (): Promise<void> => {\n    const ratingValue: number = reply1 * 0.4 + reply2 * 0.25 + reply3 * 0.35;\n    await callServices.addRating(ratingValue, callId);\n    props.setCallStateFalseInteractor();\n    handleCancel();\n    handleClose();\n    props.sendSurvey();\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Tell us your experience!</h2>\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n              <Typography component=\"legend\">Was the assistant able to solve all your doubts?</Typography>\n              <Rating\n                name=\"question-one\"\n                defaultValue={0.5}\n                precision={0.5}\n                emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\n                onChange={(event, newValue) => {\n                  setReply1(newValue);\n                }}\n              />\n            </Box>\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n              <Typography component=\"legend\">Was the assistant´s disposition adequate?</Typography>\n              <Rating\n                name=\"question-two\"\n                defaultValue={0.5}\n                precision={0.5}\n                emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\n                onChange={(event, newValue) => {\n                  setReply2(newValue);\n                }}\n              />\n            </Box>\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n              <Typography component=\"legend\">The response time to the video call was..</Typography>\n              <Rating\n                name=\"question-three\"\n                defaultValue={0.5}\n                precision={0.5}\n                emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\n                onChange={(event, newValue) => {\n                  setReply3(newValue);\n                }}\n              />\n            </Box>\n            <Divider />\n            <AccordionActions>\n              <Button onClick={() => handleCancel()}>No thanks</Button>\n              <Button color=\"primary\" disabled={!fieldsVerified} onClick={handleRating}>\n                Done\n              </Button>\n            </AccordionActions>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...connectionInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(null, mapDispatchToProps)(DisplaySurvey);\n","import React, { FC, useState, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { RootState } from '../redux/store';\nimport { connect } from 'react-redux';\nimport { ConnectionState, CallPostFields } from '../redux/types/ConnectionTypes';\nimport DisplaySurvey from '../components/CallsMenuComponents/CallClientSurvey';\nimport callServices from '../services/callServices';\nimport '../styles/css/calls.scss';\n\ninterface StateProps {\n  connection: ConnectionState;\n  shopId: string;\n  userId: string;\n}\n\ninterface Props extends StateProps {\n  // extra props you want to add\n}\n\nconst CustomerVideoChat: FC<Props> = (props: Props) => {\n  const history = useHistory();\n  const { firestore } = props.connection;\n  const [stateCallId, setStateCallId] = useState<any>(null);\n  const [surveyShowing, setSurveyShowing] = useState(false);\n  let callId = useRef<any>(undefined).current;\n\n  const showSurvey = () => {\n    setSurveyShowing(true);\n  };\n\n  const sendSurvey = () => {\n    callId = null;\n    setSurveyShowing(false);\n    history.go(-1);\n  };\n\n  useEffect(() => {\n    console.log('This it a test console log to prevent firestore excessive requests...');\n    firestore.collection('shopCalls').doc(props.shopId).set({ updatedAt: new Date() });\n    const status = {\n      answered: false,\n      inProgress: false,\n      date: new Date(),\n    };\n    // Se crea llamada en backend\n    createCall().then((response) => {\n      firestore.collection('shopCalls').doc(props.shopId).collection('calls').doc(response.id).set({ status });\n      callId = response.id;\n      setStateCallId(callId);\n    });\n  }, []);\n\n  // Listen to any additions or deletions to the database\n  useEffect(() => {\n    console.log('This it a test console log to prevent firestore excessive requests...');\n    const unsubscribe = firestore\n      .collection('shopCalls')\n      .doc(props.shopId)\n      .collection('calls')\n      .onSnapshot((snapshot) => {\n        // If call is finished display survey\n        snapshot.docChanges().forEach((change) => {\n          if (change.type === 'removed' && change.doc.id === callId) {\n            showSurvey();\n          }\n        });\n      });\n    return () => {\n      unsubscribe();\n    };\n  }, [firestore]);\n\n  const createCall = async (): Promise<any> => {\n    const callAuthFields: CallPostFields = {\n      employeeId: props.userId,\n      shopId: props.shopId,\n      rating: null,\n      date: new Date(),\n    };\n    const response = await callServices.postCallRegister(callAuthFields);\n    return response;\n  };\n\n  if (surveyShowing) {\n    return <DisplaySurvey callId={stateCallId} sendSurvey={sendSurvey} />;\n  }\n\n  return (\n    <div className=\"go-to-tablet-screen\">\n      <h1>An assistant will take care of you</h1>\n      <p>Please, go to the nearest assistance tablet 😁</p>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    connection: state.connection,\n    shopId: state.shop.id,\n    userId: state.user.id,\n  };\n};\n\nexport default connect(mapStateToProps)(CustomerVideoChat);\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\ninterface Params {\n  id: string;\n  firestore: any;\n  shopId: string;\n  peerConnection: RTCPeerConnection;\n  // setCalling: any;\n  setIsOnCall: any;\n}\n\nconst beginCall = async ({ id, firestore, shopId, peerConnection, setIsOnCall }: Params): Promise<string> => {\n  // Create document with two sub collections in the current shop with shopId\n  const callsDocument = firestore.collection('shopCalls').doc(shopId).collection('calls').doc(id);\n  const offerCandidates = callsDocument?.collection('offerCandidates');\n  const answerCandidates = callsDocument?.collection('answerCandidates');\n  // setCalling(true);\n  setIsOnCall(true);\n\n  // Get candidates for caller, save to db\n  peerConnection.onicecandidate = (event: any) => {\n    event.candidate && offerCandidates.add(event.candidate.toJSON());\n  };\n\n  // Create call offer with offer and status\n  const offerDescription = await peerConnection.createOffer();\n  await peerConnection.setLocalDescription(offerDescription);\n  const offer = {\n    sdp: offerDescription.sdp,\n    type: offerDescription.type,\n  };\n  const status = {\n    answered: false,\n    inProgress: true,\n    date: new Date(),\n  };\n  // Set peer offer\n  await callsDocument.set({ offer, status });\n  // Update status to in progress call\n  // await callsDocument.update({ status });\n\n  // Listen for remote answer\n  callsDocument.onSnapshot((snapshot: any) => {\n    const data = snapshot.data();\n    if (!peerConnection.currentRemoteDescription && data?.answer) {\n      const answerDescription = new RTCSessionDescription(data.answer);\n      peerConnection.setRemoteDescription(answerDescription);\n    }\n  });\n\n  // When answered, add candidate to peer connection\n  answerCandidates.onSnapshot((snapshot: any) => {\n    snapshot.docChanges().forEach((change: any) => {\n      if (change.type === 'added') {\n        const candidate = new RTCIceCandidate(change.doc.data());\n        peerConnection.addIceCandidate(candidate);\n        // setCalling(false);\n      }\n    });\n  });\n\n  return callsDocument.id;\n};\n\nexport default beginCall;\n","import React, { FC, useState, useEffect, useRef } from 'react';\nimport { RootState } from '../../redux/store';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Button } from '@material-ui/core';\nimport { ConnectionState } from '../../redux/types/ConnectionTypes';\nimport * as connectionInteractors from '../../redux/interactors/connectionInteractors';\nimport setSources from '../../utils/videoHelpers/setMediaSources';\nimport beginCall from '../../utils/videoHelpers/beginCall';\nimport '../../styles/css/calls.scss';\n\ninterface StateProps {\n  connection: ConnectionState;\n}\n\ninterface DispatchProps {\n  setLocalStreamInteractor: typeof connectionInteractors.setLocalStreamInteractor;\n  setRemoteStreamInteractor: typeof connectionInteractors.setRemoteStreamInteractor;\n  resetStreamConnectionInteractor: typeof connectionInteractors.resetStreamConnectionInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  shopId: string;\n  currentCallId: string;\n  hangupCall: any;\n}\n\nconst CustomerCall: FC<Props> = (props: Props) => {\n  const { firestore, peerConnection } = props.connection;\n  const webcamVideo = useRef<any>();\n  const remoteVideo = useRef<any>();\n  const [isOnCall, setIsOnCall] = useState(false);\n  let callInput = useRef<string>().current;\n\n  const startCall = async (id: string) => {\n    callInput = await beginCall({ id, firestore, shopId: props.shopId, peerConnection, setIsOnCall });\n  };\n\n  const hangupCall = async () => {\n    setIsOnCall(false);\n    try {\n      // Deleting collections is not recommended from web client, find alternative later\n      await firestore.collection('shopCalls').doc(props.shopId).collection('calls').doc(callInput).delete();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      props.hangupCall();\n    }\n  };\n\n  // On first render, set all necesary video call requirements\n  useEffect(() => {\n    const data = {\n      peerConnection,\n      webcamVideo: webcamVideo.current,\n      remoteVideo: remoteVideo.current,\n    };\n    setSources(data)\n      .then(({ localStream, remoteStream }) => {\n        props.setLocalStreamInteractor(localStream);\n        props.setRemoteStreamInteractor(remoteStream);\n      })\n      .then(() => startCall(props.currentCallId));\n    // Cleanup\n    return () => {\n      if (webcamVideo.current && remoteVideo.current) {\n        webcamVideo.current.srcObject = null;\n        remoteVideo.current.srcObject = null;\n      }\n      props.resetStreamConnectionInteractor();\n    };\n  }, [isOnCall]);\n\n  return (\n    <>\n      <h1>Getting Assistance</h1>\n      <div className=\"customer-call-container\">\n        <div className=\"customer-main-container\">\n          <video className=\"local-video-container\" ref={webcamVideo} autoPlay playsInline muted></video>\n          <video className=\"remote-video-container\" ref={remoteVideo} autoPlay playsInline></video>\n          <div className=\"customer-button-container\">\n            <Button size=\"small\" variant=\"contained\" color=\"secondary\" disabled={!isOnCall} onClick={hangupCall}>\n              Hang up\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    connection: state.connection,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...connectionInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerCall);\n","import React, { FC, useState, useEffect } from 'react';\nimport { RootState } from '../redux/store';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ConnectionState } from '../redux/types/ConnectionTypes';\nimport * as connectionInteractors from '../redux/interactors/connectionInteractors';\nimport CustomerCall from '../components/AssistanceTabletComponents/CustomerCall';\nimport { Typography } from '@material-ui/core';\n\ninterface StateProps {\n  connection: ConnectionState;\n  shopId: string;\n}\n\ninterface DispatchProps {\n  setLocalStreamInteractor: typeof connectionInteractors.setLocalStreamInteractor;\n  setRemoteStreamInteractor: typeof connectionInteractors.setRemoteStreamInteractor;\n  resetStreamConnectionInteractor: typeof connectionInteractors.resetStreamConnectionInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {}\n\nconst AssistanceTablet: FC<Props> = (props: Props) => {\n  const { firestore } = props.connection;\n  const [currentCall, setCurrentCall] = useState<string>('');\n  const [activeCall, setActiveCall] = useState(false);\n\n  const hangupCall = () => {\n    setCurrentCall('');\n    setActiveCall(false);\n  };\n\n  // Listen to any additions or deletions to the database\n  useEffect(() => {\n    console.log('This it a test console log to prevent firestore excessive requests...');\n    const unsubscribe = firestore\n      .collection('shopCalls')\n      .doc(props.shopId)\n      .collection('calls')\n      .onSnapshot((snapshot) => {\n        // If there are changes in the current waiting calls\n        snapshot.docChanges().forEach((change) => {\n          if (change.type === 'added') {\n            if (!change.doc.data().status.inProgress && !currentCall) {\n              setCurrentCall(change.doc.id);\n              setActiveCall(true);\n            }\n          }\n          if (change.type === 'removed') {\n            window.location.reload();\n          }\n        });\n      });\n    return () => {\n      unsubscribe();\n    };\n  }, [firestore]);\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h3\">\n        Assistance Tablet\n      </Typography>\n      {activeCall && <CustomerCall shopId={props.shopId} currentCallId={currentCall} hangupCall={hangupCall} />}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    connection: state.connection,\n    shopId: state.shop.id,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...connectionInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AssistanceTablet);\n","import React, { FC } from 'react';\nimport * as userInteractors from '../redux/interactors/userInteractors';\nimport * as modalInteractors from '../redux/interactors/modalInteractors';\nimport { UserState } from '../redux/types/UserTypes';\nimport { CompanyState } from '../redux/types/CompanyTypes';\nimport { bindActionCreators } from '@reduxjs/toolkit';\nimport { RootState } from '../redux/store';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport '../styles/css/layout.scss';\n\ninterface StateProps {\n  user: UserState;\n  company: CompanyState;\n  shopId: string;\n}\n\ninterface DispatchProps {\n  logoutUserInteractor: typeof userInteractors.logoutUserInteractor;\n  showPopUpInteractor: typeof modalInteractors.showPopUpInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  // extra props you want to add\n}\n\nconst SidebarOptions: FC<Props> = (props: Props) => {\n  const { user, company, shopId } = props;\n  const history = useHistory();\n  const goToHomePage = (): void => {\n    history.replace('/home');\n  };\n\n  const goToAssistanceTablet = (): void => {\n    history.push('/assistance');\n  };\n\n  const goToAdministrationPortal = (): void => {\n    history.replace('/administration');\n  };\n\n  return (\n    <div className=\"options\">\n      {company.id && (\n        <Button color=\"inherit\" onClick={goToHomePage}>\n          Home\n        </Button>\n      )}\n      {shopId.length > 0 && (\n        <Button color=\"inherit\" onClick={goToAssistanceTablet}>\n          Assistance Tablet\n        </Button>\n      )}\n      {user.sessionType !== 'ANONYMOUS' && (\n        <Button color=\"inherit\" onClick={goToAdministrationPortal}>\n          Administration\n        </Button>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    user: state.user,\n    company: state.company,\n    shopId: state.shop.id,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...userInteractors,\n      ...modalInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarOptions);\n","import React, { FC, useState, useEffect, memo } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { RootState } from '../../../redux/store';\nimport { CompanyState } from '../../../redux/types/CompanyTypes';\nimport * as companyInteractors from '../../../redux/interactors/companyInteractors';\nimport SlidingMessage, { MessageType } from '../SlidingMessage';\n\ninterface StateProps {\n  company: CompanyState;\n}\n\ninterface DispatchProps {\n  resetRegisterCompanyInteractor: typeof companyInteractors.resetRegisterCompanyInteractor;\n  resetLoginCompanyInteractor: typeof companyInteractors.resetLoginCompanyInteractor;\n  resetLogoutCompanyInteractor: typeof companyInteractors.resetLogoutCompanyInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  time: number;\n  margin: number;\n}\n\nconst CompanySuccess: FC<Props> = (props: Props) => {\n  const timeWithMargin = props.time + props.margin;\n  const { time, company, resetRegisterCompanyInteractor, resetLoginCompanyInteractor, resetLogoutCompanyInteractor } =\n    props;\n  const [successMessage, setSuccessMessage] = useState<string>('');\n\n  useEffect(() => {\n    if (company.registerCompanyStatus.success) {\n      setSuccessMessage('Company created successfully');\n      setTimeout(() => {\n        resetRegisterCompanyInteractor();\n        setSuccessMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetRegisterCompanyInteractor, company.registerCompanyStatus.success, timeWithMargin]);\n\n  useEffect(() => {\n    if (company.loginCompanyStatus.success) {\n      setSuccessMessage('Successfull company login');\n      setTimeout(() => {\n        resetLoginCompanyInteractor();\n        setSuccessMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetLoginCompanyInteractor, company.loginCompanyStatus.success, timeWithMargin]);\n\n  useEffect(() => {\n    if (company.logoutCompanyStatus.success) {\n      setSuccessMessage('Successfull company logout');\n      setTimeout(() => {\n        resetLogoutCompanyInteractor();\n        setSuccessMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetLogoutCompanyInteractor, company.logoutCompanyStatus.success, timeWithMargin]);\n\n  return (\n    <>\n      {successMessage.length > 0 && <SlidingMessage message={successMessage} type={MessageType.SUCCESS} time={time} />}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    company: state.company,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...companyInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(CompanySuccess));\n","import React, { FC, useState, useEffect, memo } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { RootState } from '../../../redux/store';\nimport { CatalogueState } from '../../../redux/types/CatalogueTypes';\nimport * as catalogueInteractors from '../../../redux/interactors/catalogueInteractors';\nimport SlidingMessage, { MessageType } from '../SlidingMessage';\n\ninterface StateProps {\n  catalogue: CatalogueState;\n}\n\ninterface DispatchProps {\n  resetAddProductToCatalogueInteractor: typeof catalogueInteractors.resetAddProductToCatalogueInteractor;\n  resetAddProductsToCatalogueInteractor: typeof catalogueInteractors.resetAddProductsToCatalogueInteractor;\n  resetDeleteProductFromCatalogueInteractor: typeof catalogueInteractors.resetDeleteProductFromCatalogueInteractor;\n  resetEditProductFromCatalogueInteractor: typeof catalogueInteractors.resetEditProductFromCatalogueInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  time: number;\n  margin: number;\n}\n\nconst CatalogueSuccess: FC<Props> = (props: Props) => {\n  const timeWithMargin = props.time + props.margin;\n  const {\n    time,\n    catalogue,\n    resetAddProductToCatalogueInteractor,\n    resetAddProductsToCatalogueInteractor,\n    resetDeleteProductFromCatalogueInteractor,\n    resetEditProductFromCatalogueInteractor,\n  } = props;\n  const [successMessage, setSuccessMessage] = useState<string>('');\n\n  useEffect(() => {\n    if (catalogue.addProductToCatalogueStatus.success) {\n      setSuccessMessage('Product created successfully');\n      setTimeout(() => {\n        resetAddProductToCatalogueInteractor();\n        setSuccessMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetAddProductToCatalogueInteractor, catalogue.addProductToCatalogueStatus.success, timeWithMargin]);\n\n  useEffect(() => {\n    if (catalogue.addProductsToCatalogueStatus.success) {\n      setSuccessMessage('List of products created successfully');\n      setTimeout(() => {\n        resetAddProductsToCatalogueInteractor();\n        setSuccessMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetAddProductsToCatalogueInteractor, catalogue.addProductsToCatalogueStatus.success, timeWithMargin]);\n\n  useEffect(() => {\n    if (catalogue.deleteProductFromCatalogueStatus.success) {\n      setSuccessMessage('Product deleted successfully');\n      setTimeout(() => {\n        resetDeleteProductFromCatalogueInteractor();\n        setSuccessMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetDeleteProductFromCatalogueInteractor, catalogue.deleteProductFromCatalogueStatus.success, timeWithMargin]);\n\n  useEffect(() => {\n    if (catalogue.editProductFromCatalogueStatus.success) {\n      setSuccessMessage('Product edited successfully');\n      setTimeout(() => {\n        resetEditProductFromCatalogueInteractor();\n        setSuccessMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetEditProductFromCatalogueInteractor, catalogue.editProductFromCatalogueStatus.success, timeWithMargin]);\n\n  return (\n    <>\n      {successMessage.length > 0 && <SlidingMessage message={successMessage} type={MessageType.SUCCESS} time={time} />}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    catalogue: state.catalogue,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...catalogueInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(CatalogueSuccess));\n","import React, { FC, useState, useEffect, memo } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { RootState } from '../../../redux/store';\nimport { ShopState } from '../../../redux/types/ShopTypes';\nimport * as shopInteractors from '../../../redux/interactors/shopInteractors';\nimport SlidingMessage, { MessageType } from '../SlidingMessage';\n\ninterface StateProps {\n  shop: ShopState;\n}\n\ninterface DispatchProps {\n  resetAddShopInteractor: typeof shopInteractors.resetAddShopInteractor;\n  resetRemoveShopInteractor: typeof shopInteractors.resetRemoveShopInteractor;\n  resetUpdateShopInteractor: typeof shopInteractors.resetUpdateShopInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  time: number;\n  margin: number;\n}\n\nconst ShopSuccess: FC<Props> = (props: Props) => {\n  const timeWithMargin = props.time + props.margin;\n  const { time, shop, resetAddShopInteractor, resetRemoveShopInteractor, resetUpdateShopInteractor } = props;\n  const [successMessage, setSuccessMessage] = useState<string>('');\n\n  useEffect(() => {\n    if (shop.addShopStatus.success) {\n      setSuccessMessage('Shop created successfully');\n      setTimeout(() => {\n        resetAddShopInteractor();\n        setSuccessMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetAddShopInteractor, shop.addShopStatus.success, timeWithMargin]);\n\n  useEffect(() => {\n    if (shop.removeShopStatus.success) {\n      setSuccessMessage('Shop deleted successfully');\n      setTimeout(() => {\n        resetRemoveShopInteractor();\n        setSuccessMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetRemoveShopInteractor, shop.removeShopStatus.success, timeWithMargin]);\n\n  useEffect(() => {\n    if (shop.updateShopStatus.success) {\n      setSuccessMessage('Shop updated successfully');\n      setTimeout(() => {\n        resetUpdateShopInteractor();\n        setSuccessMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetUpdateShopInteractor, shop.updateShopStatus.success, timeWithMargin]);\n\n  return (\n    <>\n      {successMessage.length > 0 && <SlidingMessage message={successMessage} type={MessageType.SUCCESS} time={time} />}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    shop: state.shop,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...shopInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(ShopSuccess));\n","import React, { FC, useState, useEffect, memo } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { RootState } from '../../../redux/store';\nimport { UserState } from '../../../redux/types/UserTypes';\nimport * as userInteractors from '../../../redux/interactors/userInteractors';\nimport SlidingMessage, { MessageType } from '../SlidingMessage';\n\ninterface StateProps {\n  user: UserState;\n}\n\ninterface DispatchProps {\n  resetLoginUserInteractor: typeof userInteractors.resetLoginUserInteractor;\n  resetLogoutUserInteractor: typeof userInteractors.resetLogoutUserInteractor;\n  resetDeleteUserInteractor: typeof userInteractors.resetDeleteUserInteractor;\n  resetRegisterUserInteractor: typeof userInteractors.resetRegisterUserInteractor;\n  resetReassignUserInteractor: typeof userInteractors.resetReassignUserInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  time: number;\n  margin: number;\n}\n\nconst UserSuccess: FC<Props> = (props: Props) => {\n  const timeWithMargin = props.time + props.margin;\n  const {\n    time,\n    user,\n    resetLoginUserInteractor,\n    resetLogoutUserInteractor,\n    resetDeleteUserInteractor,\n    resetRegisterUserInteractor,\n    resetReassignUserInteractor,\n  } = props;\n  const [successMessage, setSuccessMessage] = useState<string>('');\n\n  useEffect(() => {\n    if (user.registerUserStatus.success) {\n      setSuccessMessage('Successfull user register');\n      setTimeout(() => {\n        resetRegisterUserInteractor();\n        setSuccessMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetRegisterUserInteractor, user.registerUserStatus.success, timeWithMargin]);\n\n  useEffect(() => {\n    if (user.loginUserStatus.success) {\n      setSuccessMessage('Successfull user login');\n      setTimeout(() => {\n        resetLoginUserInteractor();\n        setSuccessMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetLoginUserInteractor, user.loginUserStatus.success, timeWithMargin]);\n\n  useEffect(() => {\n    if (user.logoutUserStatus.success) {\n      setSuccessMessage('Successfull user logout');\n      setTimeout(() => {\n        resetLogoutUserInteractor();\n        setSuccessMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetLogoutUserInteractor, user.logoutUserStatus.success, timeWithMargin]);\n\n  useEffect(() => {\n    if (user.deleteUserStatus.success) {\n      setSuccessMessage('Successfull user delete');\n      setTimeout(() => {\n        resetDeleteUserInteractor();\n        setSuccessMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetDeleteUserInteractor, user.deleteUserStatus.success, timeWithMargin]);\n\n  useEffect(() => {\n    if (user.reassignUserShopStatus.success) {\n      setSuccessMessage('Succesfull reasignation of user to another shop');\n      setTimeout(() => {\n        resetReassignUserInteractor();\n        setSuccessMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetReassignUserInteractor, user.reassignUserShopStatus.success, timeWithMargin]);\n\n  return (\n    <>\n      {successMessage.length > 0 && <SlidingMessage message={successMessage} type={MessageType.SUCCESS} time={time} />}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...userInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(UserSuccess));\n","import React, { FC, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport CompanySuccess from './CompanySuccess';\nimport CatalogueSuccess from './CatalogueSuccess';\nimport ShopSuccess from './ShopSuccess';\nimport UserSuccess from './UserSuccess';\nimport '../../../styles/css/generalUseStyles.scss';\n\ninterface Props {\n  time: number;\n  margin: number;\n}\n\nconst SuccessHandler: FC<Props> = ({ time, margin }) => {\n  return (\n    <div className=\"message-alert-container\">\n      <CompanySuccess time={time} margin={margin} />\n      <CatalogueSuccess time={time} margin={margin} />\n      <ShopSuccess time={time} margin={margin} />\n      <UserSuccess time={time} margin={margin} />\n    </div>\n  );\n};\n\nSuccessHandler.propTypes = {\n  time: PropTypes.number.isRequired,\n  margin: PropTypes.number.isRequired,\n};\n\nexport default memo(SuccessHandler);\n","import React, { FC, useState, useEffect, memo } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { RootState } from '../../../redux/store';\nimport { CompanyState } from '../../../redux/types/CompanyTypes';\nimport * as companyInteractors from '../../../redux/interactors/companyInteractors';\nimport SlidingMessage, { MessageType } from '../SlidingMessage';\n\ninterface StateProps {\n  company: CompanyState;\n}\n\ninterface DispatchProps {\n  resetRegisterCompanyInteractor: typeof companyInteractors.resetRegisterCompanyInteractor;\n  resetLoginCompanyInteractor: typeof companyInteractors.resetLoginCompanyInteractor;\n  resetLogoutCompanyInteractor: typeof companyInteractors.resetLogoutCompanyInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  time: number;\n  margin: number;\n}\n\nconst CompanyError: FC<Props> = (props: Props) => {\n  const timeWithMargin = props.time + props.margin;\n  const { time, company, resetRegisterCompanyInteractor, resetLoginCompanyInteractor, resetLogoutCompanyInteractor } =\n    props;\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  useEffect(() => {\n    if (company.registerCompanyStatus.error) {\n      setErrorMessage(String(company.registerCompanyStatus.error));\n      setTimeout(() => {\n        resetRegisterCompanyInteractor();\n        setErrorMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetRegisterCompanyInteractor, company.registerCompanyStatus.error, timeWithMargin]);\n\n  useEffect(() => {\n    if (company.loginCompanyStatus.error) {\n      setErrorMessage(String(company.loginCompanyStatus.error));\n      setTimeout(() => {\n        resetLoginCompanyInteractor();\n        setErrorMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetLoginCompanyInteractor, company.loginCompanyStatus.error, timeWithMargin]);\n\n  useEffect(() => {\n    if (company.logoutCompanyStatus.error) {\n      setErrorMessage(String(company.logoutCompanyStatus.error));\n      setTimeout(() => {\n        resetLogoutCompanyInteractor();\n        setErrorMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetLogoutCompanyInteractor, company.logoutCompanyStatus.error, timeWithMargin]);\n\n  return (\n    <>{errorMessage.length > 0 && <SlidingMessage message={errorMessage} type={MessageType.ERROR} time={time} />}</>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    company: state.company,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...companyInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(CompanyError));\n","import React, { FC, useState, useEffect, memo } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { RootState } from '../../../redux/store';\nimport { CatalogueState } from '../../../redux/types/CatalogueTypes';\nimport * as catalogueInteractors from '../../../redux/interactors/catalogueInteractors';\nimport SlidingMessage, { MessageType } from '../SlidingMessage';\n\ninterface StateProps {\n  catalogue: CatalogueState;\n}\n\ninterface DispatchProps {\n  resetGetCatalogueInteractor: typeof catalogueInteractors.resetGetCatalogueInteractor;\n  resetAddProductToCatalogueInteractor: typeof catalogueInteractors.resetAddProductToCatalogueInteractor;\n  resetAddProductsToCatalogueInteractor: typeof catalogueInteractors.resetAddProductsToCatalogueInteractor;\n  resetDeleteProductFromCatalogueInteractor: typeof catalogueInteractors.resetDeleteProductFromCatalogueInteractor;\n  resetEditProductFromCatalogueInteractor: typeof catalogueInteractors.resetEditProductFromCatalogueInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  time: number;\n  margin: number;\n}\n\nconst CatalogueError: FC<Props> = (props: Props) => {\n  const timeWithMargin = props.time + props.margin;\n  const {\n    time,\n    catalogue,\n    resetGetCatalogueInteractor,\n    resetAddProductToCatalogueInteractor,\n    resetAddProductsToCatalogueInteractor,\n    resetDeleteProductFromCatalogueInteractor,\n    resetEditProductFromCatalogueInteractor,\n  } = props;\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  useEffect(() => {\n    if (catalogue.getCatalogueStatus.error) {\n      setErrorMessage(String(catalogue.getCatalogueStatus.error));\n      setTimeout(() => {\n        resetGetCatalogueInteractor();\n        setErrorMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetGetCatalogueInteractor, catalogue.getCatalogueStatus.error, timeWithMargin]);\n\n  useEffect(() => {\n    if (catalogue.addProductToCatalogueStatus.error) {\n      setErrorMessage(String(catalogue.addProductToCatalogueStatus.error));\n      setTimeout(() => {\n        resetAddProductToCatalogueInteractor();\n        setErrorMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetAddProductToCatalogueInteractor, catalogue.addProductToCatalogueStatus.error, timeWithMargin]);\n\n  useEffect(() => {\n    if (catalogue.addProductsToCatalogueStatus.error) {\n      setErrorMessage(String(catalogue.addProductsToCatalogueStatus.error));\n      setTimeout(() => {\n        resetAddProductsToCatalogueInteractor();\n        setErrorMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetAddProductsToCatalogueInteractor, catalogue.addProductsToCatalogueStatus.error, timeWithMargin]);\n\n  useEffect(() => {\n    if (catalogue.deleteProductFromCatalogueStatus.error) {\n      setErrorMessage(String(catalogue.deleteProductFromCatalogueStatus.error));\n      setTimeout(() => {\n        resetDeleteProductFromCatalogueInteractor();\n        setErrorMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetDeleteProductFromCatalogueInteractor, catalogue.deleteProductFromCatalogueStatus.error, timeWithMargin]);\n\n  useEffect(() => {\n    if (catalogue.editProductFromCatalogueStatus.error) {\n      setErrorMessage(String(catalogue.editProductFromCatalogueStatus.error));\n      setTimeout(() => {\n        resetEditProductFromCatalogueInteractor();\n        setErrorMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetEditProductFromCatalogueInteractor, catalogue.editProductFromCatalogueStatus.error, timeWithMargin]);\n\n  return (\n    <>{errorMessage.length > 0 && <SlidingMessage message={errorMessage} type={MessageType.ERROR} time={time} />}</>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    catalogue: state.catalogue,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...catalogueInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(CatalogueError));\n","import React, { FC, useState, useEffect, memo } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { RootState } from '../../../redux/store';\nimport { ShopState } from '../../../redux/types/ShopTypes';\nimport * as shopInteractors from '../../../redux/interactors/shopInteractors';\nimport SlidingMessage, { MessageType } from '../SlidingMessage';\n\ninterface StateProps {\n  shop: ShopState;\n}\n\ninterface DispatchProps {\n  resetAddShopInteractor: typeof shopInteractors.resetAddShopInteractor;\n  resetRemoveShopInteractor: typeof shopInteractors.resetRemoveShopInteractor;\n  resetUpdateShopInteractor: typeof shopInteractors.resetUpdateShopInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  time: number;\n  margin: number;\n}\n\nconst ShopError: FC<Props> = (props: Props) => {\n  const timeWithMargin = props.time + props.margin;\n  const { time, shop, resetAddShopInteractor, resetRemoveShopInteractor, resetUpdateShopInteractor } = props;\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  useEffect(() => {\n    if (shop.addShopStatus.error) {\n      setErrorMessage(String(shop.addShopStatus.error));\n      setTimeout(() => {\n        resetAddShopInteractor();\n        setErrorMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetAddShopInteractor, shop.addShopStatus.error, timeWithMargin]);\n\n  useEffect(() => {\n    if (shop.removeShopStatus.error) {\n      setErrorMessage(String(shop.removeShopStatus.error));\n      setTimeout(() => {\n        resetRemoveShopInteractor();\n        setErrorMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetRemoveShopInteractor, shop.removeShopStatus.error, timeWithMargin]);\n\n  useEffect(() => {\n    if (shop.updateShopStatus.error) {\n      setErrorMessage(String(shop.updateShopStatus.error));\n      setTimeout(() => {\n        resetUpdateShopInteractor();\n        setErrorMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetUpdateShopInteractor, shop.updateShopStatus.error, timeWithMargin]);\n\n  return (\n    <>{errorMessage.length > 0 && <SlidingMessage message={errorMessage} type={MessageType.ERROR} time={time} />}</>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    shop: state.shop,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...shopInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(ShopError));\n","import React, { FC, useState, useEffect, memo } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { RootState } from '../../../redux/store';\nimport { UserState } from '../../../redux/types/UserTypes';\nimport * as userInteractors from '../../../redux/interactors/userInteractors';\nimport SlidingMessage, { MessageType } from '../SlidingMessage';\n\ninterface StateProps {\n  user: UserState;\n}\n\ninterface DispatchProps {\n  resetLoginUserInteractor: typeof userInteractors.resetLoginUserInteractor;\n  resetLogoutUserInteractor: typeof userInteractors.resetLogoutUserInteractor;\n  resetDeleteUserInteractor: typeof userInteractors.resetDeleteUserInteractor;\n  resetRegisterUserInteractor: typeof userInteractors.resetRegisterUserInteractor;\n  resetReassignUserInteractor: typeof userInteractors.resetReassignUserInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  time: number;\n  margin: number;\n}\n\nconst UserError: FC<Props> = (props: Props) => {\n  const timeWithMargin = props.time + props.margin;\n  const {\n    time,\n    user,\n    resetLoginUserInteractor,\n    resetLogoutUserInteractor,\n    resetDeleteUserInteractor,\n    resetRegisterUserInteractor,\n    resetReassignUserInteractor,\n  } = props;\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  useEffect(() => {\n    if (user.registerUserStatus.error) {\n      setErrorMessage(String(user.registerUserStatus.error));\n      setTimeout(() => {\n        resetRegisterUserInteractor();\n        setErrorMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetRegisterUserInteractor, user.registerUserStatus.error, timeWithMargin]);\n\n  useEffect(() => {\n    if (user.loginUserStatus.error) {\n      setErrorMessage(String(user.loginUserStatus.error));\n      setTimeout(() => {\n        resetLoginUserInteractor();\n        setErrorMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetLoginUserInteractor, user.loginUserStatus.error, timeWithMargin]);\n\n  useEffect(() => {\n    if (user.logoutUserStatus.error) {\n      setErrorMessage(String(user.logoutUserStatus.error));\n      setTimeout(() => {\n        resetLogoutUserInteractor();\n        setErrorMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetLogoutUserInteractor, user.logoutUserStatus.error, timeWithMargin]);\n\n  useEffect(() => {\n    if (user.deleteUserStatus.error) {\n      setErrorMessage(String(user.deleteUserStatus.error));\n      setTimeout(() => {\n        resetDeleteUserInteractor();\n        setErrorMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetDeleteUserInteractor, user.deleteUserStatus.error, timeWithMargin]);\n\n  useEffect(() => {\n    if (user.reassignUserShopStatus.error) {\n      setErrorMessage(String(user.reassignUserShopStatus.error));\n      setTimeout(() => {\n        resetReassignUserInteractor();\n        setErrorMessage('');\n      }, timeWithMargin);\n    }\n  }, [resetReassignUserInteractor, user.reassignUserShopStatus.error, timeWithMargin]);\n\n  return (\n    <>{errorMessage.length > 0 && <SlidingMessage message={errorMessage} type={MessageType.ERROR} time={time} />}</>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...userInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(UserError));\n","import React, { FC, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport CompanyError from './CompanyError';\nimport CatalogueError from './CatalogueError';\nimport ShopError from './ShopError';\nimport UserError from './UserError';\nimport '../../../styles/css/generalUseStyles.scss';\n\ninterface Props {\n  time: number;\n  margin: number;\n}\n\nconst ErrorHandler: FC<Props> = ({ time, margin }) => {\n  return (\n    <div className=\"message-alert-container\">\n      <CompanyError time={time} margin={margin} />\n      <CatalogueError time={time} margin={margin} />\n      <ShopError time={time} margin={margin} />\n      <UserError time={time} margin={margin} />\n    </div>\n  );\n};\n\nErrorHandler.propTypes = {\n  time: PropTypes.number.isRequired,\n  margin: PropTypes.number.isRequired,\n};\n\nexport default memo(ErrorHandler);\n","import React, { FC, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { RootState } from '../redux/store';\nimport { UserState } from '../redux/types/UserTypes';\nimport Home from '../screens/Home';\nimport Information from '../screens/Information';\nimport NavBar from './NavBar';\nimport { useSelector } from 'react-redux';\nimport CompanyAuth from '../screens/CompanyAuth';\nimport AdministrationPortal from '../screens/AdministrationPortal';\nimport CallsMenu from '../screens/CallsMenu';\nimport CatalogueMenu from '../screens/CatalogueMenu';\nimport EmployeesMenu from '../screens/EmployeesMenu';\nimport ShopMenu from '../screens/ShopMenu';\nimport ShopDevices from '../screens/ShopDevices';\nimport ProductDetails from '../screens/ProductDetails';\nimport PreCallScreen from '../screens/PreCallScreen';\nimport AssistanceTablet from '../screens/AssistanceTablet';\nimport { IconButton, makeStyles } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport '../styles/css/layout.scss';\nimport SidebarOptions from './SidebarOptions';\nimport SuccessHandler from '../components/GeneralUseComponents/Successes/SuccessHandler';\nimport ErrorHandler from '../components/GeneralUseComponents/Errors/ErrorHandler';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'left',\n  },\n}));\n\n// eslint-disable-next-line react/prop-types\nconst EmployeeRoute: FC<any> = ({ component: Component, ...rest }) => {\n  const user = useSelector<RootState, UserState>((state) => state.user);\n  return (\n    <Route\n      {...rest}\n      render={(props) => (user.sessionType !== 'ANONYMOUS' ? <Component {...props} /> : <Redirect to=\"/home\" />)}\n    />\n  );\n};\n\n// eslint-disable-next-line react/prop-types\nconst AdministratorRoute: FC<any> = ({ component: Component, ...rest }) => {\n  const user = useSelector<RootState, UserState>((state) => state.user);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user.sessionType === 'ADMINISTRATOR' ? <Component {...props} /> : <Redirect to=\"/administration\" />\n      }\n    />\n  );\n};\n\nconst Routes: FC = () => {\n  const styles = useStyles();\n  const [leftOpen, setLeftOpen] = useState(false);\n  const [isOpen, setOpen] = useState(leftOpen ? 'open' : 'closed');\n  const toggleSidebar = () => {\n    setLeftOpen(!leftOpen);\n    setOpen(leftOpen ? 'open' : 'closed');\n  };\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div id=\"layout\">\n        <div id=\"left\" className={isOpen}>\n          <IconButton\n            edge=\"start\"\n            className={`icon ${styles.menuButton}`}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleSidebar}>\n            <MenuIcon />\n          </IconButton>\n          <div className={`sidebar ${isOpen}`}>\n            <div className=\"content\">\n              <SidebarOptions />\n            </div>\n          </div>\n        </div>\n        <div id=\"main\">\n          <div className=\"header\">\n            <div\n              className={`\n                          title\n                          ${'left-' + isOpen}\n                      `}>\n              <NavBar />\n            </div>\n          </div>\n          <div className=\"content\" id=\"page\">\n            <ErrorHandler time={4000} margin={1000} />\n            <SuccessHandler time={4000} margin={1000} />\n            <Switch>\n              <Route path=\"/\" exact component={CompanyAuth} />\n              <Route path=\"/home\" exact component={Home} />\n              <Route path=\"/home/call\" exact component={PreCallScreen} />\n              <Route path=\"/information\" exact component={Information} />\n              <Route path=\"/product/:id/details\" exact component={ProductDetails} />\n              <Route path=\"/assistance\" exact component={AssistanceTablet} />\n              <EmployeeRoute path=\"/administration\" exact component={AdministrationPortal} />\n              <EmployeeRoute path=\"/administration/calls\" exact component={CallsMenu} />\n              <AdministratorRoute path=\"/administration/shop\" exact component={ShopMenu} />\n              <AdministratorRoute path=\"/administration/shop/:id\" exact component={ShopDevices} />\n              <AdministratorRoute path=\"/administration/catalogue\" exact component={CatalogueMenu} />\n              <AdministratorRoute path=\"/administration/employees\" exact component={EmployeesMenu} />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import React, { FC } from 'react';\nimport Routes from './navigation/Routes';\nimport './App.css';\n\nexport const App: FC = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </div>\n  );\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport { userReducer } from './slices/userSlice';\nimport { modalReducer } from './slices/modalSlice';\nimport { catalogueReducer } from './slices/catalogueSlice';\nimport { companyReducer } from './slices/companySlice';\nimport { shopReducer } from './slices/shopSlice';\nimport { connectionReducer } from './slices/connectionSlice';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport storage from 'redux-persist/lib/storage';\n\n// Parts of the state you want to persist\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['company', 'user', 'shop', 'catalogue'],\n};\n\n// Add new reducers here\nconst RootReducer = combineReducers({\n  user: userReducer,\n  modal: modalReducer,\n  catalogue: catalogueReducer,\n  company: companyReducer,\n  shop: shopReducer,\n  connection: connectionReducer,\n});\n\nconst RootReducerPersistor = persistReducer(persistConfig, RootReducer);\n\n// Export the store to use it in the app\nexport const store = createStore(RootReducerPersistor, composeWithDevTools(applyMiddleware(thunk)));\n\nexport const storePersistor = persistStore(store);\n\nexport type RootState = ReturnType<typeof RootReducerPersistor>;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\nimport { store, storePersistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst history = createBrowserHistory();\nconst root = document.getElementById('root');\nconst path = (/#!(\\/.*)$/.exec(window.location.hash) || [])[1];\nif (path) {\n  history.replace(path);\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={storePersistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  root,\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}