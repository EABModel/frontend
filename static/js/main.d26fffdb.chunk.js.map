{"version":3,"sources":["components/CatalogCard.tsx","store/types.ts","components/Catalog.tsx","components/Home.tsx","components/About.tsx","components/Routes.tsx","components/NavBar.tsx","App.tsx","store/reducers/UserReducer.ts","store/store.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","root","maxWidth","media","height","CatalogCard","specs","classes","Card","className","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","name","color","brand","os","inches","CardActions","Button","size","defaultProps","Session","UserActionTypes","specs2","specs3","specs4","specs5","specs6","theme","createStyles","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","catalogContainer","width","margin","cardContainer","boxShadow","Catalog","Box","display","flexWrap","justifyContent","m","p","bgcolor","Home","About","history","useHistory","type","onClick","push","Routes","basename","process","path","exact","menuButton","marginRight","NavBar","user","useSelector","state","AppBar","position","Toolbar","IconButton","edge","aria-label","sessionType","username","App","initialState","userId","ANONYMOUS","authToken","refreshToken","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","document","getElementById","exec","hash","replace","ReactDOM","render","StrictMode","CookiesProvider","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.d26fffdb.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  }\n});\n\ninterface Props {\n  specs: {\n    name: string,\n    brand: string,\n    os: string,\n    color: string,\n    inches: number\n  }\n};\n\n\nexport const CatalogCard: FC<Props> = ({ specs }: Props) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia className={classes.media} image=\"CHANGE-LATER\" title=\"Device\" />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {specs.name}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n            {specs.brand}\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\">\n            {specs.os} {specs.color}\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\">\n            {specs.inches} inches display\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            These phones are really good, buy them now.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Buy\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Details\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nCatalogCard.defaultProps = {\n  specs: {\n    name: 'Defaut Device',\n    brand: 'Default Brand',\n    os: 'Default OS',\n    color: 'Default Color',\n    inches: 5\n  }\n};","// User state, actions and other user related stuff\nexport interface UserState {\n  user: {\n    username: string,\n    userId: string,\n    sessionType: Session,\n    authToken: string,\n    refreshToken: string\n  }\n};\n\nexport type UserAction = {\n  type: UserActionTypes;\n  payload?: UserState\n};\n\nexport enum Session {\n  ANONYMOUS = 'ANONYMOUS',\n  EMPLOYEE = 'EMPLOYEE',\n  ADMINISTRATOR = 'ADMINISTRATOR'\n};\n\nexport enum UserActionTypes {\n  ADD_USER = 'ADD_USER',\n  REMOVE_USER = 'REMOVE_USER',\n};\n\n// If you want to add a new state for the store, add it here","import React, { FC } from 'react';\nimport { CatalogCard } from './CatalogCard';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n\n\nconst specs = {\n  name: 'IPhone XR',\n  brand: 'Apple',\n  os: 'iOS',\n  color: 'Space Gray',\n  inches: 4\n};\n\nconst specs2 = {\n  name: 'IPhone 8',\n  brand: 'Apple',\n  os: 'iOS',\n  color: 'White',\n  inches: 5\n};\n\nconst specs3 = {\n  name: 'Huawei Mate 20 Light',\n  brand: 'Huawei',\n  os: 'Android',\n  color: 'Black',\n  inches: 5\n};\n\nconst specs4 = {\n  name: 'Samsung Galaxy S10',\n  brand: 'Samsung',\n  os: 'Android',\n  color: 'Gray',\n  inches: 4\n};\n\nconst specs5 = {\n  name: 'Pixel 2',\n  brand: 'Samsun',\n  os: 'Android',\n  color: 'White',\n  inches: 4\n};\n\nconst specs6 = {\n  name: 'IPhone 12',\n  brand: 'Apple',\n  os: 'iOS',\n  color: 'Space Gray',\n  inches: 5\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n    catalogContainer: {\n      width: '50wh',\n      height: '50vh',\n      margin: 'auto',\n    },\n    cardContainer: {\n      margin: '5%',\n      boxShadow: '8px 10px 19px 3px rgba(0,0,0,0.31)',\n    },\n  }),\n);\n\n\nexport const Catalog: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" flexWrap='wrap' justifyContent=\"space-evenly\" m={1} p={1} bgcolor=\"background.paper\">\n      <Box className={classes.cardContainer}>\n        <CatalogCard specs={specs} />\n      </Box>\n      <Box className={classes.cardContainer}>\n        <CatalogCard specs={specs2} />\n      </Box>\n      <Box className={classes.cardContainer}>\n        <CatalogCard specs={specs3} />\n      </Box>\n      <Box className={classes.cardContainer}>\n        <CatalogCard specs={specs4} />\n      </Box>\n      <Box className={classes.cardContainer}>\n        <CatalogCard specs={specs5} />\n      </Box>\n      <Box className={classes.cardContainer}>\n        <CatalogCard specs={specs6} />\n      </Box>\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\nimport { Catalog } from './Catalog';\n\n\nexport const Home: FC = () => {\n  \n  // const history = useHistory();\n\n  // const goToAboutPage = () => {\n  //   history.push('/about');\n  // }\n\n  return (\n    <div>\n      <Catalog />\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nexport const About: FC = () => {\n  const history = useHistory();\n\n  const goToHomePage = () => {\n    history.push('/');\n  }\n  return (\n    <div>\n      <p>This is an about page</p>\n      <button type=\"button\" onClick={goToHomePage}>\n          Go back\n      </button>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Home } from './Home';\nimport { About } from './About';\n\n\nexport const Routes: FC = () => {\n  return (\n    <div>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/about' exact component={About} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { AppBar, Button, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\nimport { UserState } from '../store/types';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport const NavBar: FC = () => {\n\t// A way of doing it in case the state is an object\n\t// const { sessionType } = useSelector<UserState, UserState['user']>((state) => state.user);\n\tconst user = useSelector<UserState, UserState['user']>((state) => state.user);\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t\t\t\t\t{user.sessionType === 'ANONYMOUS' ? `Hello Dear ${user.username}` : `Hello ${user.username}`}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Button color=\"inherit\">Login</Button>\n\t\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>)\n};\n","import React, { FC } from 'react';\nimport { Routes } from './components/Routes';\nimport { NavBar } from './components/NavBar';\n\nexport const App: FC = () => {\n  return (\n    <div className=\"container\">\n      <header className=\"App-header\">\n        <NavBar />\n      </header>\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </div>\n  );\n};\n","import { Session, UserState, UserAction } from '../types';\n\n\nconst initialState = {\n  username: 'Customer',\n  userId: '',\n  sessionType: Session.ANONYMOUS,\n  authToken: '',\n  refreshToken: ''\n};\n\nexport const userReducer = (state: UserState['user'] = initialState, action: UserAction) => {\n  switch(action.type) {\n    case 'ADD_USER': \n      return state;\n    case 'REMOVE_USER':\n      return initialState;\n    default:\n      return initialState;\n  }\n};","import { createStore, combineReducers, compose } from 'redux';\nimport { userReducer } from './reducers/UserReducer';\n\n\n// Boilerplate code needed for visualizing redux dev tools\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n};\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\n// Add new reducers here\nconst reducers = combineReducers({\n  user: userReducer,\n});\n\n// Export the store to use it in the app\nexport const store = createStore(\n  reducers,\n  composeEnhancers(),\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport { store } from './store/store';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { CookiesProvider } from \"react-cookie\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst history = createBrowserHistory();\nlet root = document.getElementById('root');\nconst path = (/#!(\\/.*)$/.exec(window.location.hash) || [])[1];\nif (path) {\n  history.replace(path);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <CookiesProvider>\n        <App />\n      </CookiesProvider>\n    </Provider>\n  </React.StrictMode>,\n  root\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}