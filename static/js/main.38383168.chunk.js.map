{"version":3,"sources":["redux/slices/modalSlice.ts","redux/interactors/modalInteractors.ts","redux/slices/catalogueSlice.ts","services/config.ts","services/catalogueServices.ts","redux/interactors/base.ts","redux/interactors/catalogueInteractors.ts","styles/CatalogueCardStyles.ts","components/HomeComponents/CatalogueCard.tsx","redux/types/UserTypes.ts","styles/CatalogueStyles.ts","components/HomeComponents/Catalogue.tsx","styles/LogInStyles.ts","redux/slices/userSlice.ts","services/userServices.ts","redux/interactors/userInteractors.ts","components/NavbarComponents/UserLogin.tsx","components/HomeComponents/ShowHomeAlert.tsx","components/HomeComponents/IdleVideoPlayer.tsx","screens/Home.tsx","styles/NavBarStyles.ts","navigation/NavBar.tsx","redux/slices/companySlice.ts","services/companyServices.ts","redux/interactors/companyInteractors.ts","components/CompanyAuthComponents/CompanyLoginForm.tsx","styles/CompanyAuthStyles.ts","redux/slices/shopSlice.ts","services/shopServices.ts","redux/interactors/shopInteractors.ts","components/CompanyAuthComponents/ShopsList.tsx","components/CompanyAuthComponents/CompanyRegisterForm.tsx","screens/CompanyAuth.tsx","styles/AdministrationPortalStyles.ts","components/AdministrationPortalComponents/MenuSection.tsx","components/AdministrationPortalComponents/CompanyLogout.tsx","screens/AdministrationPortal.tsx","utils/videoHelpers/setMediaSources.ts","services/firebase/config.ts","redux/slices/connectionSlice.ts","services/webRTC/config.ts","redux/interactors/connectionInteractors.ts","components/CallsMenuComponents/EmployeeVideoChat.tsx","screens/CallsMenu.tsx","styles/AccordionMenuStyles.ts","components/GeneralUseComponents/DissmissibleSuccessAlert.tsx","utils/globalHelpers/verifyString.ts","components/CatalogueMenu/ProductRegister.tsx","components/CatalogueMenu/ProductRegisterCSV.tsx","components/CatalogueMenu/ProductDelete.tsx","screens/CatalogueMenu.tsx","screens/EmployeesMenu.tsx","components/ShopMenuComponents/ShopRegister.tsx","screens/ShopMenu.tsx","screens/ProductDetails.tsx","components/CustomerCallScreenComponents/CustomerVideoChat.tsx","screens/CustomerCallScreen.tsx","navigation/SidebarOptions.tsx","navigation/Routes.tsx","App.tsx","redux/store.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["modal","createSlice","name","initialState","open","reducers","showLogIn","state","closeLogIn","modalReducer","reducer","modalActions","actions","showPopUpInteractor","dispatch","closePopUpInteractor","products","getCatalogueStatus","loading","success","error","addProductToCatalogue","removeProductFromCatalogue","addProductsToCatalogue","removeProductsFromCatalogue","deleteProductFromCatalogue","catalogueSlice","loadingGetCatalogue","successGetCatalogue","action","payload","errorGetCatalogue","loadingAddProductToCatalogue","successAddProductToCatalogue","errorAddProductToCatalogue","loadingAddProductsToCatalogue","successAddProductsToCatalogue","errorAddProductsToCatalogue","loadingRemoveProductFromCatalogue","successRemoveProductFromCatalogue","index","indexOf","splice","errorRemoveProductFromCatalogue","loadingDeleteProductFromCatalogue","successDeleteProductFromCatalogue","newArray","filter","product","id","errorDeleteProductFromCatalogue","resetCatalogue","catalogueReducer","catalogueActions","axiosBaseInstance","axios","create","baseURL","postProductRegister","authFields","a","headers","method","url","data","shopId","brand","os","color","inches","price","then","response","catch","postProductsRegister","catalogueService","getShopProducts","postProductDelete","productId","buildInteractor","loadingAction","successAction","errorAction","request","params","setTimeout","buildInteractorNoParams","buildInteractorDirectAction","buildInteractorDirectActionNoParams","getCatalogueInteractor","catalogueServices","addProductToCatalogueInteractor","addProductsToCatalogueInteractor","removeProductFromCatalogueInteractor","deleteProductFromCatalogueInteractor","resetCatalogueInteractor","useStyles","makeStyles","root","maxWidth","infoContainer","textAlign","media","height","CatalogueCard","specs","styles","UseStyles","history","useHistory","goToDetails","useCallback","push","Card","className","CardActionArea","style","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","CardActions","Button","size","onClick","defaultProps","Session","theme","createStyles","flexGrow","paper","padding","spacing","palette","text","secondary","catalogContainer","width","margin","cardContainer","boxShadow","connect","catalogue","props","classes","Box","display","flexWrap","justifyContent","m","p","bgcolor","map","marginTop","flexDirection","alignItems","avatar","backgroundColor","main","form","submit","popUp","position","top","left","transform","cancelIcon","right","alertMessage","username","email","sessionType","ANONYMOUS","loginUserStatus","logoutUserStatus","userSlice","loadingLoginUser","successLoginUser","errorLoginUser","loadingLogoutUser","successLogoutUser","errorLogoutUser","resetUserStatus","resetUser","userReducer","userActions","usersService","getUser","userId","console","log","postUserLogin","password","postUserRegister","confirmPassword","loginUserInteractor","userServices","logoutUserInteractor","resetUserStatusInteractor","resetUserInteractor","Copyright","align","Link","href","Date","getFullYear","Severity","user","bindActionCreators","userInteractors","modalInteractors","useState","setEmail","setPassword","useEffect","closePopUp","Cancel","fontSize","CssBaseline","CircularProgress","TextField","required","fullWidth","label","autoComplete","autoFocus","onChange","event","target","value","type","FormControlLabel","control","Checkbox","disabled","Grid","container","item","xs","mt","resourceName","severity","alertTitle","alertBody","hasLoginButton","Alert","AlertTitle","message","IdleHandler","idleValue","toggleIdle","videoShowing","setVideoShowing","useIdleTimer","timeout","onIdle","onActive","debounce","springProps","from","opacity","to","div","playing","loop","muted","controls","IdleVideoPlayer","React","memo","company","shop","catalogueInteractors","showCreateShopMessage","setShowCreateShopMessage","showCreateProductMessage","setShowCreateProductMessage","isIdle","setIsIdle","registerCompanyStatus","shops","length","LinearProgress","warning","info","menuButton","marginRight","marginLeft","btn","AppBar","Toolbar","replace","loginCompanyStatus","logoutCompanyStatus","companySlice","loadingRegisterCompany","successRegisterCompany","errorRegisterCompany","loadingLoginCompany","successLoginCompany","errorLoginCompany","loadingLogoutCompany","successLogoutCompany","errorLogoutCompany","resetCompanyStatus","resetCompany","companyReducer","companyActions","companyServices","postCompanyLogin","postCompanyRegister","registerCompanyInteractor","loginCompanyInteractor","logoutCompanyInteractor","resetCompanyStatusInteractor","resetCompanyInteractor","companyInteractors","setName","toggleForm","page","borderRadius","overflowY","containerList","shopContainer","location","buttonContainer","bottom","switchFormTypeContainer","companyId","addShopStatus","removeShopStatus","updateShopStatus","shopSlice","setShop","loadingAddShop","successAddShop","errorAddShop","loadingRemoveShop","successRemoveShop","errorRemoveShop","loadingUpdateShop","successUpdateShop","errorUpdateShop","resetShopStatus","resetShop","shopReducer","shopActions","shopServices","postShopRegister","setShopInteractor","addShopInteractor","removeShopInteractor","updateShopInteractor","resetShopStatusInteractor","resetShopInteractor","shopInteractors","login","setConfirmPassword","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","registerCondition","test","String","toLowerCase","validateEmail","nodeRef","useRef","showShops","setShowShops","isSigninIn","setIsSigningIn","SwitchTransition","mode","CSSTransition","enter","exit","classNames","ref","ShopsList","mainContainer","section","MenuSection","body","callback","CompanyLogout","setSources","peerConnection","webcamVideo","remoteVideo","navigator","mediaDevices","getUserMedia","video","audio","localStream","remoteStream","MediaStream","getTracks","forEach","track","addTrack","ontrack","streams","srcObject","firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","firebase","apps","initializeApp","firestore","RTCPeerConnection","iceServers","urls","iceCandidatePoolSize","connection","addLocalStream","removeLocalStream","addRemoteStream","removeRemoteStream","resetStreamConnection","connectionReducer","connectionActions","setLocalStreamInteractor","resetLocalStreamInteractor","setRemoteStreamInteractor","resetRemoteStreamInteractor","resetStreamConnectionInteractor","connectionInteractors","callId","current","answerCall","hangupCall","callDocument","collection","doc","answerCandidates","offerCandidates","onicecandidate","candidate","add","toJSON","get","callData","offerDescription","offer","setRemoteDescription","RTCSessionDescription","createAnswer","answerDescription","setLocalDescription","answer","sdp","update","onSnapshot","snapshot","docChanges","change","addIceCandidate","RTCIceCandidate","delete","setOnCall","autoPlay","playsInline","requests","setRequests","onCall","setLoading","refRequests","unsubscribe","oldArray","requestId","List","ListItem","button","ListItemIcon","VideoCall","ListItemText","primary","heading","flexBasis","flexShrink","secondaryHeading","formControl","minWidth","fab","DissmisibleSuccessAlert","openedStateInParent","setOpen","Collapse","in","IconButton","aria-label","verifyString","admissible","expanded","handleChange","panel","summary","setBrand","setOS","setColor","setInches","setPrice","showSuccessMessage","setShowSuccessMessage","handleCancelCreate","fieldsVerified","Accordion","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","aria-controls","AccordionDetails","FormControl","InputLabel","Select","labelId","handleOS","MenuItem","Divider","AccordionActions","productAuthFields","csvData","setData","showErrorMessage","setShowErrorMessage","Paper","elevation","onDrop","onError","err","addRemoveButton","Fab","slice","dataRow","validated","Object","values","undefined","isValid","dense","ListItemSecondaryAction","CatalogueMenu","setExpanded","isExpanded","go","EmployeesMenu","shopName","setShopName","shopLocation","setShopLocation","shopAuthFields","ShopMenu","setProduct","window","pathname","split","filteredProduct","find","elem","goToCallScreen","callInput","isOnCall","setIsOnCall","calling","setCalling","set","updatedAt","startCall","callsDocument","createOffer","status","answered","date","currentRemoteDescription","ButtonGroup","orientation","CustomerCall","EmployeeRoute","Component","rest","useSelector","render","AdministratorRoute","Routes","leftOpen","setLeftOpen","isOpen","basename","edge","path","exact","CompanyAuth","Home","CustomerCallScreen","ProductDetails","AdministrationPortal","CallsMenu","App","persistConfig","key","storage","whitelist","RootReducer","combineReducers","RootReducerPersistor","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","storePersistor","persistStore","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","document","getElementById","exec","hash","ReactDOM","persistor","URL","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.38383168.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { PopUpState } from '../types/ModalTypes';\n\nconst initialState: PopUpState = {\n  open: false,\n};\n\nconst modal = createSlice({\n  name: 'modal',\n  initialState,\n  reducers: {\n    showLogIn: (state: PopUpState) => {\n      return {\n        ...state,\n        open: true,\n      };\n    },\n    closeLogIn: (state: PopUpState) => {\n      return {\n        ...state,\n        open: false,\n      };\n    },\n  },\n});\n\nexport const modalReducer = modal.reducer;\nexport const modalActions = modal.actions;\n","import { modalActions } from '../slices/modalSlice';\nimport { Action } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RootState } from '../store';\n\nexport const showPopUpInteractor = () => {\n  return (dispatch: ThunkDispatch<RootState, void, Action>): void => {\n    dispatch(modalActions.showLogIn());\n  };\n};\n\nexport const closePopUpInteractor = () => {\n  return (dispatch: ThunkDispatch<RootState, void, Action>): void => {\n    dispatch(modalActions.closeLogIn());\n  };\n};\n","import { CatalogueState } from '../types/CatalogueTypes';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState: CatalogueState = {\n  products: [],\n  getCatalogueStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  addProductToCatalogue: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  removeProductFromCatalogue: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  addProductsToCatalogue: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  removeProductsFromCatalogue: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  deleteProductFromCatalogue: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n};\n\nconst catalogueSlice = createSlice({\n  name: 'catalogue',\n  initialState,\n  reducers: {\n    loadingGetCatalogue: (state: CatalogueState) => {\n      return {\n        ...state,\n        getCatalogueStatus: { loading: true, success: false, error: false },\n      };\n    },\n    successGetCatalogue: (state: CatalogueState, action) => {\n      return {\n        ...state,\n        products: [...action?.payload],\n        getCatalogueStatus: { loading: false, success: true, error: false },\n      };\n    },\n    errorGetCatalogue: (state: CatalogueState, action) => {\n      return {\n        ...state,\n        getCatalogueStatus: {\n          loading: false,\n          success: false,\n          error: action.payload || true,\n        },\n      };\n    },\n    loadingAddProductToCatalogue: (state: CatalogueState) => {\n      return {\n        ...state,\n        addProductToCatalogue: { loading: true, success: false, error: false },\n      };\n    },\n    successAddProductToCatalogue: (state: CatalogueState, action) => {\n      return {\n        ...state,\n        products: [...state.products, action.payload],\n        addProductToCatalogue: {\n          loading: false,\n          success: true,\n          error: false,\n        },\n      };\n    },\n    errorAddProductToCatalogue: (state: CatalogueState, action) => {\n      return {\n        ...state,\n        addProductToCatalogue: {\n          loading: false,\n          success: false,\n          error: action.payload || true,\n        },\n      };\n    },\n    loadingAddProductsToCatalogue: (state: CatalogueState) => {\n      return {\n        ...state,\n        addProductsToCatalogue: { loading: true, success: false, error: false },\n      };\n    },\n    successAddProductsToCatalogue: (state: CatalogueState) => {\n      return {\n        ...state,\n        addProductsToCatalogue: {\n          loading: false,\n          success: true,\n          error: false,\n        },\n      };\n    },\n    errorAddProductsToCatalogue: (state: CatalogueState, action) => {\n      return {\n        ...state,\n        addProductsToCatalogue: {\n          loading: false,\n          success: false,\n          error: action.payload || true,\n        },\n      };\n    },\n    loadingRemoveProductFromCatalogue: (state: CatalogueState) => {\n      return {\n        ...state,\n        removeProductFromCatalogue: { loading: true, success: false, error: false },\n      };\n    },\n    successRemoveProductFromCatalogue: (state: CatalogueState, action) => {\n      const index = state.products.indexOf(action.payload);\n      if (index > -1) state.products.splice(index, 1);\n      return {\n        ...state,\n        removeProductFromCatalogue: {\n          loading: false,\n          success: true,\n          error: false,\n        },\n      };\n    },\n    errorRemoveProductFromCatalogue: (state: CatalogueState, action) => {\n      return {\n        ...state,\n        removeProductFromCatalogue: {\n          loading: false,\n          success: false,\n          error: action.payload || true,\n        },\n      };\n    },\n    loadingDeleteProductFromCatalogue: (state: CatalogueState) => {\n      return {\n        ...state,\n        deleteProductFromCatalogue: { loading: true, success: false, error: false },\n      };\n    },\n    successDeleteProductFromCatalogue: (state: CatalogueState, action) => {\n      const newArray = state.products.filter((product) => product.id !== action?.payload?.id);\n      return {\n        ...state,\n        products: newArray,\n        deleteProductFromCatalogue: {\n          loading: false,\n          success: true,\n          error: false,\n        },\n      };\n    },\n    errorDeleteProductFromCatalogue: (state: CatalogueState, action) => {\n      return {\n        ...state,\n        deleteProductFromCatalogue: {\n          loading: false,\n          success: false,\n          error: action.payload || true,\n        },\n      };\n    },\n    resetCatalogue: (state: CatalogueState) => {\n      return {\n        ...state,\n        ...initialState,\n      };\n    },\n  },\n});\n\nexport const catalogueReducer = catalogueSlice.reducer;\nexport const catalogueActions = catalogueSlice.actions;\n","import axios from 'axios';\n\nexport const axiosBaseInstance = axios.create({\n  baseURL: 'https://eabmodel.herokuapp.com/',\n});\n","import { AxiosResponse } from 'axios';\nimport { ProductPostFields, Product } from '../redux/types/CatalogueTypes';\nimport { axiosBaseInstance } from './config';\n\nconst postProductRegister = async (authFields: ProductPostFields): Promise<any> => {\n  return await axiosBaseInstance({\n    headers: { 'Content-Type': 'application/json' },\n    method: 'post',\n    url: '/catalogue/add-single-product',\n    data: {\n      shopId: authFields.shopId,\n      name: authFields.name,\n      brand: authFields.brand,\n      os: authFields.os,\n      color: authFields.color,\n      inches: authFields.inches,\n      price: authFields.price,\n    },\n  })\n    .then((response: AxiosResponse<Record<string, never>>) => {\n      // Recieves an empty object to avoid changing shop state\n      return response?.data;\n    })\n    .catch((error: Error) => {\n      // TODO: Implement logging functionality for future purposes\n      throw error;\n    });\n};\n\nconst postProductsRegister = async (products: ProductPostFields[]): Promise<any> => {\n  return await axiosBaseInstance({\n    headers: { 'Content-Type': 'application/json' },\n    method: 'post',\n    url: '/catalogue/add-many-products',\n    data: products,\n  })\n    .then((response: AxiosResponse<Record<string, never>>) => {\n      return response?.data;\n    })\n    .catch((error: Error) => {\n      throw error;\n    });\n};\n\nconst getShopProducts = async (shopId: string): Promise<any> => {\n  return await axiosBaseInstance({\n    headers: { 'Content-Type': 'application/json' },\n    method: 'get',\n    url: `/catalogue/shop/${shopId}`,\n  })\n    .then((response: AxiosResponse<Product[]>) => {\n      return response?.data;\n    })\n    .catch((error: Error) => {\n      // TODO: Implement logging functionality for future purposes\n      throw error;\n    });\n};\n\nconst postProductDelete = async (productId: string): Promise<any> => {\n  return await axiosBaseInstance({\n    headers: { 'Content-Type': 'application/json' },\n    method: 'delete',\n    url: `/catalogue/delete-product/${productId}`,\n  })\n    .then((response: AxiosResponse<any>) => {\n      // Recieves an empty object to avoid changing shop state\n      return response?.data;\n    })\n    .catch((error: Error) => {\n      // TODO: Implement logging functionality for future purposes\n      throw error;\n    });\n};\n\nconst catalogueService = {\n  postProductRegister,\n  getShopProducts,\n  postProductsRegister,\n  postProductDelete,\n};\n\nexport default catalogueService;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { ActionCreatorWithoutPayload, ActionCreatorWithPayload } from '@reduxjs/toolkit';\n\nexport const buildInteractor =\n  (\n    loadingAction: ActionCreatorWithoutPayload,\n    successAction: ActionCreatorWithPayload<any>,\n    errorAction: ActionCreatorWithPayload<any>,\n    request: ((args: any) => Promise<any>) | null,\n  ) =>\n  (params: any) => {\n    return async function (dispatch: any) {\n      dispatch(loadingAction());\n      try {\n        // Simulate API call on localhost, remove in production\n        setTimeout(async () => {\n          const response = await request!(params);\n          dispatch(successAction(response));\n        }, 1500);\n      } catch (error) {\n        dispatch(errorAction(error));\n      }\n    };\n  };\n\nexport const buildInteractorNoParams =\n  (\n    loadingAction: ActionCreatorWithoutPayload,\n    successAction: ActionCreatorWithPayload<any>,\n    errorAction: ActionCreatorWithPayload<any>,\n    request: (() => Promise<any>) | null,\n  ) =>\n  () => {\n    return async function (dispatch: any) {\n      dispatch(loadingAction());\n      try {\n        let response: any;\n        if (request) {\n          response = await request!();\n        }\n        dispatch(successAction(response));\n      } catch (error) {\n        dispatch(errorAction(error));\n      }\n    };\n  };\n\nexport const buildInteractorDirectAction = (request: ActionCreatorWithPayload<any>) => (params: any) => {\n  return (dispatch: any) => {\n    dispatch(request(params));\n  };\n};\n\nexport const buildInteractorDirectActionNoParams = (request: ActionCreatorWithoutPayload) => () => {\n  return (dispatch: any) => {\n    dispatch(request());\n  };\n};\n","import { catalogueActions } from '../slices/catalogueSlice';\nimport catalogueServices from '../../services/catalogueServices';\nimport { buildInteractor } from './base';\nimport { Action } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RootState } from '../store';\n\nexport const getCatalogueInteractor = buildInteractor(\n  catalogueActions.loadingGetCatalogue,\n  catalogueActions.successGetCatalogue,\n  catalogueActions.errorGetCatalogue,\n  catalogueServices.getShopProducts,\n);\n\nexport const addProductToCatalogueInteractor = buildInteractor(\n  catalogueActions.loadingAddProductToCatalogue,\n  catalogueActions.successAddProductToCatalogue,\n  catalogueActions.errorAddProductToCatalogue,\n  catalogueServices.postProductRegister,\n);\n\nexport const addProductsToCatalogueInteractor = buildInteractor(\n  catalogueActions.loadingAddProductsToCatalogue,\n  catalogueActions.successAddProductsToCatalogue,\n  catalogueActions.errorAddProductsToCatalogue,\n  catalogueServices.postProductsRegister,\n);\n\nexport const removeProductFromCatalogueInteractor = buildInteractor(\n  catalogueActions.loadingRemoveProductFromCatalogue,\n  catalogueActions.successRemoveProductFromCatalogue,\n  catalogueActions.errorRemoveProductFromCatalogue,\n  null,\n);\n\nexport const deleteProductFromCatalogueInteractor = buildInteractor(\n  catalogueActions.loadingDeleteProductFromCatalogue,\n  catalogueActions.successDeleteProductFromCatalogue,\n  catalogueActions.errorDeleteProductFromCatalogue,\n  catalogueServices.postProductDelete,\n);\n\nexport const resetCatalogueInteractor = () => {\n  return (dispatch: ThunkDispatch<RootState, void, Action>): void => {\n    dispatch(catalogueActions.resetCatalogue());\n  };\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  infoContainer: {\n    textAlign: 'left',\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default useStyles;\n","import React, { FC, useCallback } from 'react';\nimport UseStyles from '../../styles/CatalogueCardStyles';\nimport { useHistory } from 'react-router-dom';\nimport { Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\n\ninterface Props {\n  specs: {\n    id: string;\n    name: string;\n    brand: string;\n    os: string;\n    color: string;\n    inches: number;\n    price: number;\n  };\n}\n\nexport const CatalogueCard: FC<Props> = ({ specs }: Props) => {\n  const styles = UseStyles();\n  const history = useHistory();\n\n  const goToDetails = useCallback((productId: string) => {\n    history.push(`product/${productId}/details`);\n  }, []);\n\n  return (\n    <Card className={styles.root}>\n      <CardActionArea style={{ textAlign: 'left' }}>\n        <CardMedia className={styles.media} image=\"CHANGE-LATER\" title=\"Device\" />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {specs.name}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n            {specs.brand}\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\">\n            {specs.os} {specs.color}\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\">\n            {specs.inches} inches display\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            These phones are really good, buy them now.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Buy\n        </Button>\n        <Button size=\"small\" color=\"primary\" onClick={() => goToDetails(specs.id)}>\n          Details\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nCatalogueCard.defaultProps = {\n  specs: {\n    id: '0',\n    name: 'Defaut Device',\n    brand: 'Default Brand',\n    os: 'Default OS',\n    color: 'Default Color',\n    inches: 5,\n    price: 0,\n  },\n};\n","export interface UserState {\n  id: string;\n  username: string;\n  email: string;\n  sessionType: Session;\n  loginUserStatus: {\n    loading: boolean;\n    success: boolean;\n    error: boolean;\n  };\n  logoutUserStatus: {\n    loading: boolean;\n    success: boolean;\n    error: boolean;\n  };\n}\n\nexport interface PostUserFields {\n  username: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface UserAuthFields {\n  email: string;\n  password: string;\n}\n\nexport enum Session {\n  ANONYMOUS = 'ANONYMOUS',\n  EMPLOYEE = 'EMPLOYEE',\n  ADMINISTRATOR = 'ADMINISTRATOR',\n}\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n    catalogContainer: {\n      width: '50wh',\n      height: '50vh',\n      margin: 'auto',\n    },\n    cardContainer: {\n      margin: '5%',\n      boxShadow: '8px 10px 19px 3px rgba(0,0,0,0.31)',\n    },\n  }),\n);\n\nexport default useStyles;\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport { CatalogueState, Product } from '../../redux/types/CatalogueTypes';\nimport { CatalogueCard } from './CatalogueCard';\nimport UseStyles from '../../styles/CatalogueStyles';\nimport Box from '@material-ui/core/Box';\n\ninterface StateProps {\n  catalogue: CatalogueState;\n}\n\ntype Props = StateProps;\n\nconst Catalogue: FC<Props> = (props: Props) => {\n  const classes = UseStyles();\n  const { catalogue } = props;\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"space-evenly\" m={1} p={1} bgcolor=\"background.paper\">\n      {catalogue?.products.map((product: Product) => (\n        <Box className={classes.cardContainer} key={product.id}>\n          <CatalogueCard specs={product} />\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    catalogue: state.catalogue,\n  };\n};\n\nexport default connect(mapStateToProps)(Catalogue);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '50vw',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  popUp: {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    padding: '1em',\n  },\n  cancelIcon: {\n    position: 'absolute',\n    top: '-10',\n    right: '-10',\n  },\n  alertMessage: {\n    textAlign: 'left',\n    color: 'red',\n    padding: 0,\n    margin: 0,\n  },\n}));\n\nexport default useStyles;\n","import { UserState, Session } from '../types/UserTypes';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState: UserState = {\n  username: 'defaultUser',\n  email: '',\n  id: '',\n  sessionType: Session.ANONYMOUS,\n  loginUserStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  logoutUserStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n};\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    loadingLoginUser: (state: UserState) => {\n      return {\n        ...state,\n        loginUserStatus: { loading: true, success: false, error: false },\n      };\n    },\n    successLoginUser: (state: UserState, action) => {\n      return {\n        ...state,\n        ...action.payload,\n        loginUserStatus: {\n          loading: false,\n          success: true,\n          error: false,\n        },\n        logoutUserStatus: { loading: false, success: false, error: false },\n      };\n    },\n    errorLoginUser: (state: UserState, action) => {\n      return {\n        ...state,\n        loginUserStatus: {\n          loading: false,\n          success: false,\n          error: action.payload || true,\n        },\n      };\n    },\n    loadingLogoutUser: (state: UserState) => {\n      return {\n        ...state,\n        logoutUserStatus: { loading: true, success: false, error: false },\n      };\n    },\n    successLogoutUser: (state: UserState) => {\n      return {\n        ...state,\n        ...initialState,\n        logoutUserStatus: { loading: false, success: true, error: false },\n      };\n    },\n    errorLogoutUser: (state: UserState, action) => {\n      return {\n        ...state,\n        logoutUserStatus: {\n          loading: false,\n          success: false,\n          error: action.payload || true,\n        },\n      };\n    },\n    resetUserStatus: (state: UserState) => {\n      return {\n        ...state,\n        loginUserStatus: initialState.loginUserStatus,\n        logoutUserStatus: initialState.logoutUserStatus,\n      };\n    },\n    resetUser: (state: UserState) => {\n      return {\n        ...state,\n        ...initialState,\n      };\n    },\n  },\n});\n\nexport const userReducer = userSlice.reducer;\nexport const userActions = userSlice.actions;\n","import { AxiosResponse } from 'axios';\nimport { PostUserFields, UserAuthFields } from '../redux/types/UserTypes';\nimport { axiosBaseInstance } from './config';\n\nconst getUser = async (userId: string): Promise<any> => {\n  return await axiosBaseInstance({\n    headers: { 'Content-Type': 'application/json' },\n    method: 'get',\n    url: `/user/${userId}`,\n  })\n    .then((response: AxiosResponse<any>) => {\n      return response?.data;\n    })\n    .catch((error: Error) => {\n      console.log(error);\n    });\n};\n\nconst postUserLogin = async (authFields: UserAuthFields): Promise<any> => {\n  return await axiosBaseInstance({\n    headers: { 'Content-Type': 'application/json' },\n    method: 'post',\n    url: '/user/auth',\n    data: {\n      email: authFields.email,\n      password: authFields.password,\n    },\n  })\n    .then((response: AxiosResponse<any>) => {\n      return response?.data;\n    })\n    .catch((error: Error) => {\n      // TODO: Implement logging functionality for future purposes\n      throw error;\n    });\n};\n\nconst postUserRegister = async (authFields: PostUserFields): Promise<any> => {\n  return await axiosBaseInstance({\n    headers: { 'Content-Type': 'application/json' },\n    method: 'post',\n    url: '/user/create',\n    data: {\n      username: authFields.username,\n      email: authFields.email,\n      password: authFields.password,\n      confirmPassword: authFields.confirmPassword,\n    },\n  })\n    .then((response: AxiosResponse<any>) => {\n      return response?.data;\n    })\n    .catch((error: Error) => {\n      // TODO: Implement logging functionality for future purposes\n      throw error;\n    });\n};\n\nconst usersService = {\n  getUser,\n  postUserLogin,\n  postUserRegister,\n};\n\nexport default usersService;\n","import { userActions } from '../slices/userSlice';\nimport userServices from '../../services/userServices';\nimport { Action } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RootState } from '../store';\nimport { buildInteractor, buildInteractorNoParams } from './base';\n\nexport const loginUserInteractor = buildInteractor(\n  userActions.loadingLoginUser,\n  userActions.successLoginUser,\n  userActions.errorLoginUser,\n  userServices.postUserLogin,\n);\n\nexport const logoutUserInteractor = buildInteractorNoParams(\n  userActions.loadingLogoutUser,\n  userActions.successLogoutUser,\n  userActions.errorLogoutUser,\n  null,\n);\n\nexport const resetUserStatusInteractor = () => {\n  return (dispatch: ThunkDispatch<RootState, void, Action>): void => {\n    dispatch(userActions.resetUserStatus());\n  };\n};\n\nexport const resetUserInteractor = () => {\n  return (dispatch: ThunkDispatch<RootState, void, Action>): void => {\n    dispatch(userActions.resetUser());\n  };\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UseStyles from '../../styles/LogInStyles';\nimport { bindActionCreators } from 'redux';\nimport { RootState } from '../../redux/store';\nimport { connect } from 'react-redux';\nimport { UserState, UserAuthFields } from '../../redux/types/UserTypes';\nimport * as userInteractors from '../../redux/interactors/userInteractors';\nimport * as modalInteractors from '../../redux/interactors/modalInteractors';\nimport { Cancel } from '@material-ui/icons';\nimport {\n  Button,\n  CssBaseline,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Link,\n  Grid,\n  Box,\n  Typography,\n  Card,\n  CircularProgress,\n} from '@material-ui/core';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        EABModel\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\ninterface StateProps {\n  user: UserState;\n}\n\ninterface DispatchProps {\n  loginUserInteractor: typeof userInteractors.loginUserInteractor;\n  resetUserStatusInteractor: typeof userInteractors.resetUserStatusInteractor;\n  closePopUpInteractor: typeof modalInteractors.closePopUpInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  closePopUp: () => void;\n}\n\nconst UserLogin: FC<Props> = (props: Props) => {\n  const styles = UseStyles();\n  const history = useHistory();\n  const { user } = props;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    if (user.loginUserStatus.success) {\n      props.resetUserStatusInteractor();\n      props.closePopUpInteractor();\n      history.push('/administration');\n    }\n  }, [history, props, user]);\n\n  const closePopUp = (): void => {\n    props.closePopUp();\n  };\n\n  const onEmailChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setEmail(event.target.value);\n  };\n\n  const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setPassword(event.target.value);\n  };\n\n  const handleSubmit = (): void => {\n    const authFields: UserAuthFields = {\n      email,\n      password,\n    };\n    props.loginUserInteractor(authFields);\n  };\n\n  return (\n    <Card className={styles.popUp} component=\"main\" variant=\"outlined\">\n      <div className={styles.cancelIcon} onClick={closePopUp}>\n        <Cancel fontSize=\"large\" color=\"secondary\" />\n      </div>\n      <CssBaseline />\n      <div className={styles.paper}>\n        {user.loginUserStatus.loading && <CircularProgress />}\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <div className={styles.form}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={onEmailChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={onPasswordChange}\n          />\n          <FormControlLabel control={<Checkbox value=\"remember\" color=\"primary\" />} label=\"Remember me\" />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={styles.submit}\n            disabled={!(email && password)}\n            onClick={handleSubmit}>\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                ¿Forgot password?\n              </Link>\n            </Grid>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Don&apos;t have an account? Sign Up\n              </Link>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n      <Box mt={4}>\n        <Copyright />\n      </Box>\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...userInteractors,\n      ...modalInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserLogin);\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as modalInteractors from '../../redux/interactors/modalInteractors';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { Button } from '@material-ui/core';\nimport '../../styles/css/homeStyles.scss';\n\nexport enum Severity {\n  error = 'error',\n  warning = 'warning',\n  info = 'info',\n  success = 'success',\n}\n\ninterface DispatchProps {\n  showPopUpInteractor: typeof modalInteractors.showPopUpInteractor;\n}\n\ninterface Props extends DispatchProps {\n  resourceName: string;\n  severity: any;\n  alertTitle: string;\n  alertBody: string[];\n  hasLoginButton: boolean;\n}\n\nconst HomeAlert: FC<Props> = (props: Props) => {\n  const { showPopUpInteractor, resourceName, severity, alertTitle, alertBody, hasLoginButton } = props;\n  return (\n    <div className=\"alert-container\">\n      <Alert className=\"alert\" variant=\"filled\" severity={severity}>\n        <AlertTitle className=\"alert-title\">{alertTitle}</AlertTitle>\n        {alertBody.map((message) => (\n          <p key={message} className=\"alert-text\">\n            {message}\n          </p>\n        ))}\n        {hasLoginButton && (\n          <div className=\"button-container\">\n            <Button variant=\"contained\" onClick={showPopUpInteractor}>\n              Sign in to create {resourceName}\n            </Button>\n          </div>\n        )}\n      </Alert>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...modalInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(null, mapDispatchToProps)(HomeAlert);\n","import React, { FC, useState } from 'react';\nimport { useIdleTimer } from 'react-idle-timer';\nimport ReactPlayer from 'react-player/lazy';\nimport { Spring, animated } from 'react-spring';\nimport '../../styles/css/videoPlayer.scss';\n\ninterface Props {\n  idleValue: boolean;\n  toggleIdle: any;\n}\n\nconst IdleHandler: FC<Props> = (props: Props) => {\n  const { idleValue, toggleIdle } = props;\n  const [videoShowing, setVideoShowing] = useState(false);\n  const handleOnIdle = () => {\n    toggleIdle(!idleValue);\n    setVideoShowing(true);\n  };\n\n  const handleOnActive = () => {\n    toggleIdle(!idleValue);\n    setVideoShowing(false);\n  };\n\n  useIdleTimer({\n    timeout: 1000 * 60 * 3, // 3 minutes idle time\n    onIdle: handleOnIdle,\n    onActive: handleOnActive,\n    debounce: 500,\n  });\n\n  const springProps = {\n    from: {\n      opacity: 0,\n      marginTop: -500,\n    },\n    to: {\n      opacity: 1,\n      marginTop: 0,\n    },\n  };\n  // useSpring hook didn't work\n  return (\n    <>\n      {videoShowing && (\n        <Spring from={springProps.from} to={springProps.to}>\n          {(props) => (\n            <animated.div style={props}>\n              <div className=\"player-wrapper\">\n                <ReactPlayer\n                  className=\"react-player\"\n                  url=\"https://www.youtube.com/watch?v=ivukpkSMoYQ\"\n                  playing\n                  loop\n                  muted // It's imposible to autoplay an unmuted video because of chrome policies\n                  controls\n                  width=\"100%\"\n                  height=\"100%\"\n                />\n              </div>\n            </animated.div>\n          )}\n        </Spring>\n      )}\n    </>\n  );\n};\n\n// React.memo memoitized this component so it's not rendered every time the parent re renders\n// It's a good implementation for improving performance\nconst IdleVideoPlayer = React.memo(IdleHandler);\n\nexport default IdleVideoPlayer;\n","import React, { FC, useEffect, useState } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { RootState } from '../redux/store';\nimport { PopUpState } from '../redux/types/ModalTypes';\nimport { CompanyState } from '../redux/types/CompanyTypes';\nimport { ShopState } from '../redux/types/ShopTypes';\nimport { CatalogueState } from '../redux/types/CatalogueTypes';\nimport * as modalInteractors from '../redux/interactors/modalInteractors';\nimport * as catalogueInteractors from '../redux/interactors/catalogueInteractors';\nimport Catalogue from '../components/HomeComponents/Catalogue';\nimport Login from '../components/NavbarComponents/UserLogin';\nimport HomeAlert from '../components/HomeComponents/ShowHomeAlert';\nimport { Severity } from '../components/HomeComponents/ShowHomeAlert';\nimport { connect } from 'react-redux';\nimport { LinearProgress } from '@material-ui/core';\nimport IdleVideoPlayer from '../components/HomeComponents/IdleVideoPlayer';\n\ninterface StateProps {\n  modal: PopUpState;\n  company: CompanyState;\n  shop: ShopState;\n  catalogue: CatalogueState;\n}\n\ninterface DispatchProps {\n  closePopUpInteractor: typeof modalInteractors.closePopUpInteractor;\n  getCatalogueInteractor: typeof catalogueInteractors.getCatalogueInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  // extra props you want to add\n}\n\nconst Home: FC<Props> = (props: Props) => {\n  const { modal, company, shop, catalogue } = props;\n  const [showCreateShopMessage, setShowCreateShopMessage] = useState(false);\n  const [showCreateProductMessage, setShowCreateProductMessage] = useState(false);\n  const [isIdle, setIsIdle] = useState(false);\n\n  useEffect(() => {\n    // If just registered or has no shops\n    if (company.registerCompanyStatus.success || company?.shops?.length === 0) {\n      setShowCreateShopMessage(true);\n    } else {\n      setShowCreateShopMessage(false);\n    }\n  }, [company.registerCompanyStatus, company]);\n\n  useEffect(() => {\n    props.getCatalogueInteractor(shop.id);\n  }, [props.getCatalogueInteractor]);\n\n  useEffect(() => {\n    // If shop has no products, show create product message\n    if (catalogue?.products?.length === 0) {\n      setShowCreateProductMessage(true);\n    } else {\n      setShowCreateProductMessage(false);\n    }\n  }, [catalogue]);\n\n  const closeModal = (): void => {\n    props.closePopUpInteractor();\n  };\n\n  return (\n    <div>\n      <IdleVideoPlayer idleValue={isIdle} toggleIdle={setIsIdle} />\n      {!isIdle && (\n        <>\n          {catalogue.getCatalogueStatus.loading && <LinearProgress color=\"secondary\" />}\n          {showCreateShopMessage && (\n            <HomeAlert\n              resourceName={'shop'}\n              severity={Severity.warning}\n              alertTitle={'Create a shop'}\n              alertBody={[\n                \"It seems you don't have any shops, create one.\",\n                'If you already created one, logout your company and sign in as that shop.',\n              ]}\n              hasLoginButton={true}\n            />\n          )}\n          {showCreateProductMessage && (\n            <HomeAlert\n              resourceName={'product'}\n              severity={Severity.info}\n              alertTitle={\"Add a product or products to your shop's catalogue\"}\n              alertBody={[\n                'In order to display your products, add them first.',\n                'You can do that from the administrator menu.',\n              ]}\n              hasLoginButton={true}\n            />\n          )}\n          {!showCreateShopMessage && !showCreateProductMessage && <Catalogue />}\n          {modal.open && <Login closePopUp={closeModal} />}\n        </>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    modal: state.modal,\n    company: state.company,\n    shop: state.shop,\n    catalogue: state.catalogue,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...modalInteractors,\n      ...catalogueInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'right',\n    marginLeft: '2rem',\n    marginRight: '2rem',\n    fontSize: '1rem',\n  },\n  btn: {\n    fontSize: '2rem',\n  },\n}));\n","import React, { FC } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { RootState } from '../redux/store';\nimport { UserState } from '../redux/types/UserTypes';\nimport { CompanyState } from '../redux/types/CompanyTypes';\nimport * as userInteractors from '../redux/interactors/userInteractors';\nimport * as modalInteractors from '../redux/interactors/modalInteractors';\nimport { AppBar, Button, Toolbar, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { useStyles } from '../styles/NavBarStyles';\n\ninterface StateProps {\n  user: UserState;\n  company: CompanyState;\n}\n\ninterface DispatchProps {\n  logoutUserInteractor: typeof userInteractors.logoutUserInteractor;\n  showPopUpInteractor: typeof modalInteractors.showPopUpInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  // extra props you want to add\n}\n\nconst NavBar: FC<Props> = (props: Props) => {\n  const { user, company } = props;\n  const history = useHistory();\n  const styles = useStyles();\n\n  const openPopUp = (): void => {\n    props.showPopUpInteractor();\n  };\n\n  const logOut = (): void => {\n    props.logoutUserInteractor();\n    history.replace('/home');\n  };\n\n  return (\n    <AppBar position=\"static\" className={styles.root}>\n      <Toolbar>\n        <Typography variant=\"h6\" className={styles.title}>\n          {user.sessionType === 'ANONYMOUS' ? `Hello Dear Customer!` : `Hello ${user.username}!`}\n        </Typography>\n        {user.sessionType === 'ANONYMOUS' ? (\n          <Button className={styles.btn} color=\"inherit\" onClick={openPopUp} disabled={!company.id}>\n            Login\n          </Button>\n        ) : (\n          <Button color=\"secondary\" onClick={logOut} disabled={!company.id}>\n            Logout\n          </Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    user: state.user,\n    company: state.company,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...userInteractors,\n      ...modalInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","import { CompanyState } from '../types/CompanyTypes';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState: CompanyState = {\n  id: '',\n  name: '',\n  email: '',\n  shops: [],\n  registerCompanyStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  loginCompanyStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  logoutCompanyStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n};\n\nconst companySlice = createSlice({\n  name: 'company',\n  initialState,\n  reducers: {\n    loadingRegisterCompany: (state: CompanyState) => {\n      return {\n        ...state,\n        registerCompanyStatus: { loading: true, success: false, error: false },\n      };\n    },\n    successRegisterCompany: (state: CompanyState, action) => {\n      return {\n        ...state,\n        ...action.payload,\n        registerCompanyStatus: { loading: false, success: true, error: false },\n      };\n    },\n    errorRegisterCompany: (state: CompanyState, action) => {\n      return {\n        ...state,\n        registerCompanyStatus: { loading: false, success: false, error: action.payload || true },\n      };\n    },\n    loadingLoginCompany: (state: CompanyState) => {\n      return {\n        ...state,\n        loginCompanyStatus: { loading: true, success: false, error: false },\n      };\n    },\n    successLoginCompany: (state: CompanyState, action) => {\n      return {\n        ...state,\n        ...action.payload,\n        loginCompanyStatus: { loading: false, success: true, error: false },\n      };\n    },\n    errorLoginCompany: (state: CompanyState, action) => {\n      return {\n        ...state,\n        loginCompanyStatus: { loading: false, success: false, error: action.payload || true },\n      };\n    },\n    loadingLogoutCompany: (state: CompanyState) => {\n      return {\n        ...state,\n        logoutCompanyStatus: { loading: true, success: false, error: false },\n      };\n    },\n    successLogoutCompany: (state: CompanyState) => {\n      return {\n        ...state,\n        ...initialState,\n        logoutCompanyStatus: { loading: false, success: true, error: false },\n      };\n    },\n    errorLogoutCompany: (state: CompanyState, action) => {\n      return {\n        ...state,\n        logoutCompanyStatus: { loading: false, success: false, error: action.payload || true },\n      };\n    },\n    resetCompanyStatus: (state: CompanyState) => {\n      return {\n        ...state,\n        loginCompanyStatus: initialState.loginCompanyStatus,\n        logoutCompanyStatus: initialState.logoutCompanyStatus,\n      };\n    },\n    resetCompany: (state: CompanyState) => {\n      return {\n        ...state,\n        ...initialState,\n      };\n    },\n  },\n});\n\nexport const companyReducer = companySlice.reducer;\nexport const companyActions = companySlice.actions;\n","import { AxiosResponse } from 'axios';\nimport { PostCompanyFields, RegisterCompanyFields, CompanyBackendState } from '../redux/types/CompanyTypes';\nimport { axiosBaseInstance } from './config';\n\nconst postCompanyLogin = async (authFields: PostCompanyFields): Promise<any> => {\n  return await axiosBaseInstance({\n    headers: { 'Content-Type': 'application/json' },\n    method: 'post',\n    url: '/company/login',\n    data: {\n      name: authFields.name,\n      password: authFields.password,\n    },\n  })\n    .then((response: AxiosResponse<CompanyBackendState>) => {\n      return response?.data;\n    })\n    .catch((error: any) => {\n      // TODO: Implement logging functionality for future purposes\n      // TOFIX: always get Error: Network Error, cors must be enabled on api, not nginx\n      console.log(error);\n      throw error;\n    });\n};\n\nconst postCompanyRegister = async (authFields: RegisterCompanyFields): Promise<any> => {\n  return await axiosBaseInstance({\n    headers: { 'Content-Type': 'application/json' },\n    method: 'post',\n    url: '/company/create',\n    data: {\n      name: authFields.name,\n      email: authFields.email,\n      password: authFields.password,\n    },\n  })\n    .then((response: AxiosResponse<CompanyBackendState>) => {\n      return response?.data;\n    })\n    .catch((error: any) => {\n      // TODO: Implement logging functionality for future purposes\n      // TOFIX: always get Error: Network Error, cors must be enabled on api, not nginx\n      console.log(error);\n      throw error;\n    });\n};\n\nconst companyServices = {\n  postCompanyLogin,\n  postCompanyRegister,\n};\n\nexport default companyServices;\n","import { companyActions } from '../slices/companySlice';\nimport companyServices from '../../services/companyServices';\nimport { Action } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RootState } from '../store';\nimport { buildInteractor, buildInteractorNoParams } from './base';\n\nexport const registerCompanyInteractor = buildInteractor(\n  companyActions.loadingRegisterCompany,\n  companyActions.successRegisterCompany,\n  companyActions.errorRegisterCompany,\n  companyServices.postCompanyRegister,\n);\n\nexport const loginCompanyInteractor = buildInteractor(\n  companyActions.loadingLoginCompany,\n  companyActions.successLoginCompany,\n  companyActions.errorLoginCompany,\n  companyServices.postCompanyLogin,\n);\n\nexport const logoutCompanyInteractor = buildInteractorNoParams(\n  companyActions.loadingLogoutCompany,\n  companyActions.successLogoutCompany,\n  companyActions.errorLogoutCompany,\n  null,\n);\n\nexport const resetCompanyStatusInteractor = () => {\n  return (dispatch: ThunkDispatch<RootState, void, Action>): void => {\n    dispatch(companyActions.resetCompanyStatus());\n  };\n};\n\nexport const resetCompanyInteractor = () => {\n  return (dispatch: ThunkDispatch<RootState, void, Action>): void => {\n    dispatch(companyActions.resetCompany());\n  };\n};\n","import React, { FC, useState } from 'react';\nimport UseStyles from '../../styles/LogInStyles';\nimport { bindActionCreators } from 'redux';\nimport { RootState } from '../../redux/store';\nimport { connect } from 'react-redux';\nimport { CompanyState, PostCompanyFields } from '../../redux/types/CompanyTypes';\nimport * as companyInteractors from '../../redux/interactors/companyInteractors';\nimport {\n  Button,\n  CssBaseline,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n  Card,\n  CircularProgress,\n} from '@material-ui/core';\n\ninterface StateProps {\n  company: CompanyState;\n}\n\ninterface DispatchProps {\n  loginCompanyInteractor: typeof companyInteractors.loginCompanyInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  toggleForm: () => void;\n}\n\nconst CompanyLoginForm: FC<Props> = (props: Props) => {\n  const styles = UseStyles();\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const { company } = props;\n\n  const onNameChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setName(event.target.value);\n  };\n\n  const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setPassword(event.target.value);\n  };\n\n  const handleSubmit = (): void => {\n    const authFields: PostCompanyFields = {\n      name,\n      password,\n    };\n    props.loginCompanyInteractor(authFields);\n  };\n\n  return (\n    <Card className={styles.popUp} component=\"main\" variant=\"outlined\">\n      <CssBaseline />\n      <div className={styles.paper}>\n        {company.loginCompanyStatus.loading && <CircularProgress />}\n        <Typography component=\"h1\" variant=\"h5\">\n          Company Sign in\n        </Typography>\n        <div className={styles.form}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Company name\"\n            name=\"name\"\n            autoFocus\n            onChange={onNameChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            onChange={onPasswordChange}\n          />\n          <FormControlLabel control={<Checkbox value=\"remember\" color=\"primary\" />} label=\"Remember me\" />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={styles.submit}\n            disabled={!(name && password)}\n            onClick={handleSubmit}>\n            Company Sign In\n          </Button>\n        </div>\n      </div>\n      <Button color=\"default\" size=\"small\" onClick={props.toggleForm}>\n        Don&apos;t have a company, create one\n      </Button>\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    company: state.company,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...companyInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyLoginForm);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  page: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  container: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%,-50%)',\n    padding: '20px',\n    width: '50%',\n    height: '60vh',\n    borderRadius: '8px',\n    overflowY: 'scroll',\n  },\n  containerList: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '20px',\n    width: '50%',\n    height: '60vh',\n    borderRadius: '8px',\n    overflowY: 'scroll',\n  },\n  shopContainer: {\n    position: 'relative',\n    padding: '10px',\n    margin: '15px 0',\n    borderRadius: '8px',\n    'box-shadow': '5px 6px 12px -4px rgba(0,0,0,0.75)',\n  },\n  name: {\n    fontSize: '20px',\n    textAlign: 'left',\n    padding: 0,\n    margin: '0 5px',\n  },\n  location: {\n    fontSize: '15px',\n    textAlign: 'left',\n    padding: 0,\n    margin: '0 5px',\n  },\n  buttonContainer: {\n    position: 'absolute',\n    bottom: '12px',\n    right: '15px',\n  },\n  switchFormTypeContainer: {\n    position: 'absolute',\n    left: '50%',\n    top: '20%',\n    transform: 'translate(-50%,-50%)',\n  },\n});\n\nexport default useStyles;\n","import { ShopState } from '../types/ShopTypes';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState: ShopState = {\n  id: '',\n  companyId: '',\n  name: '',\n  location: '',\n  addShopStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  removeShopStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n  updateShopStatus: {\n    loading: false,\n    success: false,\n    error: false,\n  },\n};\n\nconst shopSlice = createSlice({\n  name: 'shop',\n  initialState,\n  reducers: {\n    setShop: (state: ShopState, action) => {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    },\n    loadingAddShop: (state: ShopState) => {\n      return {\n        ...state,\n        addShopStatus: { loading: true, success: false, error: false },\n      };\n    },\n    successAddShop: (state: ShopState) => {\n      return {\n        ...state,\n        addShopStatus: { loading: false, success: true, error: false },\n      };\n    },\n    errorAddShop: (state: ShopState, action) => {\n      return {\n        ...state,\n        addShopStatus: { loading: false, success: false, error: action.payload || true },\n      };\n    },\n    loadingRemoveShop: (state: ShopState) => {\n      return {\n        ...state,\n        removeShopStatus: { loading: true, success: false, error: false },\n      };\n    },\n    successRemoveShop: (state: ShopState) => {\n      return {\n        ...state,\n        removeShopStatus: { loading: false, success: true, error: false },\n      };\n    },\n    errorRemoveShop: (state: ShopState, action) => {\n      return {\n        ...state,\n        removeShopStatus: { loading: false, success: false, error: action.payload || true },\n      };\n    },\n    loadingUpdateShop: (state: ShopState) => {\n      return {\n        ...state,\n        updateShopStatus: { loading: true, success: false, error: false },\n      };\n    },\n    successUpdateShop: (state: ShopState, action) => {\n      return {\n        ...state,\n        ...action.payload,\n        updateShopStatus: { loading: false, success: true, error: false },\n      };\n    },\n    errorUpdateShop: (state: ShopState, action) => {\n      return {\n        ...state,\n        updateShopStatus: { loading: false, success: false, error: action.payload || true },\n      };\n    },\n    resetShopStatus: (state: ShopState) => {\n      return {\n        ...state,\n        addShopStatus: initialState.addShopStatus,\n        removeShopStatus: initialState.removeShopStatus,\n        updateShopStatus: initialState.updateShopStatus,\n      };\n    },\n    resetShop: (state: ShopState) => {\n      return {\n        ...state,\n        ...initialState,\n      };\n    },\n  },\n});\n\nexport const shopReducer = shopSlice.reducer;\nexport const shopActions = shopSlice.actions;\n","import { AxiosResponse } from 'axios';\nimport { PostShopFields } from '../redux/types/ShopTypes';\nimport { axiosBaseInstance } from './config';\n\nconst postShopRegister = async (authFields: PostShopFields): Promise<any> => {\n  return await axiosBaseInstance({\n    headers: { 'Content-Type': 'application/json' },\n    method: 'post',\n    url: '/shop/create',\n    data: {\n      companyId: authFields.companyId,\n      name: authFields.name,\n      location: authFields.location,\n    },\n  })\n    .then((response: AxiosResponse<Record<string, never>>) => {\n      // Recieves an empty object to avoid changing shop state\n      return response?.data;\n    })\n    .catch((error: Error) => {\n      // TODO: Implement logging functionality for future purposes\n      throw error;\n    });\n};\n\nconst shopServices = {\n  postShopRegister,\n};\n\nexport default shopServices;\n","import { shopActions } from '../slices/shopSlice';\nimport shopServices from '../../services/shopServices';\nimport { ShopBackendState } from '../types/CompanyTypes';\nimport { Action } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RootState } from '../store';\nimport { buildInteractor } from './base';\n\nexport const setShopInteractor = (shop: ShopBackendState) => {\n  return (dispatch: ThunkDispatch<RootState, void, Action>): void => {\n    dispatch(shopActions.setShop(shop));\n  };\n};\n\nexport const addShopInteractor = buildInteractor(\n  shopActions.loadingAddShop,\n  shopActions.successAddShop,\n  shopActions.errorAddShop,\n  shopServices.postShopRegister,\n);\n\nexport const removeShopInteractor = buildInteractor(\n  shopActions.loadingRemoveShop,\n  shopActions.successRemoveShop,\n  shopActions.errorRemoveShop,\n  null,\n);\n\nexport const updateShopInteractor = buildInteractor(\n  shopActions.loadingUpdateShop,\n  shopActions.successUpdateShop,\n  shopActions.errorUpdateShop,\n  null,\n);\n\nexport const resetShopStatusInteractor = () => {\n  return (dispatch: ThunkDispatch<RootState, void, Action>): void => {\n    dispatch(shopActions.resetShopStatus());\n  };\n};\n\nexport const resetShopInteractor = () => {\n  return (dispatch: ThunkDispatch<RootState, void, Action>): void => {\n    dispatch(shopActions.resetShop());\n  };\n};\n","import React, { FC, useEffect } from 'react';\nimport UseStyles from '../../styles/CompanyAuthStyles';\nimport { ShopBackendState } from '../../redux/types/CompanyTypes';\nimport { useHistory } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as shopInteractors from '../../redux/interactors/shopInteractors';\nimport { Button, Typography } from '@material-ui/core';\n\ninterface DispatchProps {\n  setShopInteractor: typeof shopInteractors.setShopInteractor;\n}\n\ninterface Props extends DispatchProps {\n  shops: ShopBackendState[];\n}\n\nconst CompanyLoginForm: FC<Props> = (props: Props) => {\n  const styles = UseStyles();\n  const history = useHistory();\n  const { shops } = props;\n\n  useEffect(() => {\n    // If company has not created a shop, redirect to home to allow it to do that\n    if (shops?.length === 0) {\n      history.replace('/home');\n    }\n  }, []);\n\n  const login = (shop: ShopBackendState): void => {\n    props.setShopInteractor(shop);\n    history.replace('/home');\n  };\n\n  return (\n    <div className={styles.page}>\n      <Typography variant=\"h2\" color=\"textSecondary\">\n        Choose Shop\n      </Typography>\n      <div className={styles.containerList}>\n        {shops?.map((shop: ShopBackendState) => (\n          <div className={styles.shopContainer} key={shop.id}>\n            <div>\n              <p className={styles.name}>{shop.name}</p>\n              <p className={styles.location}>{shop.location}</p>\n            </div>\n            <div className={styles.buttonContainer}>\n              <Button variant=\"contained\" color=\"primary\" onClick={() => login(shop)}>\n                Login as this Shop\n              </Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...shopInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(null, mapDispatchToProps)(CompanyLoginForm);\n","import React, { FC, useState } from 'react';\nimport UseStyles from '../../styles/LogInStyles';\nimport { bindActionCreators } from 'redux';\nimport { RootState } from '../../redux/store';\nimport { connect } from 'react-redux';\nimport { CompanyState, RegisterCompanyFields } from '../../redux/types/CompanyTypes';\nimport * as companyInteractors from '../../redux/interactors/companyInteractors';\nimport { Button, CssBaseline, TextField, Typography, Card, CircularProgress } from '@material-ui/core';\n\nconst validateEmail = (email: string): boolean => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\ninterface StateProps {\n  company: CompanyState;\n}\n\ninterface DispatchProps {\n  registerCompanyInteractor: typeof companyInteractors.registerCompanyInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  toggleForm: () => void;\n}\n\nconst CompanyRegisterForm: FC<Props> = (props: Props) => {\n  const styles = UseStyles();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n  const { company } = props;\n\n  const onNameChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setName(event.target.value);\n  };\n\n  const onEmailChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = event.target;\n    if (value) {\n      if (!validateEmail(value)) {\n        setEmailError('This must be an email');\n      } else {\n        setEmailError('');\n      }\n    } else {\n      setEmailError('');\n    }\n    setEmail(value);\n  };\n\n  const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = event.target;\n    if (value && value.length <= 7) {\n      setPasswordError('Password must be longer than 7 characters');\n    } else {\n      setPasswordError('');\n    }\n    setPassword(value);\n  };\n\n  const onConfirmPasswordChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = event.target;\n    if (password !== value) {\n      setConfirmPasswordError(\"Passwords don't match\");\n    } else {\n      setConfirmPasswordError('');\n    }\n    setConfirmPassword(value);\n  };\n\n  const handleSubmit = (): void => {\n    const authFields: RegisterCompanyFields = {\n      name,\n      email,\n      password,\n    };\n    props.registerCompanyInteractor(authFields);\n    setName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n  };\n\n  const registerCondition =\n    name && email && !emailError && password && !passwordError && confirmPassword && !confirmPasswordError;\n\n  return (\n    <Card className={styles.popUp} component=\"main\" variant=\"outlined\">\n      <CssBaseline />\n      <div className={styles.paper}>\n        {company.registerCompanyStatus.loading && <CircularProgress />}\n        <Typography component=\"h1\" variant=\"h5\">\n          Company Sign Up\n        </Typography>\n        <div className={styles.form}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Company name\"\n            name=\"name\"\n            autoFocus\n            onChange={onNameChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Company email\"\n            name=\"email\"\n            onChange={onEmailChange}\n          />\n          <Typography variant=\"body2\" className={styles.alertMessage}>\n            {emailError}\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            onChange={onPasswordChange}\n          />\n          <Typography variant=\"body2\" className={styles.alertMessage}>\n            {passwordError}\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"confirmPassword\"\n            label=\"Confirm password\"\n            type=\"password\"\n            id=\"confirmPassword\"\n            onChange={onConfirmPasswordChange}\n          />\n          <Typography variant=\"body2\" className={styles.alertMessage}>\n            {confirmPasswordError}\n          </Typography>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={styles.submit}\n            disabled={!registerCondition}\n            onClick={handleSubmit}>\n            Company Sign Up\n          </Button>\n          {company.registerCompanyStatus.error && (\n            <Typography>An error ocurred, probably the company already exists.</Typography>\n          )}\n        </div>\n      </div>\n      <Button color=\"default\" size=\"small\" onClick={props.toggleForm}>\n        Already have a company, sign in instead\n      </Button>\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    company: state.company,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...companyInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyRegisterForm);\n","import React, { FC, useState, useEffect } from 'react';\nimport { RootState } from '../redux/store';\nimport { connect } from 'react-redux';\nimport { CompanyState } from '../redux/types/CompanyTypes';\nimport CompanyLoginForm from '../components/CompanyAuthComponents/CompanyLoginForm';\nimport ShopsList from '../components/CompanyAuthComponents/ShopsList';\nimport CompanyRegisterForm from '../components/CompanyAuthComponents/CompanyRegisterForm';\nimport { useHistory } from 'react-router-dom';\nimport { SwitchTransition, CSSTransition } from 'react-transition-group';\nimport '../App.css';\n\ninterface StateProps {\n  company: CompanyState;\n}\n\ninterface Props extends StateProps {}\n\nconst CompanyAuth: FC<Props> = (props: Props) => {\n  const { company } = props;\n  const history = useHistory();\n  const nodeRef = React.useRef(null);\n  const [showShops, setShowShops] = useState(false);\n  const [isSigninIn, setIsSigningIn] = useState(true);\n\n  useEffect(() => {\n    // If just logged in, redirect to shop picker\n    if (company.loginCompanyStatus.success) {\n      setShowShops(true);\n    }\n    // If just created account, redirect to home to create a shop\n    // (default admin user is created, same password as company)\n    if (company.registerCompanyStatus.success) {\n      history.replace('/home');\n    }\n  }, [company.loginCompanyStatus, company.registerCompanyStatus]);\n\n  const toggleForm = (): void => {\n    setIsSigningIn(!isSigninIn);\n  };\n\n  return (\n    <>\n      <SwitchTransition mode={'out-in'}>\n        <CSSTransition\n          key={isSigninIn ? 'signinIn' : 'signinUp'}\n          nodeRef={nodeRef}\n          timeout={{ enter: 200, exit: 200 }}\n          classNames=\"fade\">\n          {isSigninIn ? (\n            <div ref={nodeRef}>\n              {showShops ? <ShopsList shops={company.shops} /> : <CompanyLoginForm toggleForm={toggleForm} />}\n            </div>\n          ) : (\n            <div ref={nodeRef}>\n              <CompanyRegisterForm toggleForm={toggleForm} />\n            </div>\n          )}\n        </CSSTransition>\n      </SwitchTransition>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    company: state.company,\n  };\n};\n\nexport default connect(mapStateToProps)(CompanyAuth);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  mainContainer: {\n    margin: '30px auto',\n    height: '70vh',\n    width: '70vw',\n  },\n  section: {\n    position: 'relative',\n    textAlign: 'left',\n    margin: '15px 5px',\n    padding: 5,\n  },\n  buttonContainer: {\n    position: 'absolute',\n    right: 5,\n    bottom: 5,\n  },\n});\n\nexport default useStyles;\n","import React, { FC } from 'react';\nimport { Typography, Button } from '@material-ui/core';\nimport UseStyles from '../../styles/AdministrationPortalStyles';\n\ninterface Props {\n  title: string;\n  body: string;\n  callback: () => void;\n}\n\nconst MenuSection: FC<Props> = (props: Props) => {\n  const styles = UseStyles();\n  const { title, body, callback } = props;\n  return (\n    <div className={styles.section}>\n      <Typography variant=\"h5\" color=\"textPrimary\">\n        {title} Menu\n      </Typography>\n      <Typography variant=\"body1\" color=\"textPrimary\" component=\"p\">\n        {body}\n      </Typography>\n      <div className={styles.buttonContainer}>\n        <Button variant=\"contained\" onClick={callback}>\n          Go to {title} Menu\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default MenuSection;\n","import React, { FC } from 'react';\nimport { Button } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as companyInteractors from '../../redux/interactors/companyInteractors';\nimport * as shopInteractors from '../../redux/interactors/shopInteractors';\nimport * as userInteractors from '../../redux/interactors/userInteractors';\nimport * as catalogueInteractors from '../../redux/interactors/catalogueInteractors';\n\ninterface DispatchProps {\n  logoutCompanyInteractor: typeof companyInteractors.logoutCompanyInteractor;\n  resetShopInteractor: typeof shopInteractors.resetShopInteractor;\n  logoutUserInteractor: typeof userInteractors.logoutUserInteractor;\n  resetCatalogueInteractor: typeof catalogueInteractors.resetCatalogueInteractor;\n}\n\ninterface Props extends DispatchProps {}\n\nconst CompanyLogoutButton: FC<Props> = (props: Props) => {\n  const history = useHistory();\n\n  const companyLogout = (): void => {\n    props.resetShopInteractor();\n    props.logoutUserInteractor();\n    props.resetCatalogueInteractor();\n    props.logoutCompanyInteractor();\n    history.replace('/');\n  };\n  return (\n    <Button variant=\"outlined\" color=\"secondary\" onClick={companyLogout}>\n      Company Logout\n    </Button>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...companyInteractors,\n      ...shopInteractors,\n      ...userInteractors,\n      ...catalogueInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(null, mapDispatchToProps)(CompanyLogoutButton);\n","import React, { FC } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { RootState } from '../redux/store';\nimport { UserState } from '../redux/types/UserTypes';\nimport { Typography } from '@material-ui/core';\nimport UseStyles from '../styles/AdministrationPortalStyles';\nimport MenuSection from '../components/AdministrationPortalComponents/MenuSection';\nimport CompanyLogout from '../components/AdministrationPortalComponents/CompanyLogout';\n\ninterface StateProps {\n  user: UserState;\n}\n\ninterface Props extends StateProps {\n  // extra props you want to add\n}\n\nconst AdministrationPortal: FC<Props> = (props: Props) => {\n  const history = useHistory();\n  const styles = UseStyles();\n  const { user } = props;\n\n  const goToCallsMenu = (): void => {\n    history.push('/administration/calls');\n  };\n\n  const goToCatalogueMenu = (): void => {\n    history.push('/administration/catalogue');\n  };\n\n  const goToStoreMenu = (): void => {\n    history.push('/administration/shop');\n  };\n\n  const goToEmployeesMenu = (): void => {\n    history.push('/administration/employees');\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h2\" color=\"textSecondary\">\n        Administration Portal\n      </Typography>\n      <div className={styles.mainContainer}>\n        <MenuSection\n          title={'Video Calls'}\n          body={'Menu for managing video calls from current store.'}\n          callback={goToCallsMenu}\n        />\n        <MenuSection\n          title={'Catalogue'}\n          body={'Menu for adding, removing or updating products from the main catalogue.'}\n          callback={goToCatalogueMenu}\n        />\n        <MenuSection\n          title={'Shop'}\n          body={'Menu for updating shops, their location, policies and other specifications.'}\n          callback={goToStoreMenu}\n        />\n        {user.sessionType === 'ADMINISTRATOR' && (\n          <MenuSection\n            title={\"Employee's\"}\n            body={\"Menu for updating employee's status and for managing store employees.\"}\n            callback={goToEmployeesMenu}\n          />\n        )}\n        <CompanyLogout />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps)(AdministrationPortal);\n","// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst setSources = async (data: any) => {\n  const { peerConnection, webcamVideo, remoteVideo } = data;\n\n  const localStream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n  const remoteStream = new MediaStream();\n\n  localStream.getTracks().forEach((track: any) => {\n    peerConnection.addTrack(track, localStream);\n  });\n\n  peerConnection.ontrack = (event: any) => {\n    event.streams[0].getTracks().forEach((track: any) => {\n      remoteStream.addTrack(track);\n    });\n  };\n\n  webcamVideo.srcObject = localStream;\n  remoteVideo.srcObject = remoteStream;\n\n  return { localStream, remoteStream };\n};\n\nexport default setSources;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst firestore = firebase.firestore();\n\nexport default firestore;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { ConnectionState } from '../types/ConnectionTypes';\nimport firestore from '../../services/firebase/config';\nimport peerConnection from '../../services/webRTC/config';\n\nconst initialState: ConnectionState = {\n  firestore,\n  peerConnection,\n  localStream: null,\n  remoteStream: null,\n};\n\nconst connection = createSlice({\n  name: 'connection',\n  initialState,\n  reducers: {\n    addLocalStream: (state: ConnectionState, action) => {\n      return {\n        ...state,\n        localStream: action.payload,\n      };\n    },\n    removeLocalStream: (state: ConnectionState) => {\n      return {\n        ...state,\n        localStream: initialState.localStream,\n      };\n    },\n    addRemoteStream: (state: ConnectionState, action) => {\n      return {\n        ...state,\n        remoteStream: action.payload,\n      };\n    },\n    removeRemoteStream: (state: ConnectionState) => {\n      return {\n        ...state,\n        remoteStream: initialState.remoteStream,\n      };\n    },\n    resetStreamConnection: (state: ConnectionState) => {\n      return {\n        ...state,\n        peerConnection: initialState.peerConnection,\n        localStream: initialState.localStream,\n        remoteStream: initialState.remoteStream,\n      };\n    },\n  },\n});\n\nexport const connectionReducer = connection.reducer;\nexport const connectionActions = connection.actions;\n","const servers = {\n  iceServers: [\n    {\n      urls: ['stun:stun1.l.google.com:19302', 'stun:stun2.l.google.com:19302'],\n    },\n  ],\n  iceCandidatePoolSize: 10,\n};\n\nconst peerConnection = new RTCPeerConnection(servers);\n\nexport default peerConnection;\n","import { connectionActions } from '../slices/connectionSlice';\nimport { buildInteractorDirectAction, buildInteractorDirectActionNoParams } from './base';\n\nexport const setLocalStreamInteractor = buildInteractorDirectAction(connectionActions.addLocalStream);\n\nexport const resetLocalStreamInteractor = buildInteractorDirectActionNoParams(connectionActions.removeLocalStream);\n\nexport const setRemoteStreamInteractor = buildInteractorDirectAction(connectionActions.addRemoteStream);\n\nexport const resetRemoteStreamInteractor = buildInteractorDirectActionNoParams(connectionActions.removeRemoteStream);\n\nexport const resetStreamConnectionInteractor = buildInteractorDirectActionNoParams(\n  connectionActions.resetStreamConnection,\n);\n","import React, { FC, useEffect, useRef, useCallback } from 'react';\nimport { Button } from '@material-ui/core';\nimport { RootState } from '../../redux/store';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ConnectionState } from '../../redux/types/ConnectionTypes';\nimport setSources from '../../utils/videoHelpers/setMediaSources';\nimport * as connectionInteractors from '../../redux/interactors/connectionInteractors';\n\ninterface StateProps {\n  connection: ConnectionState;\n}\n\ninterface DispatchProps {\n  setLocalStreamInteractor: typeof connectionInteractors.setLocalStreamInteractor;\n  setRemoteStreamInteractor: typeof connectionInteractors.setRemoteStreamInteractor;\n  resetStreamConnectionInteractor: typeof connectionInteractors.resetStreamConnectionInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  callId: string;\n  setOnCall: any;\n  shopId: string;\n}\n\nconst EmployeeVideoChat: FC<Props> = (props: Props) => {\n  const { callId, shopId } = props;\n  const { firestore, peerConnection } = props.connection;\n  const webcamVideo = useRef<any>();\n  const remoteVideo = useRef<any>();\n\n  useEffect(() => {\n    const data = {\n      peerConnection,\n      webcamVideo: webcamVideo.current,\n      remoteVideo: remoteVideo.current,\n    };\n    if (!props.connection.localStream || !props.connection.remoteStream) {\n      setSources(data).then(({ localStream, remoteStream }) => {\n        props.setLocalStreamInteractor(localStream);\n        props.setRemoteStreamInteractor(remoteStream);\n      });\n    }\n    answerCall();\n    // Cleanup\n    return () => {\n      hangupCall();\n      if (webcamVideo.current && remoteVideo.current) {\n        webcamVideo.current.srcObject = null;\n        remoteVideo.current.srcObject = null;\n      }\n      props.resetStreamConnectionInteractor();\n    };\n  }, []);\n\n  const answerCall = useCallback(async () => {\n    const callDocument = firestore.collection('shopCalls').doc(shopId).collection('calls').doc(callId);\n    const answerCandidates = callDocument.collection('answerCandidates');\n    const offerCandidates = callDocument.collection('offerCandidates');\n\n    peerConnection.onicecandidate = (event: any) => {\n      event.candidate && answerCandidates.add(event.candidate.toJSON());\n    };\n    const callData = (await callDocument.get()).data();\n\n    const offerDescription = callData?.offer;\n    await peerConnection.setRemoteDescription(new RTCSessionDescription(offerDescription));\n\n    const answerDescription = await peerConnection.createAnswer();\n    await peerConnection.setLocalDescription(answerDescription);\n\n    const answer = {\n      type: answerDescription.type,\n      sdp: answerDescription.sdp,\n    };\n    await callDocument.update({ answer, 'status.answered': true });\n\n    offerCandidates.onSnapshot((snapshot) => {\n      snapshot.docChanges().forEach((change) => {\n        if (change.type === 'added') {\n          const data = change.doc.data();\n          peerConnection.addIceCandidate(new RTCIceCandidate(data));\n        }\n      });\n    });\n  }, []);\n\n  const hangupCall = useCallback(async () => {\n    try {\n      console.log('This it a test console log to prevent firestore excessive requests...');\n      await firestore.collection('shopCalls').doc(props.shopId).collection('calls').doc(callId).delete();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      props.setOnCall(null);\n    }\n  }, []);\n\n  return (\n    <div className=\"employee-main-container\">\n      <video className=\"employee-local-video-container\" ref={webcamVideo} autoPlay playsInline></video>\n      <video className=\"employee-remote-video-container\" ref={remoteVideo} autoPlay playsInline></video>\n      <div className=\"employee-button-container\">\n        <Button variant=\"contained\" color=\"secondary\" onClick={hangupCall}>\n          Hangup\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    connection: state.connection,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...connectionInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeVideoChat);\n","import React, { FC, useState, useEffect, useRef } from 'react';\nimport EmployeeVideoChat from '../components/CallsMenuComponents/EmployeeVideoChat';\nimport { Typography, List, ListItem, ListItemText, ListItemIcon, LinearProgress } from '@material-ui/core';\nimport { VideoCall } from '@material-ui/icons';\nimport { RootState } from '../redux/store';\nimport { connect } from 'react-redux';\nimport { ConnectionState } from '../redux/types/ConnectionTypes';\nimport '../styles/css/calls.scss';\ninterface StateProps {\n  connection: ConnectionState;\n  shopId: string;\n}\n\ninterface Props extends StateProps {\n  // extra props you want to add\n}\n\nconst CallsMenu: FC<Props> = (props: Props) => {\n  const { firestore } = props.connection;\n  const [requests, setRequests] = useState<string[]>([]);\n  const [onCall, setOnCall] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const refRequests = useRef<string[]>([]);\n\n  useEffect(() => {\n    console.log('This it a test console log to prevent firestore excessive requests...');\n    const unsubscribe = firestore\n      .collection('shopCalls')\n      .doc(props.shopId)\n      .collection('calls')\n      .onSnapshot((snapshot) => {\n        // If there are changes in the current waiting calls\n        snapshot.docChanges().forEach((change) => {\n          if (change.type === 'added') {\n            refRequests.current.push(change.doc.id);\n            setRequests((oldArray) => [...oldArray, change.doc.id]);\n          }\n          if (change.type === 'modified' || change.type === 'removed') {\n            refRequests.current = refRequests.current.filter((item) => item !== change.doc.id);\n            setRequests(refRequests.current.filter((item) => item !== change.doc.id));\n          }\n        });\n        setLoading(false);\n      });\n    return () => {\n      unsubscribe();\n    };\n  }, [firestore]);\n\n  const answerCall = async (requestId: string): Promise<void> => {\n    // If there's not a call, set it as current call\n    refRequests.current = requests;\n    !onCall && setOnCall(requestId);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h2\" gutterBottom>\n        Call Requests\n      </Typography>\n      <div className=\"requests-container\">\n        <List className=\"list\">\n          {requests.map((request, index) => (\n            <ListItem className=\"item\" button disabled={!!onCall} key={request} onClick={() => answerCall(request)}>\n              <ListItemIcon>\n                <VideoCall />\n              </ListItemIcon>\n              <ListItemText primary={`Answer client ${index + 1} call`} />\n            </ListItem>\n          ))}\n        </List>\n        {loading && <LinearProgress />}\n      </div>\n      {onCall && <EmployeeVideoChat callId={onCall} setOnCall={setOnCall} shopId={props.shopId} />}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    connection: state.connection,\n    shopId: state.shop.id,\n  };\n};\n\nexport default connect(mapStateToProps)(CallsMenu);\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mainContainer: {\n      width: '80%',\n      margin: '8vh auto auto',\n    },\n    heading: {\n      fontSize: '1.1rem',\n      flexBasis: '33.33%',\n      flexShrink: 0,\n      textAlign: 'left',\n    },\n    secondaryHeading: {\n      fontSize: '0.95rem',\n      color: theme.palette.text.secondary,\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      textAlign: 'left',\n    },\n    fab: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\nexport default useStyles;\n","import React, { FC, useState } from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { IconButton, Collapse } from '@material-ui/core';\n\ninterface Props {\n  message: string;\n  openedStateInParent: any;\n}\n\nconst DissmisibleSuccessAlert: FC<Props> = (props: Props) => {\n  const { message, openedStateInParent } = props;\n  const [open, setOpen] = useState(true);\n\n  const handleClose = (): void => {\n    setOpen(false);\n    setTimeout(() => {\n      openedStateInParent(false);\n    }, 2000);\n  };\n\n  return (\n    <div>\n      <Collapse in={open}>\n        <Alert\n          action={\n            <IconButton aria-label=\"close\" color=\"inherit\" size=\"small\" onClick={handleClose}>\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }>\n          {message}\n        </Alert>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default DissmisibleSuccessAlert;\n","const verifyString = (text: string): boolean => {\n  let admissible = true;\n  if (!text.replace(/\\s/g, '').length) {\n    admissible = false;\n  }\n  if (!text) {\n    admissible = false;\n  }\n  return admissible;\n};\n\nexport default verifyString;\n","import React, { FC, useState, useEffect } from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DissmisibleSuccessAlert from '../GeneralUseComponents/DissmissibleSuccessAlert';\nimport useStyles from '../../styles/AccordionMenuStyles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport { ShopState } from '../../redux/types/ShopTypes';\nimport { CatalogueState, ProductPostFields } from '../../redux/types/CatalogueTypes';\nimport * as catalogueInteractors from '../../redux/interactors/catalogueInteractors';\nimport verifyString from '../../utils/globalHelpers/verifyString';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  Divider,\n  AccordionActions,\n  Button,\n  TextField,\n  LinearProgress,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from '@material-ui/core';\n\ninterface StateProps {\n  shop: ShopState;\n  catalogue: CatalogueState;\n}\n\ninterface DispatchProps {\n  addProductToCatalogueInteractor: typeof catalogueInteractors.addProductToCatalogueInteractor;\n  resetCatalogueInteractor: typeof catalogueInteractors.resetCatalogueInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  expanded: string | false;\n  handleChange: (panel: string) => any;\n  panel: string;\n  heading: string;\n  summary: string;\n}\n\nconst CreateProduct: FC<Props> = (props: Props) => {\n  const { expanded, handleChange, panel, heading, summary, shop, catalogue } = props;\n  const [name, setName] = useState('');\n  const [brand, setBrand] = useState('');\n  const [os, setOS] = useState('');\n  const [color, setColor] = useState('');\n  const [inches, setInches] = useState('');\n  const [price, setPrice] = useState('');\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const styles = useStyles();\n\n  useEffect(() => {\n    if (catalogue.addProductToCatalogue.success) {\n      setShowSuccessMessage(true);\n      props.resetCatalogueInteractor();\n    }\n  }, [catalogue.addProductToCatalogue, setShowSuccessMessage, props.resetCatalogueInteractor]);\n\n  const handleCancelCreate = (): void => {\n    setName('');\n    setBrand('');\n    setOS('');\n    setColor('');\n    setInches('');\n    setPrice('');\n  };\n\n  const handleCreate = (): void => {\n    const productAuthFields: ProductPostFields = {\n      shopId: shop.id,\n      name,\n      brand,\n      os,\n      color,\n      inches,\n      price,\n    };\n    props.addProductToCatalogueInteractor(productAuthFields);\n    // Called to reset the state\n    handleCancelCreate();\n  };\n\n  const handleOS = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setOS(event.target.value as string);\n  };\n\n  const fieldsVerified: boolean =\n    verifyString(name) &&\n    verifyString(brand) &&\n    verifyString(os) &&\n    verifyString(color) &&\n    verifyString(inches) &&\n    verifyString(price);\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} expanded={expanded === panel} onChange={handleChange(panel)}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1bh-content\" id=\"panel1bh-header\">\n        <Typography className={styles.heading}>{heading}</Typography>\n        <Typography className={styles.secondaryHeading}>{summary}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <TextField\n          value={name}\n          variant=\"standard\"\n          required\n          fullWidth\n          id=\"name\"\n          label=\"Name\"\n          name=\"name\"\n          onChange={(event) => setName(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <TextField\n          value={brand}\n          variant=\"standard\"\n          required\n          fullWidth\n          id=\"brand\"\n          label=\"Brand\"\n          name=\"brand\"\n          onChange={(event) => setBrand(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <FormControl variant=\"outlined\" className={styles.formControl} fullWidth>\n          <InputLabel id=\"demo-simple-select-outlined-label\">OS</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={os}\n            onChange={(event) => handleOS(event)}\n            label=\"Age\">\n            <MenuItem value={'Android'}>Android</MenuItem>\n            <MenuItem value={'IOS'}>IOS</MenuItem>\n            <MenuItem value={'Windows'}>Windows</MenuItem>\n          </Select>\n        </FormControl>\n      </AccordionDetails>\n      <AccordionDetails>\n        <TextField\n          value={color}\n          variant=\"standard\"\n          required\n          fullWidth\n          id=\"color\"\n          label=\"Device Color\"\n          name=\"color\"\n          onChange={(event) => setColor(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <TextField\n          value={inches}\n          variant=\"standard\"\n          type=\"number\"\n          required\n          fullWidth\n          id=\"inches\"\n          label=\"Inches\"\n          name=\"inches\"\n          onChange={(event) => setInches(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <TextField\n          value={price}\n          variant=\"standard\"\n          type=\"number\"\n          required\n          fullWidth\n          id=\"price\"\n          label=\"Price\"\n          name=\"price\"\n          onChange={(event) => setPrice(event.target.value)}\n        />\n      </AccordionDetails>\n      <Divider />\n      <AccordionActions>\n        <Button size=\"small\" onClick={() => handleCancelCreate()}>\n          Cancel\n        </Button>\n        <Button size=\"small\" color=\"primary\" disabled={!fieldsVerified} onClick={handleCreate}>\n          Create Product\n        </Button>\n      </AccordionActions>\n      {catalogue.addProductToCatalogue.loading && <LinearProgress />}\n      {showSuccessMessage && (\n        <DissmisibleSuccessAlert\n          message={'Product successfully created, you can close this menu now.'}\n          openedStateInParent={setShowSuccessMessage}\n        />\n      )}\n    </Accordion>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    shop: state.shop,\n    catalogue: state.catalogue,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...catalogueInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProduct);\n","import React, { FC, useEffect, useState } from 'react';\nimport { CatalogueState, ProductPostFields } from '../../redux/types/CatalogueTypes';\nimport { ShopState } from '../../redux/types/ShopTypes';\nimport * as catalogueInteractors from '../../redux/interactors/catalogueInteractors';\nimport { RootState } from '../../redux/store';\nimport { bindActionCreators } from '@reduxjs/toolkit';\nimport { connect } from 'react-redux';\nimport { Fab, LinearProgress, Paper, Typography } from '@material-ui/core';\nimport { CSVReader } from 'react-papaparse';\nimport useStyles from '../../styles/AccordionMenuStyles';\nimport { FaFileCsv } from 'react-icons/fa';\nimport DissmisibleSuccessAlert from '../GeneralUseComponents/DissmissibleSuccessAlert';\n\ninterface StateProps {\n  shop: ShopState;\n  catalogue: CatalogueState;\n}\n\ninterface DispatchProps {\n  addProductsToCatalogueInteractor: typeof catalogueInteractors.addProductToCatalogueInteractor;\n  resetCatalogueInteractor: typeof catalogueInteractors.resetCatalogueInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {}\n\nconst CreateProductsCSV: FC<Props> = (props: Props) => {\n  const styles = useStyles();\n  const [csvData, setData] = useState<Array<any> | null>(null);\n  const { shop, catalogue } = props;\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [showErrorMessage, setShowErrorMessage] = useState<string>('');\n\n  useEffect(() => {\n    if (catalogue.addProductsToCatalogue.success) {\n      setShowSuccessMessage(true);\n      props.resetCatalogueInteractor();\n    }\n  }, [catalogue.addProductsToCatalogue, props.resetCatalogueInteractor]);\n\n  const handleOnDrop = (data: any) => {\n    setData(data);\n  };\n\n  const handleOnError = (err: any) => {\n    setShowErrorMessage(`An unexpected error ocurred: ${err}`);\n  };\n\n  function isValid(productAuthFields: ProductPostFields): boolean {\n    let validated = true;\n    Object.values(productAuthFields).forEach((value) => {\n      if (value == undefined || value == '') {\n        validated = false;\n      }\n    });\n    return validated;\n  }\n\n  const handleUpload = (): void => {\n    const products: ProductPostFields[] = [];\n    csvData?.slice(1).forEach((dataRow: { data: any }) => {\n      const productAuthFields: ProductPostFields = {\n        shopId: shop.id,\n        name: dataRow.data[0],\n        brand: dataRow.data[1],\n        os: dataRow.data[2],\n        color: dataRow.data[3],\n        inches: dataRow.data[4],\n        price: dataRow.data[5],\n      };\n      // TODO: check if it's necessary to check if attributes make sense (like os being part of a valid list)\n      if (isValid(productAuthFields)) {\n        products.push(productAuthFields);\n      }\n    });\n    props.addProductsToCatalogueInteractor(products);\n  };\n\n  return (\n    <Paper elevation={1}>\n      <div className=\"flex-container-between\">\n        <Typography className={styles.heading}>Import Products from CSV</Typography>\n        <div className=\"flex-container-evenly\">\n          <CSVReader onDrop={handleOnDrop} onError={handleOnError} addRemoveButton>\n            <span>Drop CSV file here or click to upload.</span>\n          </CSVReader>\n          <Fab color=\"primary\" className={styles.fab} onClick={handleUpload}>\n            <FaFileCsv style={{ fontSize: 30 }} />\n          </Fab>\n        </div>\n      </div>\n      {catalogue.addProductsToCatalogue.loading && <LinearProgress />}\n      {showSuccessMessage && (\n        <DissmisibleSuccessAlert\n          message={'Products successfully created, you can close this menu now.'}\n          openedStateInParent={setShowSuccessMessage}\n        />\n      )}\n      {showErrorMessage}\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    shop: state.shop,\n    catalogue: state.catalogue,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...catalogueInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProductsCSV);\n","import React, { FC, useState, useEffect } from 'react';\nimport useStyles from '../../styles/AccordionMenuStyles';\nimport { CatalogueState, Product } from '../../redux/types/CatalogueTypes';\nimport * as catalogueInteractors from '../../redux/interactors/catalogueInteractors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DissmisibleSuccessAlert from '../GeneralUseComponents/DissmissibleSuccessAlert';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport {\n  Accordion,\n  AccordionSummary,\n  Divider,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Typography,\n  Button,\n  LinearProgress,\n} from '@material-ui/core';\n\ninterface StateProps {\n  catalogue: CatalogueState;\n}\n\ninterface DispatchProps {\n  deleteProductFromCatalogueInteractor: typeof catalogueInteractors.deleteProductFromCatalogueInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  expanded: string | false;\n  handleChange: (panel: string) => any;\n  panel: string;\n  heading: string;\n  summary: string;\n}\n\nconst DeleteProduct: FC<Props> = (props: Props) => {\n  const { expanded, handleChange, panel, heading, summary, catalogue } = props;\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const styles = useStyles();\n\n  useEffect(() => {\n    if (catalogue.deleteProductFromCatalogue.success) {\n      setShowSuccessMessage(true);\n    }\n  }, [catalogue.deleteProductFromCatalogue, setShowSuccessMessage]);\n\n  const handleDelete = (id: string): void => {\n    props.deleteProductFromCatalogueInteractor(id);\n  };\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} expanded={expanded === panel} onChange={handleChange(panel)}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1bh-content\" id=\"panel1bh-header\">\n        <Typography className={styles.heading}>{heading}</Typography>\n        <Typography className={styles.secondaryHeading}>{summary}</Typography>\n      </AccordionSummary>\n      <List dense>\n        {catalogue.products.map((product: Product) => {\n          return (\n            <ListItem key={product.id} button>\n              <ListItemText\n                id={product.id}\n                primary={`${product.name}`}\n                secondary={`Brand: ${product.brand} ${product.os} Color: ${product.color}`}\n              />\n              <ListItemSecondaryAction>\n                <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => handleDelete(product.id)}>\n                  Delete\n                </Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        })}\n      </List>\n      <Divider />\n      {catalogue.deleteProductFromCatalogue.loading && <LinearProgress />}\n      {showSuccessMessage && (\n        <DissmisibleSuccessAlert\n          message={'Product successfully deleted, you can close this menu now.'}\n          openedStateInParent={setShowSuccessMessage}\n        />\n      )}\n    </Accordion>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    catalogue: state.catalogue,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...catalogueInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteProduct);\n","import React, { FC, useState } from 'react';\nimport useStyles from '../styles/AccordionMenuStyles';\nimport CreateSingleProductAccordionRow from '../components/CatalogueMenu/ProductRegister';\nimport CreateProductsCSV from '../components/CatalogueMenu/ProductRegisterCSV';\nimport DeleteProduct from '../components/CatalogueMenu/ProductDelete';\nimport { Button } from '@material-ui/core';\nimport '../styles/css/catalogueMenu.scss';\nimport { useHistory } from 'react-router-dom';\n\nconst CatalogueMenu: FC = () => {\n  const history = useHistory();\n  const styles = useStyles();\n  const [expanded, setExpanded] = useState<string | false>(false);\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const handleChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <>\n      <div className={styles.mainContainer}>\n        <CreateSingleProductAccordionRow\n          expanded={expanded}\n          handleChange={handleChange}\n          panel={'panel1'}\n          heading={'Create Single Product'}\n          summary={'Here you can create a product for this shop, giving all its necesary attributes.'}\n        />\n        <CreateProductsCSV />\n        <DeleteProduct\n          expanded={expanded}\n          handleChange={handleChange}\n          panel={'panel2'}\n          heading={'Delete Product'}\n          summary={'Here you can delete a product from this shop.'}\n        />\n      </div>\n      <div className=\"btn-bottom-left\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            history.go(-1);\n          }}>\n          Back\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default CatalogueMenu;\n","import React, { FC } from 'react';\n\nconst EmployeesMenu: FC = () => {\n  return (\n    <div>\n      <p>Employees Menu</p>\n    </div>\n  );\n};\n\nexport default EmployeesMenu;\n","import React, { FC, useState, useEffect } from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DissmisibleSuccessAlert from '../GeneralUseComponents/DissmissibleSuccessAlert';\nimport useStyles from '../../styles/AccordionMenuStyles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport { CompanyState } from '../../redux/types/CompanyTypes';\nimport { ShopState, PostShopFields } from '../../redux/types/ShopTypes';\nimport * as shopInteractors from '../../redux/interactors/shopInteractors';\nimport verifyString from '../../utils/globalHelpers/verifyString';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  Divider,\n  AccordionActions,\n  Button,\n  TextField,\n  LinearProgress,\n} from '@material-ui/core';\n\ninterface StateProps {\n  company: CompanyState;\n  shop: ShopState;\n}\n\ninterface DispatchProps {\n  addShopInteractor: typeof shopInteractors.addShopInteractor;\n  resetShopStatusInteractor: typeof shopInteractors.resetShopStatusInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  expanded: string | false;\n  handleChange: (panel: string) => any;\n  panel: string;\n  heading: string;\n  summary: string;\n}\n\nconst CreateShop: FC<Props> = (props: Props) => {\n  const {\n    expanded,\n    handleChange,\n    panel,\n    heading,\n    summary,\n    company,\n    shop,\n    addShopInteractor,\n    resetShopStatusInteractor,\n  } = props;\n  const [shopName, setShopName] = useState('');\n  const [shopLocation, setShopLocation] = useState('');\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const styles = useStyles();\n\n  useEffect(() => {\n    if (shop.addShopStatus.success) {\n      setShowSuccessMessage(true);\n      resetShopStatusInteractor();\n    }\n  }, [shop.addShopStatus, setShowSuccessMessage, resetShopStatusInteractor]);\n\n  const handleCancelCreate = (): void => {\n    setShopName('');\n    setShopLocation('');\n  };\n\n  const handleCreate = (): void => {\n    const shopAuthFields: PostShopFields = {\n      companyId: company.id,\n      name: shopName,\n      location: shopLocation,\n    };\n    addShopInteractor(shopAuthFields);\n    // Called to reset the state\n    handleCancelCreate();\n  };\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} expanded={expanded === panel} onChange={handleChange(panel)}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1bh-content\" id=\"panel1bh-header\">\n        <Typography className={styles.heading}>{heading}</Typography>\n        <Typography className={styles.secondaryHeading}>{summary}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <TextField\n          value={shopName}\n          variant=\"standard\"\n          required\n          fullWidth\n          id=\"name\"\n          label=\"Name\"\n          name=\"name\"\n          onChange={(event) => setShopName(event.target.value)}\n        />\n      </AccordionDetails>\n      <AccordionDetails>\n        <TextField\n          value={shopLocation}\n          variant=\"standard\"\n          required\n          fullWidth\n          id=\"location\"\n          label=\"Location\"\n          name=\"location\"\n          onChange={(event) => setShopLocation(event.target.value)}\n        />\n      </AccordionDetails>\n      <Divider />\n      <AccordionActions>\n        <Button size=\"small\" onClick={() => handleCancelCreate()}>\n          Cancel\n        </Button>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          disabled={!(verifyString(shopName) && verifyString(shopLocation))}\n          onClick={handleCreate}>\n          Create Shop\n        </Button>\n      </AccordionActions>\n      {shop.addShopStatus.loading && <LinearProgress />}\n      {showSuccessMessage && (\n        <DissmisibleSuccessAlert\n          message={'Shop successfully created, you can close this menu now.'}\n          openedStateInParent={setShowSuccessMessage}\n        />\n      )}\n    </Accordion>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    company: state.company,\n    shop: state.shop,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...shopInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateShop);\n","import React, { FC, useState } from 'react';\nimport useStyles from '../styles/AccordionMenuStyles';\nimport CreateShopAccordionRow from '../components/ShopMenuComponents/ShopRegister';\nimport { Button } from '@material-ui/core';\n\nconst ShopMenu: FC = () => {\n  const styles = useStyles();\n  const [expanded, setExpanded] = useState<string | false>(false);\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const handleChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <>\n      <div className={styles.mainContainer}>\n        <CreateShopAccordionRow\n          expanded={expanded}\n          handleChange={handleChange}\n          panel={'panel1'}\n          heading={'Create Shop'}\n          summary={'Here you can create a shop, giving all its necesary attributes.'}\n        />\n      </div>\n      <div className=\"btn-bottom-left\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            history.go(-1);\n          }}>\n          Back\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default ShopMenu;\n","import React, { FC, useEffect, useState, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { RootState } from '../redux/store';\nimport { connect } from 'react-redux';\nimport { Product } from '../redux/types/CatalogueTypes';\nimport { Typography, Button } from '@material-ui/core';\nimport '../styles/css/productDetails.scss';\n\ninterface StateProps {\n  products: Product[];\n}\n\ninterface Props extends StateProps {\n  // extra props you want to add\n}\n\nconst ProductDetails: FC<Props> = (props: Props) => {\n  const { products } = props;\n  const history = useHistory();\n  const [product, setProduct] = useState<Product | undefined>();\n  const productId = window.location.pathname.split('/')[3];\n\n  // Gets product id from the url and with that, gets the product stored in redux\n  useEffect(() => {\n    if (product?.id !== productId) {\n      const filteredProduct = products.find((elem) => {\n        return elem.id === productId;\n      });\n      setProduct(filteredProduct);\n    }\n  }, [product]);\n\n  const goToCallScreen = useCallback(() => {\n    history.push('/home/call');\n  }, []);\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"details-container\">\n        <Typography className=\"title\" variant=\"h3\">\n          Device Details\n        </Typography>\n        <div className=\"detail\">\n          <Typography className=\"detail-label\" variant=\"h5\" gutterBottom>\n            Name:\n          </Typography>\n          <Typography className=\"detail-body\" variant=\"h6\" gutterBottom>\n            {product?.name}\n          </Typography>\n        </div>\n        <div className=\"detail\">\n          <Typography className=\"detail-label\" variant=\"h5\" gutterBottom>\n            Brand:\n          </Typography>\n          <Typography className=\"detail-body\" variant=\"h6\" gutterBottom>\n            {product?.brand}\n          </Typography>\n        </div>\n        <div className=\"detail\">\n          <Typography className=\"detail-label\" variant=\"h5\" gutterBottom>\n            Color:\n          </Typography>\n          <Typography className=\"detail-body\" variant=\"h6\" gutterBottom>\n            {product?.color}\n          </Typography>\n        </div>\n        <div className=\"detail\">\n          <Typography className=\"detail-label\" variant=\"h5\" gutterBottom>\n            Screen Inches:\n          </Typography>\n          <Typography className=\"detail-body\" variant=\"h6\" gutterBottom>\n            {product?.inches}\n          </Typography>\n        </div>\n        <div className=\"detail\">\n          <Typography className=\"detail-label\" variant=\"h5\" gutterBottom>\n            Operative System:\n          </Typography>\n          <Typography className=\"detail-body\" variant=\"h6\" gutterBottom>\n            {product?.os}\n          </Typography>\n        </div>\n        <div className=\"detail\">\n          <Typography className=\"detail-label\" variant=\"h5\" gutterBottom>\n            Price:\n          </Typography>\n          <Typography className=\"detail-body\" variant=\"h6\" gutterBottom>\n            {product?.price} CLP\n          </Typography>\n        </div>\n        <Button size=\"small\" onClick={() => goToCallScreen()}>\n          Get Assistance\n        </Button>\n      </div>\n      <div className=\"photo-container\"></div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    products: state.catalogue.products,\n  };\n};\n\nexport default connect(mapStateToProps)(ProductDetails);\n","import React, { FC, useEffect, useState, useRef, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, ButtonGroup, LinearProgress } from '@material-ui/core';\nimport { RootState } from '../../redux/store';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ConnectionState } from '../../redux/types/ConnectionTypes';\nimport setSources from '../../utils/videoHelpers/setMediaSources';\nimport * as connectionInteractors from '../../redux/interactors/connectionInteractors';\n\ninterface StateProps {\n  connection: ConnectionState;\n  shopId: string;\n}\n\ninterface DispatchProps {\n  setLocalStreamInteractor: typeof connectionInteractors.setLocalStreamInteractor;\n  setRemoteStreamInteractor: typeof connectionInteractors.setRemoteStreamInteractor;\n  resetStreamConnectionInteractor: typeof connectionInteractors.resetStreamConnectionInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  // extra props you want to add\n}\n\nconst CustomerVideoChat: FC<Props> = (props: Props) => {\n  const { firestore, peerConnection } = props.connection;\n  const history = useHistory();\n  const webcamVideo = useRef<any>();\n  const remoteVideo = useRef<any>();\n  const callInput = useRef<string>();\n  const [isOnCall, setIsOnCall] = useState(false);\n  const [calling, setCalling] = useState(false);\n\n  useEffect(() => {\n    console.log('This it a test console log to prevent firestore excessive requests...');\n    firestore.collection('shopCalls').doc(props.shopId).set({ updatedAt: new Date() });\n    const data = {\n      peerConnection,\n      webcamVideo: webcamVideo.current,\n      remoteVideo: remoteVideo.current,\n    };\n    setSources(data).then(({ localStream, remoteStream }) => {\n      props.setLocalStreamInteractor(localStream);\n      props.setRemoteStreamInteractor(remoteStream);\n    });\n    // Cleanup\n    return () => {\n      if (webcamVideo.current && remoteVideo.current) {\n        webcamVideo.current.srcObject = null;\n        remoteVideo.current.srcObject = null;\n      }\n      props.resetStreamConnectionInteractor();\n    };\n  }, []);\n\n  const startCall = async () => {\n    // Create document with two sub collections in the current shop with shopId\n    const callsDocument = firestore.collection('shopCalls').doc(props.shopId).collection('calls').doc();\n    const offerCandidates = callsDocument?.collection('offerCandidates');\n    const answerCandidates = callsDocument?.collection('answerCandidates');\n    callInput.current = callsDocument.id;\n    setCalling(true);\n    setIsOnCall(true);\n\n    // Get candidates for caller, save to db\n    peerConnection.onicecandidate = (event: any) => {\n      event.candidate && offerCandidates.add(event.candidate.toJSON());\n    };\n\n    // Create call offer with offer and status\n    const offerDescription = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offerDescription);\n    const offer = {\n      sdp: offerDescription.sdp,\n      type: offerDescription.type,\n    };\n    const status = {\n      answered: false,\n      date: new Date(),\n    };\n    await callsDocument.set({ offer, status });\n\n    // Listen for remote answer\n    callsDocument.onSnapshot((snapshot) => {\n      const data = snapshot.data();\n      if (!peerConnection.currentRemoteDescription && data?.answer) {\n        const answerDescription = new RTCSessionDescription(data.answer);\n        peerConnection.setRemoteDescription(answerDescription);\n      }\n    });\n\n    // When answered, add candidate to peer connection\n    answerCandidates.onSnapshot((snapshot) => {\n      snapshot.docChanges().forEach((change) => {\n        if (change.type === 'added') {\n          const candidate = new RTCIceCandidate(change.doc.data());\n          peerConnection.addIceCandidate(candidate);\n          setCalling(false);\n        }\n      });\n    });\n  };\n\n  const hangupCall = useCallback(async () => {\n    setIsOnCall(false);\n    try {\n      // Deleting collections is not recommended from web client, find alternative later\n      await firestore.collection('shopCalls').doc(props.shopId).collection('calls').doc(callInput.current).delete();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      history.go(-1);\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"customer-main-container\">\n        <video className=\"local-video-container\" ref={webcamVideo} autoPlay playsInline></video>\n        <video className=\"remote-video-container\" ref={remoteVideo} autoPlay playsInline></video>\n        <div className=\"customer-button-container\">\n          <ButtonGroup\n            orientation=\"vertical\"\n            color=\"primary\"\n            aria-label=\"vertical contained primary button group\"\n            variant=\"contained\">\n            <Button size=\"small\" variant=\"contained\" color=\"primary\" disabled={isOnCall} onClick={startCall}>\n              Call Assistant\n            </Button>\n            <Button size=\"small\" variant=\"contained\" color=\"secondary\" disabled={!isOnCall} onClick={hangupCall}>\n              Hangup\n            </Button>\n          </ButtonGroup>\n        </div>\n      </div>\n      {calling && <LinearProgress />}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    connection: state.connection,\n    shopId: state.shop.id,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...connectionInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerVideoChat);\n","import React, { FC } from 'react';\nimport CustomerVideoChat from '../components/CustomerCallScreenComponents/CustomerVideoChat';\nimport '../styles/css/calls.scss';\n\nconst CustomerCall: FC = () => {\n  return (\n    <>\n      <h1>Getting Assistance</h1>\n      <div className=\"customer-call-container\">\n        <CustomerVideoChat />\n      </div>\n    </>\n  );\n};\n\nexport default CustomerCall;\n","import React, { FC } from 'react';\nimport * as userInteractors from '../redux/interactors/userInteractors';\nimport * as modalInteractors from '../redux/interactors/modalInteractors';\nimport { UserState } from '../redux/types/UserTypes';\nimport { CompanyState } from '../redux/types/CompanyTypes';\nimport { bindActionCreators } from '@reduxjs/toolkit';\nimport { RootState } from '../redux/store';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport '../styles/css/layout.scss';\n\ninterface StateProps {\n  user: UserState;\n  company: CompanyState;\n}\n\ninterface DispatchProps {\n  logoutUserInteractor: typeof userInteractors.logoutUserInteractor;\n  showPopUpInteractor: typeof modalInteractors.showPopUpInteractor;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  // extra props you want to add\n}\n\nconst SidebarOptions: FC<Props> = (props: Props) => {\n  const { user, company } = props;\n  const history = useHistory();\n  const goToHomePage = (): void => {\n    history.replace('/home');\n  };\n\n  const goToAdministrationPortal = (): void => {\n    history.replace('/administration');\n  };\n  return (\n    <div className=\"options\">\n      {company.id && (\n        <Button color=\"inherit\" onClick={goToHomePage}>\n          Home\n        </Button>\n      )}\n      {user.sessionType !== 'ANONYMOUS' && (\n        <Button color=\"inherit\" onClick={goToAdministrationPortal}>\n          Administration\n        </Button>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    user: state.user,\n    company: state.company,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\n  ...bindActionCreators(\n    {\n      ...userInteractors,\n      ...modalInteractors,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarOptions);\n","import React, { FC, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { RootState } from '../redux/store';\nimport { UserState } from '../redux/types/UserTypes';\nimport Home from '../screens/Home';\nimport NavBar from './NavBar';\nimport { useSelector } from 'react-redux';\nimport CompanyAuth from '../screens/CompanyAuth';\nimport AdministrationPortal from '../screens/AdministrationPortal';\nimport CallsMenu from '../screens/CallsMenu';\nimport CatalogueMenu from '../screens/CatalogueMenu';\nimport EmployeesMenu from '../screens/EmployeesMenu';\nimport ShopMenu from '../screens/ShopMenu';\nimport ProductDetails from '../screens/ProductDetails';\nimport CustomerCallScreen from '../screens/CustomerCallScreen';\nimport { IconButton, makeStyles } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport '../styles/css/layout.scss';\nimport SidebarOptions from './SidebarOptions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'left',\n  },\n}));\n\n// eslint-disable-next-line react/prop-types\nconst EmployeeRoute: FC<any> = ({ component: Component, ...rest }) => {\n  const user = useSelector<RootState, UserState>((state) => state.user);\n  return (\n    <Route\n      {...rest}\n      render={(props) => (user.sessionType !== 'ANONYMOUS' ? <Component {...props} /> : <Redirect to=\"/home\" />)}\n    />\n  );\n};\n\n// eslint-disable-next-line react/prop-types\nconst AdministratorRoute: FC<any> = ({ component: Component, ...rest }) => {\n  const user = useSelector<RootState, UserState>((state) => state.user);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user.sessionType === 'ADMINISTRATOR' ? <Component {...props} /> : <Redirect to=\"/administration\" />\n      }\n    />\n  );\n};\n\nconst Routes: FC = () => {\n  const styles = useStyles();\n  const [leftOpen, setLeftOpen] = useState(false);\n  const [isOpen, setOpen] = useState(leftOpen ? 'open' : 'closed');\n  const toggleSidebar = () => {\n    setLeftOpen(!leftOpen);\n    setOpen(leftOpen ? 'open' : 'closed');\n  };\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div id=\"layout\">\n        <div id=\"left\" className={isOpen}>\n          <IconButton\n            edge=\"start\"\n            className={`icon ${styles.menuButton}`}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleSidebar}>\n            <MenuIcon />\n          </IconButton>\n          <div className={`sidebar ${isOpen}`}>\n            <div className=\"content\">\n              <SidebarOptions />\n            </div>\n          </div>\n        </div>\n        <div id=\"main\">\n          <div className=\"header\">\n            <div\n              className={`\n                          title\n                          ${'left-' + isOpen}\n                      `}>\n              <NavBar />\n            </div>\n          </div>\n          <div className=\"content\" id=\"page\">\n            <Switch>\n              <Route path=\"/\" exact component={CompanyAuth} />\n              <Route path=\"/home\" exact component={Home} />\n              <Route path=\"/home/call\" exact component={CustomerCallScreen} />\n              <Route path=\"/product/:id/details\" exact component={ProductDetails} />\n              <EmployeeRoute path=\"/administration\" exact component={AdministrationPortal} />\n              <EmployeeRoute path=\"/administration/calls\" exact component={CallsMenu} />\n              <EmployeeRoute path=\"/administration/catalogue\" exact component={CatalogueMenu} />\n              <EmployeeRoute path=\"/administration/shop\" exact component={ShopMenu} />\n              <AdministratorRoute path=\"/administration/employees\" exact component={EmployeesMenu} />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import React, { FC } from 'react';\nimport Routes from './navigation/Routes';\nimport './App.css';\n\nexport const App: FC = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </div>\n  );\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport { userReducer } from './slices/userSlice';\nimport { modalReducer } from './slices/modalSlice';\nimport { catalogueReducer } from './slices/catalogueSlice';\nimport { companyReducer } from './slices/companySlice';\nimport { shopReducer } from './slices/shopSlice';\nimport { connectionReducer } from './slices/connectionSlice';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport storage from 'redux-persist/lib/storage';\n\n// Parts of the state you want to persist\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['company', 'user', 'shop', 'catalogue'],\n};\n\n// Add new reducers here\nconst RootReducer = combineReducers({\n  user: userReducer,\n  modal: modalReducer,\n  catalogue: catalogueReducer,\n  company: companyReducer,\n  shop: shopReducer,\n  connection: connectionReducer,\n});\n\nconst RootReducerPersistor = persistReducer(persistConfig, RootReducer);\n\n// Export the store to use it in the app\nexport const store = createStore(RootReducerPersistor, composeWithDevTools(applyMiddleware(thunk)));\n\nexport const storePersistor = persistStore(store);\n\nexport type RootState = ReturnType<typeof RootReducerPersistor>;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\nimport { store, storePersistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst history = createBrowserHistory();\nconst root = document.getElementById('root');\nconst path = (/#!(\\/.*)$/.exec(window.location.hash) || [])[1];\nif (path) {\n  history.replace(path);\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={storePersistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  root,\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}