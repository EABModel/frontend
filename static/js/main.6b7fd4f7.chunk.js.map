{"version":3,"sources":["components/CatalogCard.tsx","components/Catalog.tsx","components/Home.tsx","components/About.tsx","components/Routes.tsx","components/NavBar.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","app/store.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","root","maxWidth","media","height","titleTypography","secondaryTypograph","CatalogCard","specs","classes","Card","className","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","name","color","brand","os","inches","CardActions","Button","size","defaultProps","specs2","specs3","specs4","specs5","specs6","theme","createStyles","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","catalogContainer","width","margin","cardContainer","boxShadow","Catalog","Box","display","flexWrap","justifyContent","m","p","bgcolor","Home","About","history","useHistory","type","onClick","push","Routes","basename","process","path","exact","menuButton","marginRight","NavBar","AppBar","position","Toolbar","IconButton","edge","aria-label","App","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","document","getElementById","exec","hash","replace","ReactDOM","render","StrictMode","CookiesProvider","URL","href","origin","addEventListener","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.6b7fd4f7.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n  titleTypography: {\n\n  },\n  secondaryTypograph: {\n\n  },\n});\n\ninterface Props {\n  specs: {\n    name: string,\n    brand: string,\n    os: string,\n    color: string,\n    inches: number\n  }\n}\n\nexport default function CatalogCard({ specs }: Props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia className={classes.media} image=\"\" title=\"Device\" />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {specs.name}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n            {specs.brand}\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\">\n            {specs.os} {specs.color}\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\">\n            {specs.inches} inches display\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            These phones are really good, buy them now.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Buy\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Details\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nCatalogCard.defaultProps = {\n  specs: {}\n};","import React from 'react';\nimport CatalogCard from './CatalogCard';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n\n\nconst specs = {\n  name: 'IPhone XR',\n  brand: 'Apple',\n  os: 'iOS',\n  color: 'Space Gray',\n  inches: 4\n};\n\nconst specs2 = {\n  name: 'IPhone 8',\n  brand: 'Apple',\n  os: 'iOS',\n  color: 'White',\n  inches: 5\n};\n\nconst specs3 = {\n  name: 'Huawei Mate 20 Light',\n  brand: 'Huawei',\n  os: 'Android',\n  color: 'Black',\n  inches: 5\n};\n\nconst specs4 = {\n  name: 'Samsung Galaxy S10',\n  brand: 'Samsung',\n  os: 'Android',\n  color: 'Gray',\n  inches: 4\n};\n\nconst specs5 = {\n  name: 'Pixel 2',\n  brand: 'Samsun',\n  os: 'Android',\n  color: 'White',\n  inches: 4\n};\n\nconst specs6 = {\n  name: 'IPhone 12',\n  brand: 'Apple',\n  os: 'iOS',\n  color: 'Space Gray',\n  inches: 5\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n    catalogContainer: {\n      width: '50wh',\n      height: '50vh',\n      margin: 'auto',\n    },\n    cardContainer: {\n      margin: '5%',\n      boxShadow: '8px 10px 19px 3px rgba(0,0,0,0.31)',\n    },\n  }),\n);\n\nfunction Catalog() {\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" flexWrap='wrap' justifyContent=\"space-evenly\" m={1} p={1} bgcolor=\"background.paper\">\n      <Box className={classes.cardContainer}>\n        <CatalogCard specs={specs} />\n      </Box>\n      <Box className={classes.cardContainer}>\n        <CatalogCard specs={specs2} />\n      </Box>\n      <Box className={classes.cardContainer}>\n        <CatalogCard specs={specs3} />\n      </Box>\n      <Box className={classes.cardContainer}>\n        <CatalogCard specs={specs4} />\n      </Box>\n      <Box className={classes.cardContainer}>\n        <CatalogCard specs={specs5} />\n      </Box>\n      <Box className={classes.cardContainer}>\n        <CatalogCard specs={specs6} />\n      </Box>\n    </Box>\n  );\n}\n\nexport default Catalog;","import React from 'react';\nimport Catalog from './Catalog';\n\n\nfunction Home() {\n  \n  // const history = useHistory();\n\n  // const goToAboutPage = () => {\n  //   history.push('/about');\n  // }\n\n  return (\n    <div>\n      <Catalog />\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nfunction About() {\n  const history = useHistory();\n\n  const goToHomePage = () => {\n    history.push('/');\n  }\n  return (\n    <div>\n      <p>This is an about page</p>\n      <button type=\"button\" onClick={goToHomePage}>\n          Go back\n      </button>\n    </div>\n  );\n}\n\nexport default About;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport About from './About';\n\n\nfunction Routes() {\n  return (\n    <div>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/about' exact component={About} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default Routes;","import React from 'react';\nimport { AppBar, Button, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction NavBar() {\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t\t\t\t\tNews\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Button color=\"inherit\">Login</Button>\n\t\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>)\n}\n\nexport default NavBar;","import React from 'react';\nimport Routes from './components/Routes';\nimport NavBar from './components/NavBar';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <header className=\"App-header\">\n        <NavBar />\n      </header>\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { CookiesProvider } from \"react-cookie\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst history = createBrowserHistory();\nlet root = document.getElementById('root');\n\nconst path = (/#!(\\/.*)$/.exec(window.location.hash) || [])[1];\n\nif (path) {\n  history.replace(path);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <CookiesProvider>\n        <App />\n      </CookiesProvider>\n    </Provider>\n  </React.StrictMode>,\n  root\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}